%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writeup2.dvi
%%CreationDate: Thu May 18 17:43:12 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writeup2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.18:1743
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E064C03
13C2E5064E4FB036548B136509EAD0C04A594063FBA595F296555F5D156E50C6
1D617B33080C0E47AF352C1C7FC94844B7F1377249009D2D580F94670F712EBF
BB73FDB78A1433ECE1919743D6EAD77F73D0E7E96A5B1A0999FC9F66362DBF8E
C5744C5E9D4F762F22E574D98CB128A41E79FE7016361FC2B96FBE72B0808990
0A76E6B4D1B65C08F196875945EFEC46EB42B942EB41440095D3969EFD0EB610
000BC56D07A76A1B5BF4614BBE12907B38CF060CD965AE8E243E2978227E467A
5E7388CC3449187B9C7323B99CC1739E2E1F1DC0A0F77CC4013B7A315042CC43
3B52B89AEDDF0E8BFF5C9DBA24A0C4DA916C97CE933033FF0110524C73D0BF5A
CCDB6A894F22066533C903205C4C64FD6DDEF0049C2F0450E61177D87A290C9F
B97DF258F6029826EF5D0FDF9D3F56334554034125BB18E51FDC7809055FFBB2
6E0FB8A82E66904F09618751CF668AF2C8A673BDFBD689C356F77E850B7A6FFD
E0F0F5E6CF099974552E830B19DDF9B867A36EE90C7C5BD059EBC38855B8DD39
DF19E2391A9789F0A4F382ACA7BE53BE7437B82402CE0194AC44C5BFE70D7DBD
D088965E172526B18079BA67531079A9AB8E99D7B9BE1B2C75F6C18842909EE5
B9EC66380D42867AFBB8D2F23F47C156296497CB87249FA124CC8CFE800FE0FF
A8BEACBEFBD29832A76E6BA0885BBDC47D7862055B9C28383045E49209CEC6EF
6748909DDB1A4EACC32CE65783DE6B527BD1A2F05F2095D8B59E1C466E09FA14
134304593361765F99931037AA610401949DBCE0DC85F648ED026E00233A72E0
14DAB97003588555CE497253FE60F1152566C86C7DB640ED93B11CB5B45683AB
FC81CF2647ABB7EA801DEE315EFB8E8EFC8E9C5870E829B52669EC72E24E6D5B
95653D4983494E70B07AB01C67D1E48DF7DEA0F5A7CE988D4E593F630C20D28E
B4DBF10D3AE79E2F88002B8B2D1B18FD88B38D54FD86410AD6935A3B4E7D0218
70DC9856A2DC9B0390B99FD950A5F978CB4A670DF9EB7782C7218A1C8FB19167
4A1627AB538FF1A96FC49C0D2BE179653A45C0B73263DB2D2FFF1B928CAC5C79
3EC30010D8AA8721296E1FA6C268EBECC218A75FDF3EF8668BA9D9612965796D
AD71221E0A1FCCA6566FFBA328634BB276D4E9ED959FA6D33741424F74ACE654
476173B2EE5A6155641AAEDA0967095C1B21A05EB9CA107079C4DEFF9E78469B
4A1D5DC837E613E8979792D9BC9CE2D994E3E7A90BA080CDEA6F2649C79115E9
0095B29B0BBD7D3074F6CF5F92C4D4BCF0C3CB95773585EA3DA426C455454A37
1B6561AB64C329BADDB6CD2419679653F3EC27CDEFAB146BBA6B66E7DF6A3DD1
E9CBE530D8BE0D54CBF3B27175BF1615D7BD04A97645D9480B85E4768C07942E
2B7E39917C47061E6174769AA168DA625DDF6C80D9FC661E95ECA39D966EE16D
7332342958E08534BAFB0CCAA1F7C80FF152CC8055BD6E468BCAC0F2620888DD
B99F74CCCFA0EE129505DFE17E5837AD0F5FA8F548576934C25AC50217F5BF80
02D0DFB3EC4502F757704026F1AAF10ACEE052E906FF1892E82DCF26F8CDE3F9
9F381284F96E2010F28ACF084075FE495D6FBBE5C35D4509810D67666800BB0F
F6769729BC3B54B62DECA2E08C7F1C76A73FD56E9AE8ABA439E25304BB205453
79540C65172755356AC8FD365CFB4063733107CAB30BEF6EADF2D732E672F974
990F996AB480CF703D6C576393C364D63945F51DB8489CDE84C0D8B950DF08D2
15AFC74C2064F33FB3F9D197B2D2BFC260F34575B3AF2D938D58E1C256BDF53D
151410B1AAE5157B0B089CAA6788B017B774D8AB7311A08FAB6F4CCA034988E2
2A79DD34A7EE8697DEE39293128046BACFEE9BD3FDEC9AC365E314D0E77334AF
AEC0E976268A180441F6BF4392373457652A532032D555E18804A85026A2356E
28073DE10734D71D1AAF8D52B71E5CD4B527ADF40CF8DC7AB5AE8D6932A3CE1E
30A6E71B3C2C23052BECFE807EBF96D8DE684161E8ED6719500D558181532F9F
42B0C08768F8F3A73AD90713FD31F44ED18DD135867CD5683FBE5C874DB3AA0F
25A44A5BD23F89F4D6107517335B6EE7781E0308254788CC0090A76F3141DE3C
364879B9D91DE8103BC0D28490281FD2A640C16CCFAA351F4D775F01E89C9237
58BB55FB5B6ED7615A9E7564FB2494DC5164B28DD0BB90451CB5CBD653CCC848
55072D110657A29D5ECEDE6BFD5A6FAFF90C5E1CBDC9EDA20971FE152DA070F4
7D9124264BD15AA66BE7FA504D7DC822367733D1F17805E00968980BD06F354E
1EBCDC92D36F23343B7C852D98BF061ECC07EAB7803E523369BF81AAD6751AC6
F5FFBF2E80E96F2E2E3D30ACA5E9963910C682E213F31CE6FF67807CC5CC0CF9
E7833E339C380CF8363C9FB10B42184EBEF04CCAF20C0D3AF7E369C2FAFF281D
2CBA61734270E920908CCDD6E426ED6DD8A433365E5A6BD8CD84C4A380955424
93D84D119E1228A6FF88BF3F58713C408D42216B4918545AD7EAE1F373029E6C
FF707759A8862DB807165C1D1799E920CC64E743DA3B4B00F3B6F2282CC04CEC
4C1207E7666615833BDB1A4D8743E9AB89D3E1D34D64BED706A786F37AD2C99C
5ACD82F41B562C65A24D2C8AF0C76BF7BC93E69A71EE9C6A2442C820F1CBDA9A
AC487F7FDB263798E87814D43454BDFB0C4468FA80647A576971BE6CBC165D06
E72A92A84A2428EFF04015D2FDBB81FD7C475E29366F7EE25AE1533920FF3B29
545B5F1BB31C5B809F897B44C97C7C456AA844D1C567448944D147A4F8060600
3355EB9656D5CBD67E96D620601EF110080AD18D7A9F5374F59995095323A575
A321D8C57645C7579C3535D54501D1410A4002CC9903C1D8E4E055D13C73E7B6
D516E3A34357FAF436BA032F6E94A5D2407021B4690516999B275AC9B628A0EF
6E65B952EEECB1E3A4E3CB9FEE76F9FAD5ACF3E161FCC08B7D8068FB460751C0
25AA4FD268B13D19CC7D81E78D70C84C5F3BCA1A852A6733238AAFA995B11E88
1ADF270D929741E6211AB5E9ED12E960EFF4A3AA21FECFA9765AAF218BEFD219
B45ABF108662C07D8C7704A84B28E25DF8BD3C6129CC230E453EAF0CD3BCA3C8
40423997733B13E018084C94D913D83A60E46D83819F782479ACF7C62A3B2A15
51A46C01A78F78418936F3D64E268BF16CD9FB215FDAD05C9353635E8089A23C
2734A4CD80B381D08A78C8313305741EA52A5026FD882549598524289F9EDDFC
547E9F08F34AC1B3B78167ECFCD16912FB0B83B7B9981E3583E32CB2CC0FD317
EDBBB2878D5468B17355E3A47D4B2A3FFAEE17A3495589CDF80EA1CA5D3A8F1C
3B44AFF9AE355FDD529DBA87DE1E4E5774FB9CF0961C0BCC07CB31FAFF49B58E
84F64E80F72838FF83CAD2FFE96EC650861B31EE60B0A192D0D1A1ADD14015EB
C57EF1EB6685C427322E417B70DBE199AE24F45A7A7B396095AD81387370DA6B
6072E1E36795CED7845A380205970419CE60DA8A9726F094CBC0960322B5024B
C7B048264EA4F4FE9DD98C3B02BC00AEAE0208B7BC6DE483B9D346381C1813DB
B44E54345A7B2D576D8996370744C726BA609CF295808D860936BAE30032BABD
BE7A3D2F2FA7FB490EA2D018475C19F82DE19A72124B3C2A06809DE9B082E199
B55C070C0DB61C009AB2BE60A97B33508B5F71549A0F52AFE5A403A6E1F483ED
D31ADE944C4A5694E339231F3BCC6A43295E4702521DF0228EACEC8621A86915
610857F095399BA5915221D558E40D12768AEA758B9E634101E8399F04DA2D97
D978E775FAB1A3902D2DB91FB85DB4DE1CDAF98E0E9B0F6F52D59B9E7DAE88D7
62D508298AAAF653131CE6E8567BF0C445488F9C518170CA3FD9220E96021CF4
9536A2DA3F88A27F3410B29D7849C6137FDD6541AE10F5AABDAED01A43170E2D
389FF570CF122ADDAED09DF5E1985BC8B7FF58A388147DB9B7BC0CA837650413
7A8F6CA2898D5562501CB08C1A4280AD453F205545E44189E1593780A627E175
7691F12F9AA58AB6E6D645E1F86FC84A946A2ACFB4808C4262422D04EE5E3AF1
4D49252DF929A306B89AFE8F0A8B46376E5A6272AD3F44F49386C2A81BE1F5C7
DE9ABD4F381E1D26B49B22F88D1F14153BC4509A0355E4E9B66DF157E83C6F88
0A58B880350B793075BD386274E9BEB3D87B4DC28E835862EBA590ADFA5C083D
902F01183BE11AC7ABA656C69DFF0AC2EC11752CD670B6784C48166C1D49B005
FA497976DB1EAF3BF78C20FD289E30BE8A9AFD36D34F8C7C8F8317D75DA774D0
7CAAF42D2AED240413EC2A31C1CA0E5EA369A1480B04B5D0F88B4B65B17BBABA
F6B52A80E26D4264BB4CB8E44BCF7D3CE05B7686B7EFBDAD44B17CD9C4AAFBC2
42D6E68F05DCC07DA871600E9675B8B81B7968EE374D106EC7163766EEA79FB2
F50185206BAFEBB7EBB460802E5F87E3BEFE5D5D8A4BC44C7E8595B90E2CD4B0
BCB27B24C14FDFAFBAF6D22BECD56F2118FC4B92F6448406DFE7D3ADBAF79CAE
45A834158580A59F4C9E96CE341C5796847B6493D634900F0DAAD378F877D90B
1ECD4311966C933D93BBB5F990C4C34436D00BEABFA7F3A96B64CBFF3AF612D9
895675246766153EE3D215C8265B3582950B2CB55E4716F80BBC1FF41D798123
CF97D0CBCB8AD8DC4E17D80D903FBA1C0C5F839B6423F9CB3C9DEB3C5A666897
900B44CC26D3E1C6BFCD747FBB64E91C13AA9BBAEC2BC00A80BEF62B6AB52E00
B0B207BC3AAB91491150ABC6E48991DC4DEC01E74990F933A5E373807A7575B5
E64EFD11DF012E9C24117B611E456EA83A26079100ECD732227ADEBDCC967A59
F415D210A441D885F85583FD0756BFD6CE369BA98C5EFFE251412D9D452241F3
6300921764FADE9AD2D4CD135D1AE1328C8527568E1C2822587E78C412B7F04C
3C9763450158EC39E3F44CE5D78C4092E63E272100D3BCEA7970FCA56ED2B3EF
6C52B957F2219EA201819C6A608AF02F87A48C0671CBABB0F0042D757A507009
D8A3E9B01FEC4784299F385707F044CF8A455529309929227E4A6B229A29CD18
4FC4FDFC1936B27627E7C96EC82D9B6A3349192C5DEDF4977E86E6F17BE4F317
AA1426EA8CCDA25AF9E543CFD6DB9220753597C99211BDB0C4970DD78F1B17E7
BE383680887BD74A1EB13073FA320AD43DAEAAFA34164FD50EE1E42A0FB455E5
0EB81F3783F4D6519ED04DD7E5E472903ED861D7A047D647A1073776A21D7CC7
DADDBC3AA8FB45A0665B61CA50754B06DD80B0F426E1AFDF9453C82BCDB4375A
4317D2CD36D695A5D89F8B817420490108DE2BA3282A4A817911BD28508D5A22
F910E52F9BD8742EA9CF95E2B2D76ACD25C7C1DD9A0CC1C415491115E38AAA86
13BBB0D81E194BA2C46E3726A0A460C74C59377E471FD27C0E17DA4B9ECAC16C
44E18B494CDA5DB3D728D4D5A1361551B4800827F5F2CD8EB40E7C2474F13718
B527C5A6B278E4BF9B48C86FCA7E0911A4154A52E19EDC1378AAC3243EB27314
9594FC3DDA7EE2EF13ACC8AB0FDB9F0E8D85CA379CD14801CCAC9DCEC420B814
C1AF76C201554871F35FABD17A635968E5F912D1A0653B3F58E051BC18B2A578
140DBAF98139A2776DF8D35B237A769A2648785297BD04F5331799220E2482AF
6EAF36EA334AA5324EC1CAC0F0FDE2E3FE6EE1A62D1DF59AA8AAB4C3250E0479
889D91FABE90E9557BF26F798F869D35539E369C248D2384BFDA34D7CFA194F4
9FBDDDB343DC7EAD605AE4546B4F9DA0E977DA935A91B103A4073A9052AF7998
B6786ED420101D1F0800599180AFAD52C85189345ECC5F944ECB041DD9FFC8EB
E57654BD73C952C39EE7A32F1DBD320CABDA364910382516F22F045237563213
3D589D82AEB2E5EFA427563C5D77BE6E793622FD439B8DA0C4E02D3D943D85D9
058B39A35E8B5BB950C7D1D9A53B5BEC9B4C6573401B013B4F2E84B30153EC29
04E1401993D0D7C8BE9167358347EDD4180BC24C3EB3AEA91071ED8EF6C6543B
96725B1674926D5A1F6E3EC4F33ED2B43709D00B1B9405038BEE534182822ED2
2673CB3946FCD26AD8B073AB09CE55604E9EE0BC3FFF50990D9BDEF18F50F785
B6A463587654E72FE79B4BCF84372EB44F6CD92FAC4046EE6AB82FACD8F12536
4A3F2E84E83E67E25441A0A2C43DBAD8E475840CA38C72770B04D4F68D27801F
3BAC57946B5AC431097F953A13EDCAA5E7AA11EBDA2472B4AB6FDCC65EC17F5A
7E5AD7A16C32A65AAF1549118ACCE0C6CA558BD4D9EABBDBE49D3BCDBE8DB3E8
B78C0593ED7CFB82F6B8DFCE407DCBECE6E24394B1871C5309E9F7A8D9B18CDB
8A449CFEAEF39B68998A3AFAB7CD3BBC93ABEDEFE640BA6A9CAEBC42A78CAD17
57F11A2A94CF5C7BA1EBDAA13AACD960CA26EA89164053036562E87818E297CE
78427BC7BD5DEBD75A08A1D99F4CEE7DE2D45FF1285ACCFDFCEAB10E8A49D564
FDF40BCE76F18ED6DF2E8EC2108CE9674D61BC3ED986F64FA61ECFB5B3CFA2FA
FB425945C94D0E622B5964476210F8CD1567FAAE2ABF9941BEC7590D9905DE2A
441C1E1AB1A3E45994B92A05EB2533CFF359ECB78BD8FBEA9C3C2ADB42679FA6
DD799757D8DD058284A2526ED7619D0ED6AB46B70CDB0DBE7503C5E61271527E
D453BF7D8114DD1A3395740159292A0799E779C9B36A46E1717389DB6116EDC7
888B730BF962DCF8A04C9E5C2451127EF0A291C6A82F899CCFC77305B73F0082
154DCBBEDB2182DBB041B7FF5CAD8DE46AB62336C3C4949BAFCDCB25B86AFC99
EE4290067DF4A7B4E726977A8E31A680104024908F6B8A6CB48EEE25B656560F
7DA63CB36C9AE1234F75140AD0CA06C37159E82208313B1D45C342BD4421A88B
DC941A06080262AEF7B23C056062F408898FDF7DB8F19AFDA69A22987808CBF4
C64FD77E67A1E2FA75E52FCA8C07CA0986CA339DAFE304C925236DDF9871E387
5BBC0F05E1F6998A18697AEDE97701CCDC6CFF6416BA90C7E4F84908054F1EEA
7D79FAC1C776EBA76A3A89467C7E974A0F9DF83DC80FA0F12500F4CF6EA643EA
683DF13A7E3BD20D2A1FB38985D117E286B86C4C077BEFB65B0620B599118685
09BE7F25A346C7503AFAED22B7555095F4B8D88574C942D3A10B920B3787816F
D180851F2C71DDA09441ADDABA07BA61F6BB02F45BB8C425BC598A71C799BAD2
10241BF8FEA6CA94A7339F3A572A18105DC21A903B37BD4928C54BDF0F7EE66E
8FB25B213D8A7F01C85CF835E49F0B44A8AAC996C889B1496B9E5FB4092F256B
B7341AF3EA98B3B1ED62CD9B1D3ECABC02ACE31D0C1A240E35BC196700A528B3
DA794FE378F61CE61095DAC61D8E030A23CAACFF2238377A038F65F1D2B8C85C
2A073588A34BE6A0C2FE2D9BC7ECAE2D1FEAD2F258465E32D212A28F4F73BE04
4DB51972F8D9639D1BBD62CA7387C12E10AF88B76BDD4EB0BB70BA470DE91669
1F948594238197FCC3648FF7912549B7E2395D52C227C7958AD3D31DE54E1EFE
C02836A142819CFAF8F2A15193FDDF94AC3F682C3C5CC998D17B8C1EC952C2C6
83C0B7362B7712A8E7BAE38F3607F7898F0C3427FCFC6E0CDD3BFF219694526F
2EEBA09A8D70F459ECAED78F953FE33BAB2A01860B975B9DC59CCCE18B8DA4B4
C1B61B1435068905253EC9648BE25A7CF907BCCF22712EA856DAF34E9A5C7EF4
5C65FC0F8CB2F37A44DFDBDD60C4382092DF9C3559749BFD5CD05733814BFD27
5B657E478B7FA59B2CC6C45FEA60695FEE7D50F59F94BD976DEB6C89D5FD180B
5F1C0920FEB9001B29D4656C9FB3DD0127560C7149ABD6662D24ADFD33B9768E
1F914606DBCBACEE23ADE50565B27D4D6EBB0F87D46AB963F2F5F9B7DCE029AC
D62D01ACE138910D05A83A26B003E95FAAED31E246A674D2CD485F8A029B288C
E3527FA0ED7FA7D16922C6591F084249A825A53FAA62FC2B06A3C73064BAD226
2223A082687B2D526B6F05CCFC648BF1330C8D546F2EC61090177178E39AD225
3F8848C3E2D02ECEBE9989AC6055396BD676DFD76627B77AA518EAF7B95C7BD1
7D60003C9630E21779E79C26149A79FAEAD28660491A67E790F6D03CB999E49A
AA545765016762A7A8D4F2EEA4A3938CC138094DC8D5C836FE2A72AF03D91600
20C7C59D92A1DB188DFA5CA33EBA3631638AB67A482AF277C02CD53B8A5C10C3
6FF4F6041344D129CD91DAE154ABD6FE092E2026491A3750228CF3EA8D6D4CAC
A11FD35E655A7A99AAD10705383EAA66FAB5DF40DCA28F327CB694609AA8DCE0
18EAC36CE5766D4B3D8ADA70302ABA5786CE8BD9AE2A6C8BF978EE79429AA874
3161AD47A64E09548E587145EF01664BA9930EA816F54C0AE7B83DF26048C9E7
A40B03DDA2CECE7A34DFC618DFB02C60E9F35C8B64234A3682C616F4C6D6FF34
C75954D8E74082957159E822BDED20CAA43D7DDCE6D6721B118D48BE419DE7C7
B45D5E9BA5FE14496FDD2429C6F4D2A7E9D798808A79C21FAFC2805722DD518C
AFC5FB4EF007D1955DBD50403DACD1E4B6E6BC4570CF1C227C082F66B435970F
3F2F8297CB27359C2E129C5AC334851CD9B46AF65175FCB720988902CEA31AFF
813A1717EFD385C6A669A2A2D8592ED9773694487BE8CAAA0BEEC95553E9A135
C4DE70D9EF4D25E1D57BA999669F7D07C00447E3024FD7682EF2B8A9F3B6F258
AFCB12880FABB776C18E853099DD266602BBFC1B2B722824E0FE26840BBC3FF4
F8A683D178CBCC128B934E4CA5E3320A4143A353D77625E2215FB3C9FBDA8E31
4D89C23482E8B38DD1BC7355298814FDDA04A6CACE25825764EC066382C8FD73
84843F2E0D7EE6CF0D18D219277A08B61F7FB04DE4E2A817E68C2ED2EDEE1CF0
138B2D4A634E40B8E8737E7A65A0992895405CF3ACDA3937B96F2CA924391184
6DCE746A
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636178FA377DB2DDE5FEF41
9E91F3BEBCFBD3B4EBB510A0DF7F4D19C6552BC98F10E25612B1396020D7836F
A3D3C865661DB276E428F09F048A916B4F07D8FD01AC1942A3CA342B0E531BF2
3E9A7AF265ACE1585E331A8F8B5AE06FF085C1F349215581FC7D68D16395D934
79B3BD866A4BF33913DEB54B4D00ED59E41847A2C431ED3DEFC7267AD9DE87E2
3C241539C45BAF108ED82A6998F08E027A31856F174F76A40F621E9810045F30
59DF9670E52D7342ADCF4D69DCE80E0EF6EFAD36A5ABCC8A221566F5AE576D39
AD31AA8EF5F2D913F030A19A748C953A900D0847C53F2C7B3BA09429DC8A2AD2
00F7FFA876E887D1271BD2C93A2F441C34F6C53199F23717B33AC257D0209278
766556A6EC21E0CD21EB820A1FDD18665D85F6DA64D3A8FC5C175BDE0C6D9038
598DE955E12D8A89ADEB10F36934568E4CDA63DB2BC7C89458EF434202FAA58A
ABB81681CE27238FF6B4F6C9E49FEBC2B0D19283F0774AD8C6953A32F48731E9
A050D9BB393B7078EC4014580D12495C0C3E7809656D574C1887F3D3A5596B4B
FDAC3E73A39628DA17448E38212CCE4800251E0A4F76B7F1906F296E5293DEC6
18A6BD6E4674A8FBBED8B59C685815FDC068D81A25830764BB2776305CEBB036
FC3C1D92757D1EAEAA55B5145C9C4A31C461CD793DE3FB268E50E923C76C78A0
52A93C7912314EE9AB857E260E20B8F6F195A3051CAFF0CA3FC5B6E462567ED4
1883FB184427DF4B0F90E50D616B4B2D5902CF8BF1B868ABAD8FDEA9A92B4733
AF1410822EFA6687D218EFB2A9B6C64DE11A5A0EE002A3DC1ABDDFC3FB3B4C61
6970146276E4D1CF83F981EDD24AEC9208DD0F1EB9AA758C6F46BC371F58ABEF
E85F0E8A1AAAEF6F9D84C58997465F0697204A819FA3E31CA4BF32AF33002359
8CF40B5AC6249B28CB4125A78B2A4BD7C5BD45481BD496258350CDCBFCBB75E5
7E13B22831763E4B058328FFD5ADCC5B83001B07895F0A70ACDD5664EA728D81
F59685E6507276076D57C672907BB1BEAA0746DE27FA98D21C0F6B151B2F86C5
3F346D34385D31D65ABFBA66996944BC9C229449378AA17A96862121CBB965E5
8A19B073A50E328EF91542D4D86D8DA0508FF8F9054532A13A1E42616A4C0290
2EED3FB5F401CF9729EEDD16DFBBD3E60C13D7454B0D354AF96B3D838CA80BA8
8A58E6D5E7C12327BAFBDFA59374906A3CA7ADEF80F1A0FD4DED1D95028FD73A
D5B1DE2F8062B8C59BE9D130E4B6A4787E09C3F12921FB53EAB13376B8BA6339
5ED4A00FDAFE11992B94242178E39D4AC85CE34AE5EF87E736422FC9065052E1
9707CEC5611CE10095F80E6A8680D8239D172DE1D28C9AC86951DEFB325805EA
E1E695945BE1964A570F9328A70B071A2A6D481600607F4A5D0D634B0FB4CE05
81F38077986EAB68C7CBB1896FEE8A5EC39AAE7EE0CC0FD94DD0EB1B47128183
468FDE9DF57C234CF39B1915D71E939DFEBAFA6E3BD56FCC8D426C4A3AFDF228
FE4C1AD48FE48EA4C106456D50DDB7727E871084D13870DDF7D8CDAE14660145
F760E0E46A8E2376B7B2A1FEC77078729889DD74415FF0324FA1ADE7C56E8545
B5438E63917812A123704935CE3C2D0030B4A1B1F28FC65CBA0D13BC524C186B
E4E813A636F50E83ACE03FE4BBA63DB3A068A7ED5D2F0814556685B690F98828
80D31DBAC91DEFA7641DCA03098967E26C65C98C9356971DC9592B0B8E0B4D57
5C207BC9DCFDC579BCBCDA6BC4435B9C5A198094C8875AF844C0BDEEA8033CBF
BDC3F30800ABA56CCE03AC867986EE3CE166EC7FD479EFDBC16DDE36FD36FA08
61A2D3F225B41729D02EF9F7706D30C335865C313DFE40F2F83D7647A8609B07
DAA88127D14A981BE5846AFD91B0782F02E45DE73FBE3B4070139242B3A1DC72
F7DA53FD1F4CFDAF6268D2E5DCAF44126497A2743F5B28E695DD84E4BDD3BC65
6C5F414EC286744244C2D66DA52693B1D2AE36AA0E786C2EE0B38E2D2703C2C4
EEFDF265E3390B7049DC7D70454E4B383BF0D4BD828A847289681B92248C08A5
6C05BFB3C0035677FA9F026499DF40DF8319F0E5B1F817A35279367CDBCDB973
A920140F2248CF8B10D90CCBE942D9510CE5FC7773A3945EE8110AAF37F723CB
2F3D7E89CD1D5496E3E35DAAF508D0E3A22F15931C245DA1C3DD289265B546B9
7A9DD40C3B40D9245397E4A073B87260CDD62CFE88EB2765E4121F301EF981F8
429123F7F0285B805719FB42F8D9C3B1126BADD09D2DDDBC33B4D94F934E90AE
385E9EBB0C1CDEDD85D36080E7F2D8137A705EC2FF492AD0A8921EB0F6A17D01
5237E569D75C2E56EBDC8C2B5B611067247859EC48E94C866174A16074BBA625
C19739FE6B237E87FE64A86956C75DBDF1C49CDC174BDABF401F94AFA0CF876E
ABD1E053D04AD1193FDF2B7CCFA39CF412EE829E18F16C7E40E7A6688B4685E7
B13A336070CBB73F54359C82023C1A30094B35F8E49CED38EAB74BEB8FF549F4
FF5D415937EEBCE48258B5C3AAD1F2173E00BC384203661FD3E559B2A8D6005E
C94CF5D75C7D54A322A53421FF0B472C874AF04564A72D838F2B26AF3E433E4D
D272EBA32EBB30BE305E229CABA8C60D581ABA5BB9C0ED741873FF624B4586C1
2FF1405677C8FBDBC04C2A68382E086787B29812063BCC141705DCA4D06BCE34
61897F04FE7A2187A67D4275BED0761B78B622DAC3200BCA22ACEC6324E18381
B4197C94CAFAD0A7E9964DB21F06B0DE01B5AC6365216490CD56F4EE56BDF9C8
30001095D126D20D7D3D2691969A26279606E4E0513DACE107142F0FE8E90C6A
8412DA7EA2FE0092444EDE526CEE33C9B9809248D8F8F25F5D4C9305FC05C0A5
A617B27142BFA31310456B92C69C7DC88C205D5E20C5DB9943427BDA69EE7B94
A029563EDC67E977142E1B282B6384A1D5128D5C1FEE98AD14F751B695ABD5A6
78BD3155BFFE295A24B6BD6F100106825EF5EA0AF4F81C549764AA3D542B0533
EC025DAD8008795F3130852BBF6D15A44A388D6F70072C9B271341C3933AB25C
BA499AE91D3C97BA26C08D3B01F7A24BF1B7B8E43497309104017E5C8C1D0D26
50C14328C547B74D67F4489F66495BE9B0A508C3618AC23345F051586C0C0DD1
F1943757613ECF9A59EB01E8D4D9A3474F9EAE1BD43ECCEEC6131B4F6266542F
982D76EC76B44AD7F61BDF0A563B74E6D1406080DD451EA2F915BEE9A8AF6281
5C71F42B18F0268FA52AE5F52612CBEEA72207B00703AD019513C45AFE65D0DF
0A24FBBD227A63DE1080755C0C95B0237A540C6CE89B268D34E5AD33CBB34ECC
9AD74840D35F8063851972EB6CAD1F42DFFF314FFDD7FFE75DC7E81B6D3E81A4
54E1A8AA2DFE7AA87931ED99EDE5CD13D80E4309A0C1D1143A25AD3714B8C9F4
FC15A585FA3D61D0359298008ADFC5DD63EC26F15EF1EEAC006D75DFC4C7F1DD
561F50EA96465626D2671AEA2723FDE1FECFF3542B8525A349C7FC06EEF6AE99
23E7AE1D6813E1FFED2C6BF8D48365A9C715C9FDE25CE7755703746B65C1005B
85E4EF67161C8074FB0619FE1A7935B2D9B872C370E2DD71C29CB766D11D35C5
494481CBFD8C45295ADB454B2249437DCCFD34EE1E7551EE0AF13F153F716B0C
8A22FB277460E2D9F11BE8114C1177A47D11D4BE5FD594957E8F6AE975D02303
561EFD2D1C6101F0B6450FBBBF7022B00ECC5B7DF22C14CDC3D4E3265B3B985F
C0937601650ABFFF0421CA644FF82E16F61C39DD9B23B99381AA61A8D8A5313C
A55BE169C4155695A9AE20DC3B3584E5B116078157C37537C47B36439158F07C
5EF311D082351F4FEDFAA7BA8948770ADB2A5019C81553663F24B04CBE5C28C5
6108BC95EC2F01293DDB4CBE7217453B5A66E85DAA965D2DAAB7DD96559B43B4
6A43B0BFE4D056287681F6102B27D114331B3C5BDC39E7E8A2C2EAFB81FC70E7
6982228DEF8DEFF16C75565F6AA72CED99B1E3BC155458CD2EF85B62A61B1A4D
212D149429686861D8206508174C17BDE599B3B1D6C6E01FD90E29E3F92692C7
1C2F4C4956F51D90B12798C544AA86C9FB040AE8E9D9EFB2376E4018257FDCEA
75FD8F128791F0C2007C585ABD56038AADBCB168E72EC433786ECAC80EBBA6DD
2CA2C55412E86C8BC682900D7DBF4F98B335CAA96BD60732F5AA3DF3E8DC7B51
1805574413099FB2936B19A7FCA82411CBFF77292B10918A04C1AAFC24C40070
49D16C86E073C49CDB190E33FC4C3A86D8053B7ACDBE09BF866C1E318426914E
63BC30DB991380A45AE3896CDD7458711200D34B0AE6883248C4F56239D2EAA9
EE59133A272218BE0730C7EA509324CACE44C67A51F1ABA0724F33A615BDB61F
05CFC57FF302C6F29EB9EDACE4B689545FE70CEAB4A933F1881F057DEE442E9F
D7CE462971EAC260CD43E56CC549768E39815FCC941C13937F1B14A549BFF012
A860E335ACA7058B33EB90BF178E4F9D47CC3705560DAF03826686EE408745CB
1A2E88ACBD8F69DD9ADB2DE766E17E2D8D97D74D7647A89E0617088C03D27807
4A987EE0512A2E5CF7247B71FE038762578D9664C492814252EDC38E9A20C0EA
4FDF2C33435C3DA8CBA62D724F5523DD85FA20EF1331DC2C89D9D7BFB7CEA573
1AA29A039DB9FFE0FE1390FFE64FBB90CECC579880B5E2112077A231936E9910
4DCA183AF4755E5FFCEE3E4CAFFC8E4A83A3D08357AD714984D4F9F55367D990
5B6E8B79BD7940732C83E1C195D64B9DDCEA080B09E23DD02477D5E3328620C9
A5EC9259A144E801B5E5B1A1A27437D2A38E717BA7ED982E347B5A1DFA47716F
C49078D5324D1B1F6320D949FFEB8AFDCBA30C59131C3E3BAEF51CEA67DC8D8C
961A50D1BC4DE63BECD9FCAECAC2D2B98C95E73DB349B1A7E9409D5A24688701
1316E69905DDEDD4686FA56F82FEA43C8B8786AAB5F07868AE48F24F3F453057
917A0AC811435F3DB92769A3A244F3CE6402807DB167B9CE958588648A8D90B7
79B96396B69CA8077875E39BD4110946FD7B6DF5485DEA183848C51F15BA4387
856ACF29E29700D6696F4D42FC9588CBA598364BBB322647CC97BE3F108730F8
8708A25988CC1EC7CA56829DCDB30FE1B684A089F94A80EDCE53D51043D13C56
409C0BCD2DFD0BB4674FD2C1E2334DAB17651B19887E8B74DC97DE63CA13C36F
430B201B2AE22D43DC97DACEE9F9323B1AAA3364409A691928246C3991E44C65
C58A9DC663459B6E0998CA707D33148AE99032E05A0DA7132945A474491C1476
9C677261317BB2FA26FDF0A46694C32FEDD0AE745D315436EC62CD2B7FFC4784
C741605B8859F75EC890E3132B6C653091643300667BC1FA771C97F761200B79
4C70A95DCFD3E83C5FE6FEA061BC16F6753F8DF860B547909160FE0906AAAECF
6BC0634CF787D4EDC24DCA9EEFE57650A1ADECBA4EC5D921BF4B5E11E4108FFC
1B0E41E5056317BDD7580A733956C4523F428EE25083C5BDC4F1B0250C02A819
47CDAF10D12CC0B1CA88A2191FA5E9B39340DBF398011E41BD6B9CFA6EF2B0B7
CCC7FF021493ECEF149FB584B545B61A39CB8BE62E5279CA62DABB9FB43ACAF4
61B985CA6AD73BB1B7DBEB055CCE0E66B3CF0723705F29A58F4F74618E091BBD
BFCDD492FEF4578F364B400757EBBD73A4B5E7D84DDB583302B891C68D2E565B
F97400F16D2DAC71E0EDEB1B1E697150A04DF7BA82F70FBC564AF103C7B4556D
96BFBAD10248E33B2A458AB8D360FB01D300823A62930446B39F6694E725C1F0
F69EF3D06D7D417CE73303AD72F00A63BDA502E0CE82E281EF0B251BAAFEFAC7
403FB8D4700740A759724FD9E81976CBAF3EA48207F1B93F3E7CFBAB9AA53A03
4EB9E65760383305A89FFAB86DDDD87AEBE41C260C587B657014CBEF4621A5BE
CE3D58A6D7D8A03E91E056C686B6816CE0D38C8AB480566160F6A8A412C29BB4
2EAB4029ECF40D1AC8B33C190CD3CE875D41CD4153BFBC0C112B6A5E1EF9DF7D
3442955B1654C8CF9181BAE3F2FF2B6FBF8BBBCD596C49AC6DBECEE07F9AFB27
FB32F355528E464786ABC260F3C8B757E3576DF46846E8C8ACD63BF3D96EA3B1
2CEB120127CCD2A67E6D18BB4F05DEBE77F61DA36BF448836922580CE2DAF215
A9A10A83DD5BB2244CF30FE0CBBA8A472353D69CB2A6FE3F3D6A3FEDC69F87B9
889EDE951035D2EBE188DD372F1DEE20234D49A820876F3E702F25F5C64491A1
31A305911E5E1ED5281CB4D658EC64D6A9DA63FBA8BE96D92FB2099CD925DB6C
59226F39475E825748D1AC87AE1FA8D24ACDDB1175074275264DE1A15E1F656C
4562ED7A7C650FAEA16FBD5D10A761DB5CCB57B58010B96F0366421973C0D8F5
AB239B0F009D69D37232816F64A4E10A0687D7130B54D31B638FBB4E121F829C
C61E6F6F25A3A30608DDD32B1EB2982FDBD241FB435DD406D25E367524F48E83
5E96CEFFEA82A8E85084B82C69170D587A26C5408C876375CCCA023F8863EEC3
6183DF22BBB93C98637A20E25660276D9EFF4D4E12EE811A71E938AF34F4C135
D2114C76566EF3CFA6BD9D9E07AD7434C71C69B3339FE86898DD920CBBF3519F
9A028A0CB24657DDCD2943C8FB7C3CE5B33EBDF46028C84472816DF9D0D1B5CB
7C1047094F3E77CC08E6D4F89120203B7CECC172051BF4D2C58DC143433AFAC8
B3EC4C13C51292037D872F731784288AA8059A8354D378192446E694B604A3AF
6BE6AEA630C6C102D73419BAC331854E70F7C7CE29C10C67725DBF146E79997A
E607DDC9A08C8A84721F3DE3EE39D041BE693B5D1C66A995C79927888C78EFB2
FCA055354F7A297198CECEC202F75A527904568A62B8FF6547CD3097C35AE44F
D332318657A1CF4563ACB4212F3AC89F4A3FFB6AE8302C005400A155ED540F13
BDFB6F1D46FA9FB8E3FAC093885F9023080D5552D49AF39B600FE64D6299D347
94B4C7796F780A93DDE1B14B81CBDCC63A44EF79050A0457FCE6BD9A4FDBB7DB
44C10473BD0CB7C0E879E99328FE541A886B6672B0BA5D58ED9098EF94373E2E
6C4A655BD5CDDE3B65D670A1BED5F19321405CD1FBE327DA473C68B4AE81BEA1
52EBAA8F54E3C4CCA970520A8B44B627A1AA28A124A0FC3C9CDF3C0BB286FCFD
E0D09CE5D0C9BBC29B580140A67EB6F6FB619BC84E1594E9FEE05774B92B5089
09A87FBA0AC275146ADD16FD9602612E66AFA142F5731A1AF7F5E582CEC3E4EB
FD302266650B3C2852ECB42D4E8A89569B29D087671965BBC1A2B3E119775BE9
83300D3FC246D35ACA46E371F8D8046C6257F082242DC3C89FD69D308EC5F042
A3DB9036BFFBCDDEE08CA6009166F00A1B8089CDBF838235EAE54679830EE8DD
5C06E27C01AB620B056B87225BB30FFBDBC5B362B32A6E4889D3B37860DF147A
C9935F595FE2D99C3B65D1799B8FA472DF7D6C692818603FB1DE0C52FE4550DF
ACF1BCF057EF5D726170F89DA83E76BB8E6D49127F3F8616FCEAB0EDE2B29EA9
9BC8E4259EF57B7CBF04D0A63A538AABE6B59A47AB32FA88FD4D2CFEFC30F46A
401EE27FC07620A41186D0C34C2549BA8B657EEA8008B57219B9549737822E19
4263867B2667FB6BC9E463A8E760D8BC34E788B31F578860A78AC616EB6136A1
812C66772D1F27C3EE9C9C2A579C72DF9E42CC26F1829D330FFB6F028809683E
5C7228D5473BBA1EBD02915396BE381BB630E78859C837F6197AFD5A94BD1430
B83B7A8B01D92CB89CD4A8CCC9A1C19AD53648F6DF17B9F1A1985E8A8D3F73AE
CFDF70F1190872E718B9D53FBEF988BF25E38F73D03F928FFFC4FE8DD6B877A8
BB8166D63166B4436AEDC49BC7C4EC4B4717379E9A8AD1C4F3BBBB6F4795CD4F
8F86C5D19D171CF856ED6C9127E31AAF3AE341AC31447EEBA7048E3CFA025F1F
D926A7D127DAC7FC80C41929C7181913D503EAF551C574577B17A330EFD2DFFB
F9E5062B8C0F38ECBB82D6F6CEC86116566C6492A5FAF61BF00AC9CBB1F437CB
2FD58114590D031B33F6BA921990A0DB3D878AE26AC95ECBC49AFF4A13F673B8
EC0DAC4F65BA604D893744D6B0B1EEBE9B644B8F9CC74C63B4A639E64CD8063C
3ADFED7B15A9DBD16D38B6AE85620580B4846E3B37C09917AE1E0B2B579E105B
2E543081566F75AC3B2A65DCC7A3FCAC9E4996BA92397D1CE32BC8173ADCBEDF
35E5E154C60F4CD70DCB800E03888CDBDF0DFA7AE77866699250340DBCC1189B
F2C851FE98945390114CADCD5DDE1FBBC5DD2F0730B2CF66ED814C8E2EBC1D5E
122A8E9C824171684E73DD1881E03FA19AAC34493191824358900D91C3FBE121
2356BD6AC26C1F326EF7280797A8C879FBA8DDB9C68F1D00AAAB5A48240BE991
B706D4E0A6030AAC449842F30799B1DDD9C6367CA5621E2AB7A4ADAE1AF21BC2
1C173CE7BDD2823D66BCCBBE4ADF73CC57C8AAA2FF9E5FB6DB9C4E29A3F3C303
9F6AB46C4E8E25E3E1228A8D904E9712B5750F309B13450688E704C59ED01FD5
25A6CEBB9FCDEB1592F44C2BB8C6B6C4C7A6F77CB68B195ACB208635727C79DB
ED2132459C00F5D24B5155B2FBC5EF3A897E9113C11812FE8122F6CB98964511
6A4BBA10828333D07EFAEA8B2CDFBA5A16CF9B1CF36E0DE31986878F61FBEFC5
5C321EF8D884F7D4355AC2DE2B1E7EF4A47252FE201DBD0C57D6C484977896CE
8419E98893FA5F8BF26052390F7AB833BDFDBF680ADCA65B6AF4451680C5AA65
99C308BA816DBA847388B4F88207AC0A0B971798FE26B6CFA17799B322D8437C
4DFE602D38989CEBFB362E27F997B6615AEA3D3BFB478EF504030B7E3729861A
B98F299B886F79EC7256B6F23710A29CBBA7590BE6257A37D0FD9DD9B8F490E4
C3B3B136517F4799C0965AE2F61DF261CE3ABB47FF95098773EF0B696E5B7F65
0B0D26A44A7952A81ADF2D22564AA675F5E0B592FBE0385F3F7C05F53C2E4F65
40186368051AFF41B654443E1E432D99E0E255FDF62196129175E403E9E1AF16
7B744F49D11F13340326676E9D437D381386B8FB28011C731DFDBC0367C52256
8F8EBE4B7E2A36B8EDC3861015636EFDFBBDB215CDD19AABC401F21373F1106B
BD3BAE9FE8072CAD3A9C859EA732951EE931A689D898EE3C2D87322D88CB8D61
8D9372A22CF0CE0E8E3C9F72BABE64A4A514DA7B1DC929972A9BFCE9159CB9FB
207B911266ADB4F54AABEF8F12CAD013DD47936D876F9F4A7E5479003A32F90D
AFB23ABA52C0E2196EFAA990131FB855560E3818F2D8FC9F9FBD2586ACA40076
799EBAB2C30C8AC844E8F29AF97699C0D5A4D4805865E17D751A1D6D46C5E350
C495AA285522CDC4AAF1E8AA4B303849B35E5485BD98EB7422F0F798A7CB7962
B4E3AE4B2BBC729A7FA12A71A77C012C76E0A4A6C4595CFFDA465A736999F0DF
548296AE543AC5FF586368311667F2F48E6EB9F102337B8F7F2F1BFE77F92EFD
E3F2D454FBE3EE715F2274010BD565F99462EE80E7E0849456924E2BF560AD26
40C29708DEBEB1A950F170EDFC8F11EC715280A13769576524BE016A68B4D907
488FE58BAF9375B204DB627B318BCA17E0F94A114ACBFF5D91CBB0DC2C7AD43F
D8E9C54E1F7EDAB07D9811BE4B40502324F120EB8BA7360149C8DD0590721E7D
1A14CC8C9697D0B1D8CF3E16D22D8810C9F8E1799ED26E896A875B139B201974
1273AD8E90F5670B775AC76F90254070954A6C9F95B305B6875B6FDD082177DE
9CC7A2538DE857E97D2A9CEE513DEBD068D15D067FE1D4DF582A979786F51A42
B5E562145CAC71C3929222AC34623C844DF5F7BFF35E732C42632B212129A9F0
363E4DF6A7978121503EB163DC05D19EC4F77F55D22A122222303A121EB666AC
1837AB38C22CC1F34EDF9AD7C39ACDBF0D73B8D07D9916C7B91A5F7A7B86D84C
08DCD20BCB5E50A4EE7D29FAA81C3E9C97554887E87B72E15DEDB1B8822ACCB2
945062F0AF928CF9E91D64AA939240037E7E2DC820E528F7E0FFE21F09B4506C
827CBD0A206EA7A0527AF434CA51E53710FB062FFF05C33D80F8738D2BA8A256
08CCA14A24C52DA45DA15EFE754DF489292609EE34E7C7168F4F862F48BA0B57
5FCB2FE20216EFFB01FB37C28C1CEC4BD2361929630A3546B872B76D86EA97EB
AC1BE4D42291145601F85EFAD17178E893B79B1D9673ED72A5300B2D635F681D
57CD2D9F57A321BD3C2F271B89767D5E734B7B342406F48E93A93D93E8E9E82A
812C441B5817B9E35C9275EBDE4604F25076D17CB4621BF910142D85CCB0F2E7
B672905E4DF4FFE21043A7BCFA8D627C9B4CD8E36D1F53E9CAD06476FCD8D82B
1E6356CA99AE27BF6C7241ABE544BBE505103EBA1201F83B408FB2137DCF91D4
7176A11244C8AFCA843080A553E55B26DB74BB82BFE531E020047A26E6AB1E8B
E89D53E17E10C42B49C62DAC633BB221BC13EC84185B5C5E814BB698AC433F5D
6F97A93A1735E5DC28E2DB7F5A2A31943884900FC2B6FC138477C260947B1AD5
130CE0F9636C508915A7E232174CC89941D138E856525884785801B980C952F7
CF1F80228DBDB98061DD469C3DB03FF8890181298390059FF218B14704FECA35
D9B804271FB919EF3E2C1A3CF62336A49E2A2525EB2B9370016EE57245AB0FC0
558BBDF07CB43EBA6D5EFCE04797E57565E436F0D2970455DB33D712B2B253B3
434136271C20835FFA103831FF56B93DC69310EE0DB8E94736EEE46A4E3E83B7
3D4E87BCCAFC080BC7D6D4F0BAE94BD0DA3F460AB0E190BA67D6EDF3E58C6AE8
11BEBF6EFBF95730E4785F3ED32298C341542BE7FC4C393508C082DF97D67532
4C487BDA9AA4AACB1E6250D957C727DA1678740A7889D78C8EAF543F69BA6BA6
9B12800918ADB7FDC7D84DF157439628AF28A2FE4B2D29B076C996045406F027
7C8D79E8AFB0DF714E5D0D184D820ADA72783FC874FFA166F75EFF525DF4B35D
ADAE83B75E0130C00C7A852A193B2E78595FAACB5CF10D56DE253167EAEE7226
E3F80A69A37CA3A852FCCA2505E16B5BAEF95DB2F5F8A48AF81770F8DF934002
F63B28C5A509066149D764C2DB5A8C7BD178B768F284F4E2D7EA755413335B1F
6F479925FC8CD232590C5C73FD94CB2620696F8DCECDEC4D6F694A55A11DD467
D2FB06AEA6C5CAF4DB4CC2661C0E9C546DC22DB74688D96062B1D255AC75CB5D
F3EE40B8BE32501AD071FB4BCDE9A9CFF75269A65D51A2738202F479A1F1FE7E
0374BC5CB97A98722BE280038B605FCA26223FD249C8B85EC2CE058346EBE0D5
43ADA0AD9FB2183A7C476AB71CA4D569CD71874C85FB0644DFFC0DC018A591FF
B4376FB88D622BAC4C6559FE9730587F81754238BF9EA7B550407AC5B69D0C63
0E74AFAB4B4CEEE7FC5DE0E6965E5D77EFD02CF3EB78D8537A00D4F26A9397C0
34C0131E0D6CCD1EE707EFBB233152ECE2831E34C828B6CE9084EC2ACC02973D
88341BF97237E0328C4454FC538358BC9F505A6FF8C6732CBA5C690AEE71AB74
C80DF16814F1685BCC124579D46E854964E8E1C80FF880F9AC81D6359B201092
FB318515AB1AD3584C2B9F77AD82022308E0F12F3EEB4DED7A8338E2C091E9AA
E53A10557B3471200DE6EEDF0C0E8AF9F0D87362426918F03F0750FAE755F9FD
26D56B1FAE87096AE68666C2834CEB2DA2E6D8ED5009FBC58507DC4C47F76933
D890A72F7ED2D36675207A59E1ABE59194E21048E24EB2EB12AA4ECB3FB1C56E
D6342DD32078D0B39FB3EF35BF0F74B73650EF71FC0C025E2F9CE0C983E85B54
3A23A30F2A779F7481772939E38C6B2918B4D433BDA0E4F9E63F7BE03A3B33ED
F89F9C4C48A9F710EEAD465E7C05285164189F7735B2ADB2B039268F95ADD37F
529F9E2C452768E58B1AB973BE6FFA398AC9DC02A4AA7530668EE5622F6B6694
15F096B7101EDC3117B2B22B85C9E9A2838AE9A288F02E9DA64BECE19A0C1C7C
34F88AC630405F4DDDC09DF14C358D6C573C978E5B442078533A6DB8791A3F94
F4246C42B6C5E7F44D7E0F1DF2155EB466D3B3E5EBA31F96F2396A9F8C04C0A0
86B0AA5F2ED3FDFD1CA6C9980F0249E4E8640D9DB6DDE9E2125989D5356A06A3
105A5ECE5E488BC984FFDDB5F2F9B375537CA9745C831AA2679A20AD5B4F91D6
5A710AB439ABEF9619794E006064E66E1D570E98B250681B112E074FA051E55A
D35D0056FB4DACD26CE53EE7EF289509BEA746EBCE612A13CC700A7A7032B92B
35410E4CFC77BCED41ED17C46628FD319ED0EDDED127016F1F16D3E69392546A
B741C0F4DF06A425730932091851F3D1E8D6187745C895344A27CA9C529B1AA5
541A8386BE94A094A519F573FBEFBC95BD992A1E6231BEBE25E3A275AD0142D5
9612B6E048A1006F96E4141C92013041B0DE488CBD82875ED6295134FB282A51
0FE4E435DAC86F8B84E45F78A2E8E690A0659F925519E78E5DD7EAAE04F559DB
121B3E90DF3F11BDB1C561F074849635F066228E78618400CA24D508AAA6CADA
1F176F7361B44D5B84F9C30222570737C2FA80BC3DDE42033269FD2464C392BF
7387E924070AB9D925CB8A3CC835CF9DC9749BBFE1493A0DC4A53928E2A57746
7A44AC799B1B93DC9503B38BA23BBF4335AB0DA5C681C81D7E2A39CE419D9E6F
EE587F8E442660CBE8F3FB8C7B07EBB2E5239DEA54BA6D5C917FD5B36C3AB5C1
6149EAFEA72A03FEB0020DA2DD5EAEEA414970B2824F5E54C007DF80A15B2132
900D486F31E68C105BCBBEDF1C381D7C9C4CE013850760944858BE4064862DDD
D6EE6B2838D566E5983608F24FDDA7E3E38623A295E3987C37B018D8EFA42B00
AECECEAD0AD0B0DA378B3732C63561328D927E6B014DBE60EB8FFE64D4A0AED4
BE0F1B5CD47C32409C78E937E7DA703A43ACC5A965EE05AB7D69773E83D21A9C
FCC580063201D0B4CFFDA05A4842211CABF459E08C3C0B10F507CE11F80782DF
E48772E1D3D4FB2E0242F912674A6DA56090C926122B6055D1217B77E108A912
51D961FD18588F5661E45DEB9BD1E09990412B3065E7FBFD66C17F99B622334E
E0C15E8E178F8B62456234AD79234C38BA0BEF0352EDFE75CB5B1757CD3988B2
035C15EE09DA8751BAF496EB2E33598EEABF56C5916835E9FB46A0E260DD3C20
B3F8DD469343F0A89C3EFF0F3AA3A2D2D786130128DE721A041EB058E96E782B
67092472A4A678B8FB33A304068FCDE1346415417C4955A28005C6807AA34C8C
D8FCF928882546F1D60F2D22B4C5EA8B66BAD501E09E37E6252F839503B02F84
66316BFC70DB287A053E0424B233E98C61343DA7C6331D7104EACF81C06EA2ED
7218028BCE64EB3ED2BF55C756B002831E6E6074F45F4384CC33E099656D5A1C
937CBADE72318DC1092061AAB93F0825E73268F0F5C855682BE5FE9AEBC5A2AF
6A817EB467E4E0BE1F66B1F31EA365B7751C7C246C47C1542A8890F26072A628
613690B7AB822E6736190AAE21607FDE16FB978B7599AEBD88F55EDCA315AA74
02C75EFE28BB1DC9031F93CFABACE2102B1162D5E6A57D6B8CA03C23C3376B6C
BFE6F8DE1228DB6A8EB663633371005F00F1AEA105171BCE00DBFE7FAF17FA42
C53DA644C56E252FED323A2065A32D7A636AD5C7E270F0C52607502E1BBE07F4
431AF6B2522EC47F748E12D3F2D51CFB8243CEF137788B840B0675CA7854E25F
6FE9D87331C38E19C26A70F9173263B73BC8617529B86BDF1114DB5E1259136B
130B75BA902539004B6C4BDFC46E72A9A7BAAED5106F2A937379ECF207C7177F
B224BED5273EC15F83E22E25E5710A0E7119C69F7EF2D81FA33B415B7920977B
0A49557ABF3F1EF89719DA866453CC1C21418E6F25CA7693C04E8B1FCACF2D97
E2FE9032B3665E826032F06E09A1DD65F01D1601A0D602EFFADD6B384AC2E62A
138CF945B8080B68746DBF53A9A597A850678121FBB222B364BA90DA72F23048
CD2F9760ACDA7214DC82A7384358003088306D723BDFFBFEC337ABF678F1CDA8
DBD4722BEB9CA7C8B1CFFC12889E88EF2ECFF4C3A9A51EDDD7663D9A82482C22
E2408130DAC9BF02FD88648D0C6EA9B193018077F6D1CF1AD0752F7BC30DB425
9B3C16909F43BAC9FD36CD0FB22206922EC5BED4D6A9CDC0C8642E6011234AAE
F3076592589252543A8A224FFC4F736C512D0A6492C3D771A0E7453AC682D662
7F2DD209EC21F62D01A052F14C870013F5EA9D7228CCC30E45EC77DFD14E877A
542241CCC85D6F28B901D2B109EC9888257E97A120CD6BD99034038E9B5D476A
5024F61D493D55F0B5F458F73CA60757E1CFFDA6C1B396A3B9B30730B041A1B7
A98C3ED222B567CBA0EAE13631643B28832B7081BFBE46C6503685DB161E5FA0
7B0647F47D2190082115F7993ACE600E17206C9C8BA303B441F7813148D8AE57
0F16CFA7650CB5BE71080B0FC6D21748FA1A1E1FDAE362A595EFD90704A481BC
075D2EB0A22D72831ECA6F72DD51592FBDF625F83196F72E880E001BA90B674D
B4F7EF4D0FD82D56F6D7B04E3D9750A9AB438898F3FF97B45D8BDA60A2DCF756
21CD6BD8C3A555F57DBA96800FC45859ADA2A0DF2F41284DBAFFAC2DDD3486B5
44C97A3EF9ED8717B9F556005BACB22EADDEC1342BF61EAE6C244537511DAE33
A9AFAD7E516F0A21E6A4A4DD134394797877E01E14F66DFE82274DD14AF41311
236D973CB4A1445FF53D25B4C6451E6A9E4B5FB2AD0E0703C43B4BCFFEABCE92
4EB1DA55C2CA60282CEC73F4217693356E10853E71FBACCF88E4ECE27C06A618
920F4BFED482FC8F8ECB831B4B4294D3802A339C0A8A405AFC4BD24E8AD488C4
2E836E9E8A0A3B0677D33C31B87580B771B1B20ECE4EFD96A5288770629F106E
F0F4F2887F74DA3EA0ED8B3F5C0DF4A8D7281B19ECA1CA791C6FC38277F381F2
C6BB96F7C264057A2E1167522EE18E9318CF1EEDE8D52DC63E964AEE3F650DBE
88E4E0351F53A7D91B601C2E5EC3CD8B7AA05B5CFE5D27EF2F8A4C5BA4F4F6C7
7E13CA7ED0A7E975005629AD5FE3E793396DEB545326BD01D1CEBDF5488954F9
9A9114B9604F71377E4BA280860200E0931239A0C2971DBEFB3B8A7AC7EE3222
FD863373DC87489AA9D72012ADF1E2FC4D8716490C52DCF40F5C91AD9745740F
CC7EDE034DA3D9B393C705834806394E410BC3205B8DD4755F2D2DE9F11BAB10
623D26D9C8484868B4F2EF20937DAF869CF160C06621539B4CE8DD0D6D57E495
3E6AF0E4A8C40373E78433F28073E8D7A652A195402FF76988407BB06C974D9F
D85921249543B7D7A44E7AF0FF6BD9DDB2EC80BE4F50E65497F753ABAD730ADB
12B485A55183B6D818108D06251E15CAE067D46FBBD0D207E55FD07CFC6E7549
A81B9493F70038CDF185EF726BAC68A1136BA6C04429E35DB80FFFF75034BA28
BC90C6CC12C6A73DD7F38E63A6A2D2DFD84E6047DFA123933D2377AD86D6739D
7B93843673A6235DE6D1B7E1A7CE675415C6F3FBC46F6EED58656CF381A20E0E
FD76ABB0630CED6039B6A7AAC43B2FC57073905D303F35EA9CE90983210D70A4
1C712E67E9138F95E91232D8D31AF069F407EEB3BD74A5BB1D981339E66E1D42
485E04AFC397E0644D92BB2AA0651A31AA585C44384A2EBA0CCC41ECBC930282
B920E8E1EB2806BADB3E5CB54AC0AC70DE129046337B2AF13EA01C3ECD12DE1D
B9B41BE3447F08E93AB6E84CCE772BDC43DD2326690B37945F66C72D3D115844
31A10FCE0CF846D3153011AE5711969268AF80ADF6C6C35537BC7C2B1278C50F
ABBAF8F5A8852E3EFB64D70A7EBEE08790926798FD8A4C7D61E7DC30FC5A6C09
84450271C7FD8AC62A959878D2CA695D79EE67B8BAFED6D2DDE05E739B7EFBEA
D0DB5E76F3126A155377CEF16DA493BB4A018454C959DD536EF7912D73E825C3
A71FC1F393BC5CFD566A51175FCE36F6C5413CA0A2EEEBE7C8EAFAC451BA8052
3D07F85B2DFC4EA06AEC9B9171197A1E16DB247FBADE3B0FE1F42A9D4669EA6F
B35F25DD42BC3F1B1CC638D599182BAFBE962557BA9452978DDB20D310BE4446
DA32A37AF10C5C940AB65AF5A4403B81D8C25622B3EB7FE5F8F08EE237009933
4CBCD5A52141FA8C1BB14407ADCA546DC7D65A059760D466340E394C187F8AB4
310299197FA5A0FC9B26A862F14D3BB44694E468372B67D3CB4106B16B14C235
5D653FEC4F3F7598DB4FA1D39F423F4A11E3C1C4965197639F18728874903F84
509DBCCA979EEFF30BD9F9B2D23ED1D546301AA3F35B27A3F85A0ADF974E657D
A148DD065AF0C5B465D997230EC1197AA68E4ED8C0FCC3C3E311093D5E69825D
71262972D4D66F86402F60DBC1C2532CF1FCFC8F54A163935FF18F466EE25A18
AAF3C49A493E0CBAFE8B1827C700FD704B8D9C732A033D6DA666A19A6392B00A
7ABB552424D763EEB6C79CEDFCC6D6AA8BAB12265743241A363F3E2A26C100A7
C4725A925FA6805783CE1777C28B23EDE93C8BB1E615678EB6CD82F90D1D696D
7B5BC60AD6604E2B9113A279812BE81CA5035A3A85468E6701D74BCBFECDEB91
92BC0858969EB7845394A5533799CB15F259CF93ED0B491E6F266FBB0B863DD7
F50919EC23855D42A69A11AC194900F216E200FB311CDEBB5D408F670C4A36EE
CDFB052F9A655EAADBDF03E69F5E2D73387510EAFC33F354EEC7D0950737903A
04A9064DA9F3FEF6B7F8C05FAB99E971430DDF2B0D55012D6B6C19526394B066
B72B5C545CD55C625E47567BF4155728186F6F33ADED34EF594294C020C78372
22D57A3EC9
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D5C30D20FD1358CBB61AA05EF45403C3B8019EC
6350ECB240F696BCDDD1A9F0465CB43B824457852CEE14CB39164B65A06C6F60
2FF3A2A62E9567386DA80C4AD7651D44FE76DBF369706318E0C38215CE324932
7625B5924F5370E9C13F0A66881FC91A4FF6F1AD4CABA49269C8F547DCD6E7B1
47D53DB0D8DB88F2B7D435B16704B69FB1932CAE7E189DBCE941CC7A968A8CF0
A5B18680C9C1CF25413ADC7FED11BDA308A61F2B9B688FBE6F35592A7A80E7F8
36315FEDBD2A86FEAC9A2436E9827F2D291EBE20C9AF3B6EEDE26157BA188623
EEFD088E3003970F5406023034921BE2CB71FD2FF3A8097881277AD8FB61E2F1
78234A1900D0E11B18F1FC53B65F62F8F20B22A7C0584A3DEDCE17A045F366A7
2452F46F213B0EA52186A9693599344A739F6DD15AA4EAE18AC229C7C70E12A2
475B7821C941EC9B149BE9B6AF9A887A21D59350EAED951E317DD3AF21767FDA
40A19CF746A59B4B32287762B6D2F9850A4A87122E1D509E77B7E20D38903764
AFCD068B8A76AC6C24DE414BCF255B58E09F4896A0145E57B37C25B3A3B4F806
6B7213EB4B15F2817F7B535D00FE9C056045D271F2CC490173D436C77A4D1B5C
F3915DBB226CCF227260EEC9FEFF583E0EF33F6BF4DB1217F996539D799C1F2B
A294679C8CAB4A33F3DC44787F1C1A2F8E20F048E64438D01C41D5DC78FC197F
B5C0EDDCE8A5C8BD47011E12C3694410625F62DAA9A76B0CDC891113DF81BAFF
6C2330BCA4823C8EFC239E90AB58CBFAA79D5DB9129DF0596B941ECEF1150875
D47D83B0FE7193D255D4073B172CE1F795333DBC8305E2D7B377E9392064115F
CC430B7C56A4F012AB89EC3C4A27E78A6440717AD6A27FAD151067B5D05C903A
EB0228EBEEF7029F9A94998C6CB80C88E3959676E966A4573C342A07F6FDF3D9
7F278BC464242D1D7430BE7448B0CA657FA7E308BC5FF759E791EF3D8B466BEA
1EAD979163F3C22AC209459AAB2A8DF8EA3E7CB62F53DE1E2C2FE029263DC79B
6F98D7A4CDFB513DB6419A5198A469385ECBC3A6473145AF7A4ED82CFE4B1059
3F7487E14EA5E399DF5666BFB1E6DC8BB47553C4B922431F26F0E1CBDD960803
CC12903179A0F79BB05370C57291FB0945FBC73FBAC8237A98BF8278DC3F1C6C
04A9BC1EF84AD0C110820E2ACFB18925AC537FADBFDD4D9F26DF055AD73564EE
D7B0A7E05292D034E95275F3425515A93C34EF8FDA0095FF880D4BDCE4AF2EFB
220546BC6BC21226CBE153FC6A732EA3767E7F9AB51ECF51D19839C48831EA93
A5DD7687F7E20B080118709B103B91E34C7FD9F1D5966949859D5F1BDDBA381F
C71B231FEBF1F199E4C13308762321F6FF85402376274E125A1E00493EF9C658
5728A47F16BBD9C676B54C5041F675D099941FFCF3104BA9AED398ECFF46D327
46DFA2F3178F5A4193F37EBC8F32C2D8819842166535FBF2725655CD36ED4FB6
FEA0D136689665352D6054A25B712DB3FC5CDA93E64209F91744B47E11E6A04D
455AF91E4F5CDAE26580CB8961AF96FE27FF4DDE799372089A7CAD22E0972B18
43E20FDAF8645FD2281C29E68856B10C001DD9087BBBD5002972CDFA6FDB9C1C
A5DBDEBFF3B65144860E642DDAB31A643B644E8595EB62C9388D54F605DDA9D6
CAE96F4CB45D0C24C7F838B4F5907226DFA6EB7E2FA0AEAB32CF66C0A0FD4CAD
6FE7680C3D8837F71B956F02D8BC0B2D1F6743FA80CB14522E35722DBB71CD95
5848AF17A410097461027199A4B656B5183285FF3A22FFB806DD62FFB508B0D4
C90C9B0C3BA04022575C3C41BC363488FCCDFD442B94D51E537AABA773776AD3
039C062F0A261EB98702107BF2B0156AE1FFFCF457821BDDC3947E6B4B06841F
A64F25379F768DB4AFB6FDEAFF39986415307EFF86FBEBC09E101F95784B3F5E
5AD30B577E48E24989D87EA104A088769CB3C3A31640B93F83D806156D719011
D0B9C697ACDF0D066D341F309AD116474E686CE1C76F08B34DA76AF43EB1382D
21839845B57FB4CEA0CC8F8A4E92282D1E2C0D038C9268F1E4532BD3C291556D
0E19E439E66402D75F2193E56552C02688CC3C83C7B87F2165515824A9D2C5FC
A5FCE6D7A568896599285159236B7EE93B4AB26068734EDE4DB48A8EA6EB272C
12140C210FED895520605A3E92EC4CB9A5A9C965C3A7F4E3AD75034252BE8799
6BBF6363529DD3B190EF57C9276643A9443002CFC1225543FEA03CEE0A865198
D7E1BC8C49885507ED3DE51EFA18D1C2466D831CB7568CE85DC481D41F3881F9
95AE5EAF0944EF072CB0DFF3ACADF718D6AB415E4577AEEE8387544BB22B1B17
77A60CED5CD7E07ACFE336EC430823D9EC5543D448D6B3678429DEF8A52CFD93
059C68690E3CC412EAA9539E18D381F7A20CB404ABFDF034BB72A0AC60883467
8427C2575243EDC793A673E11154D37A781E17B78577A871D96337508C525554
D5D0D6751F6C4035A97CBD6D4A3B8C94D6ECACED07FC274A3D8A707B85BBE266
040E2BECF9373C9AF426E17059D6EAA59AA2D249D17F31606AA03661DBC0F149
A46970708C875377C40F2B60E6A34F45074010FA954055C813B7B7A5948C9160
A407AF5324C3C4C3B33F426AB61E459748F44D39BA64AD7F424857128CD427D2
126FE27139D73A05FD33B0358C4A7F9DDC8E5A4E871E2C1C3541847BB962F6E8
AD136D3CFB18F68396A1F561884D4959A1B2D1AA71A961EF8BC0A5A985CB5B48
F0B7A7C1514870F61E5782DA2E10DA8448EF07CD41EE90AF1C98E72BBC53085C
789F253C77A3A91CA50AC69A6183F4AF785F0354FE8C6AF224FB31E83A67A9D9
CEFFCD9CABBC77BCD495B253DD722630869A875682373892E81D4FED5FDF209A
7DE54C17B4AFC778C74451B4B4B7E0FD4C543E31935A3598ABD4E9ADFADA0F2F
6129F9298DCCA67B16408CB7CD6BCF98A227D98628B94377564433F41EE3E3DD
D7612C49DE7576AAEC77345B6A2D107B01605CD7B1F5A3340A03DC78AD5A9F37
0D60C8AF3F69BBA10D99C292CD6251AFF6208078D5198FC18E465B91C3C26386
FC0403149CD74DBBA7E6D6FEF1A6C7FF7FF00046A1F7DA406675B2D5C1E38BE9
253A95FC0D23C832B5B2D958787734836D6822319B7BFA1F4995639B775114BF
FA335E51E977A17D9A9DF8D485284D492A8615FA28A2B7453AE1913A34805A82
E0B77AE08BEE53992FD6E0924E49D59767DE60E74DB10D6CC9807A7A191E1971
C98EAC2FE1E6CB5B29668B8423E5B570EF7901CDB46A5EAC029455D0777C45D9
806CD0D191475A02134C35D400F2D98E6EA46A4DB28DE7486B63F77CE3A61319
2C2DC3C7BF053545F30E85AB5FCB8E008696EC3A294E2B8FA35A6D5D279AE811
B0C9F8AB462D9E6FE7AA973348D8F01A7122E9CDBF511C1E2390658EC0BD2A82
D1925599E3B01C91730952F155C9E4ACCC961DAE19978E7454B930CA7E4B7B87
AF7AA737D4A15FB119FD36EAD8EF3ECFF27CAAD1652AAC4DDF0438B6A9FE78A0
00BCB88BB832EF61BECE87498E45C696B11EB368170A4AD7EC5B61C40E0EED26
D5BAC0374333814C43B8E729A7E2BBC95078CC93A8E7D5159074A68217A24C5F
33650545569DB1524FB19ACE7983A614496A8A51F04C128201E05A2F19B04A95
3C4EB1FC684B61D6F38351129047468DCDAA864660B62CA9D3C9D5F9A5306F0A
9911A8FE1FC6D87A3C505BDB41CE98DBB1CEE25CDF6A477EC1F2B0C0DDCDF5F7
694067B9E1F10F1DB9F8A1193A45ADFDDBBD10984356419F89FE6579CD8345E0
6EF0B4CCF171FBE1B471F36DE44A4F868AF6431E3A1353ACB9CB124C4E9D7BE5
F3E80BC5D29129F18D358C377FF2BA7EF2D0B365A4DA15CCAEA19ACB089F9E4B
E72D9F794F1DD4B435602A2BDB03A0AA53101A11A09D866888A735D1B4699B5B
804E26F354B27CBE0BF66A2ED772A2AADFD8A09F901A92A6B76F664F1F66070A
DC6F5BFF090EEBAD1B07EA58B768C507D989423CFFC80D3DF2A5A99D70200BA7
EBDB1617FDB182CFFC8953A47AB7D8524D1B1EF9C25A71FA5D99B7F55B076E35
4866596A6AF217B2C392AEFF8B929A9806EC4E45385926EB894D3BF098D5E526
600BA57C29EAECE058229E51819885D4199DF78582E4FF2239734106C246D8AC
73BA5725573B665368F4A8578CAB35E364229FEA64B936AC224401B579F68DBA
8B427A9B3A3162C2B53847E039C02590FC0F789178441ED5F9EBBE6657171494
A4CB6A5F8F1C67A4C625C731363CDCDA2535A6D5C92F1DE3CDDC1AF2CDD20512
51C369AB512C54C96EBA8EFB95260E6CDBDFB2005FCA764B15725C8167012A4F
FBD50AA4A5E94FF4375134907653F9031A0C33EE261276ABEE106F090F032605
7282774C2AD219607C4C4BC76A31B4AED126839347AFE078F874CC9DD12EAD24
44EF98EE697F8309A602B04E4D0FAC68D86999CCFA7999F2DCB2F6932B871B84
CDDB6917659EB213D907E66155632905E5EA6FA7080B3C5D5831894DDA8C0852
93CDDD25D5A8F4EE0EA234176CFA34FA9C1C0F99EE94B63FCCD452EE926E0DEB
F43451DC11CD83E502ACDAB5DE3F3F04A3D5D24A91E39A60AD9663BBF944ECF6
0145BEDA784EFF2D726E6BD7E23CB4CAB60CAFD38D6ED99A9E74FD8700E1FFA7
BC9F63D69C958C976E84697315DAB5A1C147BB2819319F667F6F9F864EFD6923
3497BA378825BC54E724BB79A13AEF39E5A297F0D3071419CFDE487D07BA41BD
50FC86670AA04942C8C424D37CD1BEDB8E489B3E9AB271B434D45620D87F6197
96C57515256C0EF1989CA2489113E42ADECD726A4CBC1FE58C6F87DD27762374
CFD6971B587940831CACD122B4E9761601EA68CCE0C32D7E9D3031E6EDE3BC30
86AB1AEE8B4E3C674319D17D78761B6E4FCBE3FBCB35EC2999EDF55C8D6670E8
E8E24D95933251C48FB106F8B56D1139F39FFE19416FDC22D1F0C3B7F5785E5F
28517A676833CBD6389CA96D8BFF42F3462072064A41D97076B0EEE380257C0C
4BBB12FCF01349E7F06CEEC20B2F340F9357885A09906D88238073C59D0FB837
C56A5538AED41A6AA33A06C537628900BAE1998EDCCB89189AC7C3180A707602
985CD4E5DB6C5F30C620114F4A519DA25744F62C97CBA901470E299ABC6B41BE
831A7B74217A445AD7AE444487347AA24823872CD4474FAEF0CDE4A988A9379D
D7F196A4175C814A1FEF3BCE2E1801FCF6EFE2A9EF484E9A1BBFE7641DB3C37E
3BB19C1FDD38CCC1BD2116266F2557321B83AEFC8F0E8C91161DA0923A20F0BF
FA029BD1B6E4601A06BDA6D7A77F323F7EB8332AA84E1C244E5FD767A61CDDB4
94CA429A0A7543E79ACCA901ECB02D5870531FABF88623676E0F57D13F40E7A2
8625F226B3CA77BEFE50E0E889BDE8591074101F0533FD1165D0EECD4709B2B0
5FEAC688799B7A0EA3ACA9516D594305DA5159E28B07FAACC97A60BD1BA048BE
8E975727D88F86FAEA8EEE8CDE2272C082B5456F987A2ADDC0734E0F6F4B3CD4
04479B0067E6D3980EC2E8438FC88B5D52F3ABA5CED9F81068314CC3A362D6BB
15B3E526AD503B6E58828E2CFADB18873DC653C982315841292A2426B09F3FEE
1771C124EB071BA53B4309D2DB520743FC3B1DD18040393F4D071AA6E8FFC5FF
25ACE4D312B01AEFEF299350331DBB756D9415F2D24149BC6FC618FC3F9785AC
A4FCC247E616B42181A59D107513A5C5F7BD7982F88FF53523ACE8C8A4F4BB74
A0E33C3F7152E316CA9637898BBF3A857DC335A2A2C4BA85CF767A99A7746E7B
A88C6C6017D2B509B9421D9D231BCD94CDC89D3DC8ED7D2BD7039B818D1AED4D
5D7831C059FFE9F76118F74CB7760417E948C261F6008DFA6ACA650D32BB0723
3D37BFA0DF9066EB80D2728B3A7C9012B39850FDC7D0010AAD789B3B483B74F2
DD59C5B5F956F13EA6EE6799462FAFBCBE7678ED53C7D30A52A78767656496A7
99A5537675EE43DC35060102BF02438458CFDAAF6DF38C469FDCEFCFC65E3E4B
F76E119C275B3E7AB082CFDDCBE5C9CE73578C3DB355CDE9A9F47FBC0C02CC53
2E3113847B5CE894F984E034F4C9448DCE310FC76F7BB16BB6D212784A603D8A
C724A8478FCEE57270DA76C63A486E4127ABF3A1D30B79F0A7AD3DFE6772845B
EB2A7B1452E213B546ECB5756BA2AA8C3C49F3B7202FF678A5B12280340EC7BE
124FF3EF7470C6DA49C2E98280DE6CF870C3AF4BC27C671E9359B87C33751FA7
761799F408B4F8201E369350669466FDD25C7B43148D5A28C583B4543F53C559
4D1470F42ADD3CFBAF360D688D83EF37E86F69A7631B983A97EFE23D205A55C3
D50D7EE787EFBD4435C2BA6F488BCDE5E30C96D8C3759A3BF03751D4E1B53054
59102A814618D56466E89C0652A865D9660FE44EB2999A41D2A2FF1F1ECBE9C2
D0B851423A2D8D9E49B3D72CAD89BB455E212DBAC372ECF7E1DC755DE0F09F05
8EB715F55864EA75102C31498DA44DCEC91481423984A67C7C06E37F8FE69640
EF6D02A814C63E2F3BDAB3C4686B94A8EC2F8C915BF978C75C30B41241C8A0C3
63D77B4B466A0C55B9524F5808206019FDF5701B6AB478301C271E72392280F5
33EB152DD725F6E9928E87F71CBB8EC42B6BEC4A496C6F66FAC41D865F4ED111
BE5C934E5A2C022A0466A241F732A732ED3FD7B4BD820652E3E07C6B2E1184FC
82004E78C904C998C6140EEEAE2BFD3C540D183A70792DC54F6A67CA4FB37DD9
4F2749ED95A7570B5659142F22891CECCB6C94F4099A6C14BDB16A5C6D8D733A
ACCEFFE85B334A013CE3D59782CCF2E4F3CF6258EE8377250983DC248A1B628C
066DFDC1C0231DBE1AC165E08068DCD7132D2FD4A1A8258CF70C9DB59B9E9F36
B0D40BDCE1E3915D2B4851F95033B5B313D631976A7449762FFE43E673ECE7C8
43E966793704CA6491B4D1ED45E936607E870B8A2E2BCF398B0ADA3A73116EA7
3DB8BC9664DA29F82761B77C5FAD18792AEB46F1F63794DC6440E7E60311AB6E
D040C645B1D63C9A89722809D98A095D6F488F7D372446458827FD9BE7ED1C43
307E78DBACE4205C354651ACC132206D0CE8E8100513124E2FC1B172791FA54C
51FB0A2C9E8488FD4ABCB0572DABA11BF33F90CE9B00ACFE0A00AA452DC766CB
8EF6099B137C406A2CADD9EA2444AE54BB85EED69C5679E635332809E05DE0F1
88A73A9F660AE7C1CDE33D5D40B0C6C808F4F859CE31DE40C304069D55ECAA41
182534A2BAECCAE1631A0D4640C3E4B0FC1B13C18F0149553AC46625C9236068
51C88D0F2E6D9C6D58EE526B4ACD262FE13A8888ECA6DEF76BA85ABF7FA0124D
889A4256406F7F7EF2EDDF40D32FF26C91FB27DFD5A24FE8984C66A73F7309C2
0AA087B8FE5EB8B4C2273D3F280209E6DB8B8BBECCF398C75C1693B0BC43EDE5
E735476896C83307129AFDC84E4CAD1BC03785003617554939E46C83E6ED90E4
A14C305E071ED6F445FFEDE3F25553A99D261B4D6A35F97476ACFC46C5F8F446
FC9147941F6525A79F4A22F65D70BFA7A20522F4BA3F80CA07E8C376B7D1F4F6
C19DDA8C58B5A09469F6BECEC9C51DF4696A904E11FC9D179A163188966BEC21
090C503F5F4DE1E153CD25030266CEF5D7401DE87F5110C7091775E5C68FB991
9015191960691FDB62626AFACF4C034D82A55E3352E02B554917DE529FAAD21A
CA5C6AC11BADE368E11C191FE5173E1647A5445ABBD01AD2D014E882B03DCCFD
9A48B8D2271E6E701019161BF3E343FDFDD5E8112F4F81280E6724E6E6894E41
BA9F9A9D6B73C9F5CEF5DE360AC3636FB323ED17DE442DF630969E2EB8591772
DAD7ACF539032D971D134AE68B971BE54FD78941492C70A39B43CD0B66321AE2
453081EF0EFDE26785F88BD090FCDC1F8640CC735DC9F550731160C711A4234A
FC08908BEF220224FC4B9ED0771B3EE8FE7D9A66610D79CD6240C436E8652961
1D683647876BCAE3E390973BC5D3EBA3816D5C6F6AFA94E41F3E54CF1DECD28B
7AF354F9282C46810329C9213152CB0111F661AD371EC72D73E22CF216BD3482
DA543C42D53062E684A7B65AA31A4DFAF9F8A2DDD6A7D16D8A5B342C375F212C
0202F094EE3595FCC567F500C3CCD2CAFBA5C452CCBA91EC54EFA3B76CE4DD15
CBA1F9E7BC78782CC058AB5226427A8F7ED5C8AE1634A0244C0DC2B636903431
8A8BE85A9C2390010D5C3CF2284DB2AF3A54962A0E8764091EAD96DB13C32D89
D88F58F2FDAA160F6D72D508E24F805DA4A928F043EB2F6E8B01BBBC461C25A5
7CC82AA1C78AF82FA660C5CC7E0281F072863F659CE8B0908F586E3E8DEC769A
D7482FA0E071BA2A2EF173EC1D77343BC7537212EDF6E8A306949B268286D689
D98B3AFF51748F2D401385DA513779C72B92B95F845565AB493FA2BB92FCDA4B
3BD3DB9EDDC6718E1623DDE16FEFFC557F4D61BA6A5FF6837AA8F65C01B8D3D4
7F92F584C00582C5411DCEDE638A894C0F1715080B8DB06403D432FE0FD1B08D
FAA90F6F8BDF1E00A15FD8D556D6FA63DAA63472B2992A000C6196EC5EFCC9DB
DCC14EE31339122703F032D3CCE6BF32F08BCDDD98AADF7157587794BB95D437
6C0E4ED6F7EFBAFDCCFFAD2C2B06B9729B5E23A01B39A3531A4A7C0AE42D164A
90BCD2F338BB82A5EB716DC800D3E6978CC63E0C91FB9483F8E19F6544313AD3
20A532FDAE8EE4611F19FB6302DE4EBBA8908F139B56F9291F59629CDA8090A7
A8CA149DDEAD0B0287E365CD909F2025057C8C48EF60ECBAE8039FA3A70FF571
2C0640EED251C5CC02380B1061C9F2B2829A7BE0B61EF9651EEFF86887EA96FA
4C926E5AD9571902CAF62397090BF9777FD1025CF9A7CBB14BA63A4ED2D57E3B
E2BA4AC26C156886AC1077959D228DAE638F0478A6EBA7F96F4416938B8A1A69
3734FCF36BD102DB122B2001D957590BE4AA618B70138DE91C94D992C9E65459
8214B65474B2AAB7A0966157F5BBD76EB53E2FF8F17C2F2376BCFE0724F0E28B
E76D7357806902CD8B96FBACFAF177E8929BDEC0B95575F7289B5DE49D455FE6
F3B62093543D5435ECDDACBFBE1681902D9A33A14EA9E99039001EC1EC83215D
E48ECF91299B1083FEFCDCD1EF27B7CD36BBE830035CBE34E4AABAC5A8464F16
35E934AB89070E7E66E903396F45F4A89CC7D40B2307CEE412B2041B5CACAEB3
C919E808CD5F437BDDB41432D9E7351B3C816BFAE8762658C94DD6C053E4E1A7
3479C08F48EF211DA915FC407A9B1DDF17F4FADDE203051879861400F8CEC80B
AC8983179336660E64D50AF4A5D5CA5F1B6EED4FCCF7FE5A2FC12A69C86567C6
4A42BF8B6D8F993C035482FC34E8B118E99369146B7E36B4E00483D3FD0AE0E3
36BDDDD307FE124991CAE21013D06022717FC52651D92E370B3049D47CD166CE
4A66B98382B85ABB5F5DA49FCF7A29263025F18BA39D22EA52B5B5B3A7ED4ECA
2B1F4F0820FE18A88562A9B34E74397CC3E915734150D72408FE366C2E34F69B
567BEEACB04000220668275A59C69B2BA699576ECD21B88E718E44AC8E256E98
5A8944F2FAAD09A11E507209D62BB408B760FE0F1D076872466205F4E9AB3A15
33EAA81527FE8E1B95204C30AC487406D8E0FCA6EBE1BA613F039A2EDDB5852A
24D39E323E2FC2505944B412F97E6D7A0CAA33667137A7177813D90440534535
6F1E3F790734DB18EF4853B8C6D387A6D46B3BB4B7A5412FECDA8C7433F67C74
0288C87956C18E77132E2187AF12C001B145ACE046FBB55D82519B3B9D8ADBD7
2CB0FF993280AC5E1EA0481866E5C45992E0EBE919C528DC56AC83FE097944C8
E2C3515D56339200DC0F2297D94E28615D52DB24DED740AE30AC276D0E7B4B01
1E1A39D325BCEB9DC33EAB779FA7B9968DFF8BA40CA623CDDF640E41B1CA1EDA
40F504847C0585C82AC28A76EDF6CB4CE286EA850D731CA1AEB162F86547F0F5
B5C8E1628DC2894FAEA9D086853547FF346072295190AA1844102DB021EE6571
932296304EE9FA8F5DC3A1F7F7BAAFD038B96A5CF7159F30F1AF04BDAE153031
613A4B86C08287F77A6D0A9297328072705B26E89E10B6C9DABDA586EEE6B716
688DA54D212C03DADFF89588FE5D174E245ADF990E9764DC381958E287891614
54677B172A568F9BBC6E592BA116C6A4793DA40C69805829273AE2D34E56D2A4
FB931253C026E9F97D266CCD8918271DC9BBBFA3A54B4E802E675B785D0C6366
B2652F7A6CA25C9C2AF6DD22AFB2617EEB7353A7A6ADF3EAC8A9F6CC89B10E90
A3690675B94DFCA6A506EE5E92AE20C66EC2135EDE261A653EFF25F59ADDD254
5244CD6A799ED1B3918714DE9B6473A12E3894D7BC8981440904719DC21CEC30
DE8F95D7B7F9C432473DAEB72B228A65BF90B6E8213B898B210195D876C52058
F0C2BCACBB341279236E0B9BF579DDB669FE8D73C62DFEBB343C86B9E5A87C95
A1398DA01AE1BB8206CAC12FA1F20ADE2F32A4599CD87C8C014B11A3EF0388FA
06BEF8EE3E43475AD40F0B43435BD2FCE3BD6028DAB1BF3A2AF452CC3A452F96
FF1640529F79515DC501F726186BCFC57B6AEEF2AD26B2F05C9A58C2F4AFC367
597C5D2A5FC7E11E6EE9F4001AD9641A8FB2ED5AFEF54CCA99DC3195955F40FA
1AFF7BACAD47E3C92E47C54B8D9A137341EF4885E54780F36F3E19285BC7E7D3
B0D6DCF3C041A052EA50CF1A1B5C7B521688185AA3B1BD6C05D6BFA8E88765BE
3EFA69BDE25754D03558DA1B12E9A6ACA8EC264FD7C4CDC27C7DB9AB975826FD
CE02D10894CB6FB2CDAA5D3DA49BEE5641FD786098F5966B625BE27A4EF0108E
25DC24620C83EEB8CF843AA8A45E631F1F9C656E9DD5B4DD40DC5276CA847866
344653D69FE515DE659502F902BCEC71D8880F3F660E0B2A94BE914FA8B50DFA
08C9C598459D1CC598A2BAB0B0A97304EA424F3FD462E25F1759A08681CB0217
397F5BA1BFA8EC1C97
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_Writeup2.dvi)
@start /Fa 134[59 3[62 2[46 2[56 62 1[31 59 2[62 2[51
62 50 11[116 3[62 3[84 2[67 88 7[81 11[56 2[56 56 56
56 2[31 37 45[{}24 99.6264 /CMBX12 rf /Fb 134[71 1[97
71 75 52 53 55 1[75 67 75 112 37 71 1[37 75 67 41 61
75 60 75 65 9[139 102 1[94 75 10[105 1[85 1[103 97 11[67
67 67 67 67 67 67 49[{}37 119.552 /CMBX12 rf /Fc 133[37
44 44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46
42 25 37 46 37 46 42 7[62 1[85 62 1[60 46 61 1[57 65
62 76 52 65 1[30 62 65 54 57 63 60 1[62 7[42 42 42 42
42 42 42 42 42 42 42 23 28 23 65 1[32 32 23 4[42 20[46
46 48 11[{}68 83.022 /CMR10 rf /Fd 134[50 50 69 1[53
37 38 39 1[53 48 53 80 27 50 1[27 53 48 29 44 53 42 53
46 9[99 72 1[66 53 4[75 5[75 1[60 63 73 69 1[72 9[48
48 48 48 48 48 48 7[37 37 28[56 11[{}43 83.022 /CMBX10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 2) /Subject (CS 444 Writeup 2) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Design plan for SSTF algorithms) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (What we think the main point of this assignment is) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (How we personally approached the problems) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Concurrency) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (C-LOOK Scheduler) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.4) cvn /Title (How we ensured solution was correct) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.1) cvn /Title (Concurrency) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.2) cvn /Title (C-LOOK Scheduler) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.5) cvn /Title (What we learned) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.6) cvn /Title (Version control log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.7) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150
0 a
SDict begin [ /Count -0 /Dest (subsection.7.1) cvn /Title (Week 1) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.7.2) cvn /Title (Week 2) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150
0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150
0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0 TeXcolorgray 0 TeXcolorgray 1738 1009 a
Fd(W)-8 b(riteup)32 b(2)1707 1227 y(Alex)g(Ho\013er)1544
1327 y(Nehemiah)f(Edw)m(ards)1821 1615 y Fc(CS)d(444)1735
1715 y(Spring)g(2017)1767 2051 y Fd(Abstract)238 2269
y Fc(This)g(second)f(write-up)g(details)g(Alex)h(and)g(Nehemiah's)f(w)n
(ork)f(on)i(Pro)5 b(ject)26 b(2.)36 b(Pro)5 b(ject)27
b(2)g(consisted)g(of)g(a)236 2368 y(concurrency)f(exercise,)h(a)g(Lin)n
(ux)g(patc)n(h)h(\014le)g(in)n(tended)g(to)f(rede\014ne)g(the)h(no)r
(op)f(sc)n(heduler)g(as)g(a)g(C-LOOK)1432 2468 y(sc)n(heduler,)f(and)i
(this)g(write-up.)p 0 TeXcolorgray 0 TeXcolorgray eop
end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fd(1)77 b(Design)30
b(plan)i(for)g(SSTF)h(algorithms)1655 266 y
SDict begin 12 H.L end
 1655 266
a 1655 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1655 266 a 0 TeXcolorgray 2047 w Fd(2)p
0 TeXcolorgray 150 448 a
SDict begin H.S end
 150 448 a Fd(2)77 b(What)32
b(w)m(e)g(think)f(the)h(main)g(p)s(oin)m(t)f(of)h(this)f(assignmen)m(t)
f(is)2439 448 y
SDict begin 12 H.L end
 2439 448 a 2439 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2439 448 a 0 TeXcolorgray
1263 w Fd(2)p 0 TeXcolorgray 150 631 a
SDict begin H.S end
 150 631 a Fd(3)77
b(Ho)m(w)31 b(w)m(e)h(p)s(ersonally)f(approac)m(hed)i(the)f(problems)
2151 631 y
SDict begin 12 H.L end
 2151 631 a 2151 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2151 631 a 0 TeXcolorgray
1551 w Fd(2)p 0 TeXcolorgray 275 731 a
SDict begin H.S end
 275 731 a Fc(3.1)83
b(Concurrency)926 731 y
SDict begin 12 H.L end
 926 731 a 926 731 a
SDict begin [ /Subtype /Link /Dest (subsection.3.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 926 731 a
0 TeXcolorgray 84 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(2)p 0 TeXcolorgray 0 TeXcolorgray 275 830 a
SDict begin H.S end
 275
830 a Fc(3.2)83 b(C-LOOK)26 b(Sc)n(heduler)1175 830 y
SDict begin 12 H.L end

1175 830 a 1175 830 a
SDict begin [ /Subtype /Link /Dest (subsection.3.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1175 830 a 0 TeXcolorgray 29 w
Fc(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray
0 TeXcolorgray 150 1013 a
SDict begin H.S end
 150 1013 a Fd(4)77 b(Ho)m(w)31
b(w)m(e)h(ensured)f(solution)g(w)m(as)h(correct)1827
1013 y
SDict begin 12 H.L end
 1827 1013 a 1827 1013 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1827 1013 a 0 TeXcolorgray
1875 w Fd(3)p 0 TeXcolorgray 275 1112 a
SDict begin H.S end
 275 1112 a Fc(4.1)83
b(Concurrency)926 1112 y
SDict begin 12 H.L end
 926 1112 a 926 1112 a
SDict begin [ /Subtype /Link /Dest (subsection.4.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 926 1112
a 0 TeXcolorgray 84 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(3)p 0 TeXcolorgray 0 TeXcolorgray 275 1212 a
SDict begin H.S end
 275
1212 a Fc(4.2)83 b(C-LOOK)26 b(Sc)n(heduler)1175 1212
y
SDict begin 12 H.L end
 1175 1212 a 1175 1212 a
SDict begin [ /Subtype /Link /Dest (subsection.4.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1175 1212 a 0 TeXcolorgray
29 w Fc(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray
0 TeXcolorgray 150 1395 a
SDict begin H.S end
 150 1395 a Fd(5)77 b(What)32
b(w)m(e)g(learned)990 1395 y
SDict begin 12 H.L end
 990 1395 a 990 1395 a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 990
1395 a 0 TeXcolorgray 2712 w Fd(3)p 0 TeXcolorgray 150
1577 a
SDict begin H.S end
 150 1577 a Fd(6)77 b(V)-8 b(ersion)31 b(con)m(trol)h(log)1065
1577 y
SDict begin 12 H.L end
 1065 1577 a 1065 1577 a
SDict begin [ /Subtype /Link /Dest (section.6) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 1577 a 0 TeXcolorgray
2637 w Fd(3)p 0 TeXcolorgray 150 1760 a
SDict begin H.S end
 150 1760 a Fd(7)77
b(W)-8 b(ork)32 b(log)658 1760 y
SDict begin 12 H.L end
 658 1760 a 658 1760
a
SDict begin [ /Subtype /Link /Dest (section.7) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658 1760 a 0 TeXcolorgray 3044 w Fd(4)p 0 TeXcolorgray
275 1860 a
SDict begin H.S end
 275 1860 a Fc(7.1)83 b(W)-7 b(eek)28 b(1)731
1860 y
SDict begin 12 H.L end
 731 1860 a 731 1860 a
SDict begin [ /Subtype /Link /Dest (subsection.7.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1860 a 0 TeXcolorgray
21 w Fc(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(4)p 0 TeXcolorgray 0 TeXcolorgray 275 1959 a
SDict begin H.S end
 275
1959 a Fc(7.2)83 b(W)-7 b(eek)28 b(2)731 1959 y
SDict begin 12 H.L end
 731 1959
a 731 1959 a
SDict begin [ /Subtype /Link /Dest (subsection.7.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1959 a 0 TeXcolorgray 21 w Fc(.)41 b(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(4)p 0 TeXcolorgray
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(1)135 b(Design)45 b(plan)g(for)h
(SSTF)d(algorithms)150 265 y Fc(W)-7 b(e)28 b(planned)f(to)g(mo)r(dify)
h(the)g(Lin)n(ux)f(distributed)g(no)r(op-iosc)n(hed.c)f(\014le)h(to)h
(implemen)n(t)f(a)g(C-LOOK)f(sc)n(heduler)150 364 y(instead)34
b(of)g(NO-OP)-7 b(.)34 b(The)g(algorithm)f(will)i(use)f(an)g(insertion)
g(sort)f(to)h(sort)g(new)g(requests)f(that)i(get)f(added,)150
464 y(while)28 b(servicing)e(requests)g(that)i(are)f(larger)e(than)j
(the)g(disk)f(head.)37 b(When)28 b(the)g(disk)f(head)g(reac)n(hes)f
(the)i(end,)g(it)150 564 y(will)i(return)f(to)g(the)h(b)r(eginning)g
(on)f(con)n(tin)n(ue)g(again.)42 b(A)30 b(merge)e(sort)h(will)h(add)f
(request)g(in)n(to)h(the)f(bac)n(k)g(of)h(the)150 663
y(queue.)35 b(The)24 b(algorithm)e(only)h(scan)f(for)h(p)r(ending)h
(requests)e(on)h(the)h(queue)f(in)h(one)f(direction.)35
b(Whether)23 b(data)g(is)150 763 y(b)r(eing)28 b(read)e(or)h(b)r(eing)h
(written)f(and)h(the)g(p)r(osition)f(that's)h(assigned)e(to)h(the)h
(disk)g(head)f(will)h(b)r(e)g(prin)n(ted)f(to)h(the)150
863 y(Lin)n(ux)33 b(Kernel.)52 b(F)-7 b(rom)33 b(the)g(no)r(op)g(sc)n
(heduler)f(clo)r(ok)p 1854 863 25 4 v 29 w(dispatc)n(h\(\),)j(clo)r(ok)
p 2498 863 V 29 w(dispatc)n(h\(\),)g(and)e(no)r(op)p
3297 863 V 29 w(init)p 3450 863 V 31 w(queue\(\))150
962 y(will)28 b(all)f(b)r(e)h(mo)r(di\014ed)g(and)g("no)r(op")e(will)i
(b)r(e)g(c)n(hanged)e(to)i("sstf".)150 1104 y
SDict begin H.S end
 150 1104
a 150 1104 a
SDict begin 12 H.A end
 150 1104 a 150 1104 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 1104 a 133 x Fb(2)135
b(What)45 b(w)l(e)h(think)e(the)i(main)f(p)t(oin)l(t)g(of)g(this)h
(assignmen)l(t)g(is)150 1419 y Fc(W)-7 b(e)27 b(think)f(there)g(w)n
(ere)g(three)g(p)r(oin)n(ts)g(to)g(this)g(assignmen)n(t.)36
b(One)26 b(is)g(to)g(con)n(tin)n(ue)g(enhancing)f(our)h(concurrency)150
1518 y(abilities)k(through)f(the)h(completion)g(of)g(the)g(Dining)h
(Philosophers)c(problem,)k(whic)n(h)e(is)h(a)g(classic)f(problem)g(of)
150 1618 y(concurrency)-7 b(.)39 b(The)29 b(second)f(p)r(oin)n(t)h(is)f
(to)h(see)f(ho)n(w)g(the)i(C-LOOK)d(sc)n(heduler)h(lo)r(oks)f(in)i
(practice,)g(and)f(ho)n(w)g(w)n(e)150 1718 y(can)23 b(mo)r(dify)h(a)f
(Lin)n(ux)g(distribution)g(to)g(apply)g(this)h(sc)n(heduler.)34
b(The)24 b(third)f(p)r(oin)n(t)h(is)f(to)g(con)n(tin)n(ue)g(to)g
(familiarize)150 1817 y(ourselv)n(es)k(with)i(the)h(Y)-7
b(o)r(cto)29 b(k)n(ernel,)f(sp)r(eci\014cally)g(ho)n(w)h(to)f(mo)r
(dify)i(the)f(build)g(conditions)g(of)g(the)g(k)n(ernel,)f(suc)n(h)150
1917 y(as)f(c)n(hanging)f(the)i(default)g(sc)n(heduler)f(and)g(running)
h(\014les)f(from)g(within)i(the)f(k)n(ernel.)150 2058
y
SDict begin H.S end
 150 2058 a 150 2058 a
SDict begin 12 H.A end
 150 2058 a 150 2058 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 2058
a 133 x Fb(3)135 b(Ho)l(w)45 b(w)l(e)h(p)t(ersonally)g(approac)l(hed)f
(the)g(problems)150 2297 y
SDict begin H.S end
 150 2297 a 150 2297 a
SDict begin 12 H.A end
 150
2297 a 150 2297 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 2297 a 93 x Fa(3.1)112 b(Concurrency)150
2543 y Fc(T)-7 b(o)24 b(prepare)f(for)h(this)g(problem,)h(w)n(e)f(lo)r
(ok)n(ed)f(in)n(to)h(the)g(Dining)h(Philosophers)d(problem)i(whic)n(h)g
(w)n(as)g(in)n(v)n(en)n(ted)f(b)n(y)150 2643 y(Dijkstra.)34
b(W)-7 b(e)21 b(found)g(that)f(there)g(w)n(ere)g(man)n(y)f(di\013eren)n
(t)i(solutions)e(to)i(this)f(problem)g(since)g(it)h(w)n(as)e(a)h
(classic)f(one.)150 2742 y(W)-7 b(e)30 b(w)n(ere)f(c)n(ho)r(osing)g(b)r
(et)n(w)n(een)h(Dijkstra's)f(Resource)g(Hierarc)n(h)n(y)f(solution)h
(and)h(the)g(Chandy-Misra)f(solution,)150 2842 y(but)g(w)n(e)f(landed)h
(on)f(using)g(the)h(Resource)e(Hierarc)n(h)n(y)g(solution)h(since)g(it)
h(made)g(the)f(most)h(sense)f(to)g(us.)40 b(Then,)150
2942 y(w)n(e)28 b(needed)h(to)f(c)n(ho)r(ose)g(a)g(language)f(to)h
(implemen)n(t)h(it)g(in.)40 b(W)-7 b(e)29 b(tried)f(C++)g(so)g(w)n(e)g
(could)g(implemen)n(t)i(it)f(in)f(an)150 3041 y(ob)5
b(ject)25 b(orien)n(ted)f(fashion,)h(but)h(ran)e(in)n(to)g(some)h
(problems)f(with)i(this,)f(sp)r(eci\014cally)g(b)r(ecause)f(w)n(e)h(w)n
(an)n(ted)f(to)h(use)150 3141 y(pthreads)k(and)h(the)g(pthread)f
(create)g(function,)i(whic)n(h)e(tak)n(es)g(a)g(v)n(oid)g(function,)i
(w)n(as)e(giving)f(us)i(grief.)42 b(So,)30 b(w)n(e)150
3240 y(c)n(hanged)25 b(to)h(C,)h(where)e(w)n(e)h(w)n(ere)f(most)h
(familiar)g(with)h(the)f(en)n(vironmen)n(t.)36 b(W)-7
b(e)26 b(lik)n(e)g(the)h(pthread)e(library)g(a)h(lot)150
3340 y(b)r(ecause)33 b(w)n(e)g(are)f(so)h(used)g(to)g(it.)55
b(F)-7 b(rom)33 b(here,)h(our)f(approac)n(h)e(to)i(co)r(ding)g(w)n(as)g
(that)g(w)n(e)g(read)g(the)g(Resource)150 3440 y(Hierarc)n(h)n(y)23
b(algorithm)h(and)h(used)g(traditional)f(pthread)g(library)g(metho)r
(ds)h(lik)n(e)g(pthread)g(create,)f(pthread)h(join,)150
3539 y(and)d(m)n(utexes)g(to)g(implemen)n(t)h(it)f(so)g(that)h(eac)n(h)
e(philosopher)g(\014rst)h(grabb)r(ed)f(the)i(fork)e(to)i(their)f(left,)
i(then)e(w)n(aited)150 3639 y(on)29 b(the)h(one)g(to)f(their)h(righ)n
(t,)f(and)h(if)g(w)n(ere)f(unable)g(to)h(get)f(b)r(oth,)i(ga)n(v)n(e)d
(up)i(and)f(w)n(aited.)43 b(W)-7 b(e)30 b(used)f(c)n(haracters)150
3739 y(from)k(the)h(Marcel)f(Proust)g(no)n(v)n(el)f("Remem)n(brance)g
(of)i(Things)f(P)n(ast")f(as)h(our)g(philosophers,)h(whic)n(h)g(w)n(as)
e(an)150 3838 y(imp)r(ortan)n(t)27 b(design)g(decision.)150
3970 y
SDict begin H.S end
 150 3970 a 150 3970 a
SDict begin 12 H.A end
 150 3970 a 150 3970 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150
3970 a 101 x Fa(3.2)112 b(C-LOOK)38 b(Sc)m(heduler)150
4224 y Fc(T)-7 b(o)19 b(prepare)f(for)h(this)h(problem,)g(w)n(e)f(w)n
(en)n(t)g(to)h(class,)g(where)f(Kevin)f(McGrath)i(talk)n(ed)e(ab)r(out)
i(di\013eren)n(t)f(sc)n(hedulers)150 4323 y(and)34 b(discussed)f(the)i
(no)r(op)e(and)h(C-LOOK)e(sc)n(hedulers.)55 b(Then,)36
b(w)n(e)e(read)f(the)h(T)-7 b(opHat)34 b(text)h(to)e(understand)150
4423 y(these)e(sc)n(hedulers)e(ev)n(en)h(b)r(etter.)46
b(In)31 b(this)g(text,)h(there)e(w)n(ere)g(links)g(to)h(\014les)f(that)
h(corresp)r(onded)e(to)h(the)h(Lin)n(ux)150 4523 y(k)n(ernel.)k(There)
23 b(w)n(as)g(ev)n(en)g(a)h(link)g(to)g(the)g(no)r(op)g(sc)n(heduling)f
(\014le,)i(whic)n(h)f(w)n(e)f(used)h(to)g(p)r(eruse)f(ho)n(w)h(w)n(e)f
(needed)h(to)150 4622 y(c)n(hange)c(this)i(\014le)g(to)f(a)g(C-LOOK)f
(sc)n(heduler.)34 b(Our)20 b(approac)n(h)g(to)h(co)r(ding,)h(then,)i(w)
n(as)c(to)h(cop)n(y)g(the)h(no)r(op)f(\014le)g(in)n(to)150
4722 y(a)26 b(new)h(\014le)g(and)f(then)i(observ)n(e)d(the)i(metho)r
(ds)g(in)g(the)g(\014le)g(further.)36 b(In)27 b(order)e(to)i
(understand)f(ho)n(w)g(a)h(C-LOOK)150 4822 y(elev)-5
b(ator)30 b(algorithm)h(should)g(function,)i(w)n(e)e(lo)r(ok)n(ed)g(in)
n(to)g(v)-5 b(arious)30 b(w)n(ebsites)h(and)h(some)f(do)r(cumen)n
(tation)g(that)150 4921 y(w)n(as)g(recommended)g(b)n(y)h(the)g(T)-7
b(As.)49 b(F)-7 b(rom)32 b(this)g(information)f(w)n(e)g(obtained)h(w)n
(e)f(got)h(a)f(go)r(o)r(d)g(idea)h(of)f(ho)n(w)g(w)n(e)150
5021 y(needed)36 b(to)f(mo)r(dify)h(the)f(no)r(op)h(\014le.)60
b(This)35 b(help)r(ed)h(us)g(\014gure)e(out)i(ho)n(w)f(w)n(e)g(could)g
(in)n(tegrate)f(the)i(necessary)p 0 TeXcolorgray 1929
5349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fc(sorting)25 b(algorithms)g(to)i
(mo)r(dify)g(the)g(queue,)g(and)f(ho)n(w)g(w)n(e)g(needed)h(to)f(use)g
(the)h(p)r(osition)g(of)f(the)h(disk)f(head)h(for)150
183 y(this)h(t)n(yp)r(e)g(of)f(sc)n(heduler.)150 324
y
SDict begin H.S end
 150 324 a 150 324 a
SDict begin 12 H.A end
 150 324 a 150 324 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 324 a 133
x Fb(4)135 b(Ho)l(w)45 b(w)l(e)h(ensured)f(solution)h(w)l(as)f(correct)
150 539 y
SDict begin H.S end
 150 539 a 150 539 a
SDict begin 12 H.A end
 150 539 a 150 539 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.1) cvn H.B /DEST pdfmark end
 150
539 a 117 x Fa(4.1)112 b(Concurrency)150 809 y Fc(T)-7
b(o)23 b(ensure)f(our)h(concurrency)e(solution)i(w)n(as)f(correct,)h(w)
n(e)f(implemen)n(ted)i(a)f(lot)g(of)g(prin)n(t)g(statemen)n(ts)g
(within)h(the)150 909 y(co)r(de)h(to)h(tell)g(us)f(where)g(the)h
(philosopher)f(w)n(as,)g(what)g(the)h(philosopher)f(w)n(as)f(doing,)i
(and)f(what)g(the)h(forks)f(w)n(ere)150 1008 y(doing)i(and)g(where)g
(they)h(w)n(ere.)36 b(W)-7 b(e)28 b(made)f(sure)g(the)h(names)f(w)n
(ere)g(v)n(ery)f(di\013eren)n(t)i(so)e(that)i(it)g(w)n(as)f(easy)f(to)i
(tell)150 1108 y(who)g(w)n(as)g(who.)39 b(Then,)29 b(w)n(e)f(executed)h
(the)g(\014le)g(\014v)n(e)f(times)h(and)f(traced)g(what)h(w)n(as)e
(going)g(on.)40 b(W)-7 b(e)29 b(found)g(that)150 1207
y(w)n(e)j(could)f(pro)n(v)n(e)g(that)h(t)n(w)n(o)f(philosophers)g(w)n
(ere)g(eating)g(at)h(an)n(y)f(giv)n(en)g(time)i(b)n(y)e(our)h(prin)n(t)
f(statemen)n(ts,)i(and)150 1307 y(w)n(e)24 b(also)g(found)g(via)g
(these)h(prin)n(t)f(statemen)n(ts)h(that)g(other)f(philosophers)f(w)n
(ere)g(also)h(able)g(to)g(eat,)h(th)n(us)g(a)n(v)n(oiding)150
1407 y(starv)-5 b(ation.)36 b(It)28 b(w)n(as)e(easy)h(to)g(tell)h(that)
g(deadlo)r(c)n(k)f(did)h(not)f(o)r(ccur,)g(since)h(the)g(program)d(nev)
n(er)i(ran)g(in\014nitely)-7 b(.)150 1539 y
SDict begin H.S end
 150 1539
a 150 1539 a
SDict begin 12 H.A end
 150 1539 a 150 1539 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.2) cvn H.B /DEST pdfmark end
 150 1539 a 100 x Fa(4.2)112
b(C-LOOK)38 b(Sc)m(heduler)150 1792 y Fc(T)-7 b(o)36
b(mak)n(e)g(sure)g(the)h(solution)f(for)g(the)g(C-LOOK)f(listener)h(w)n
(as)g(correct,)h(w)n(e)f(created)g(a)g(script)h(to)f(test)h(the)150
1892 y(algorithm)32 b(w)n(e)i(created)f(on)g(the)h(VM.)g(W)-7
b(e)34 b(also)f(did)h(a)f(little)h(bit)g(of)g(researc)n(h)e(to)h
(ensure)g(that)h(it)g(w)n(as)f(doing)150 1992 y(w)n(ould)24
b(it)g(is)g(exp)r(ected)h(to)f(do.)35 b(Since)24 b(our)g(k)n(ernel)f
(used)h(prin)n(tk\(\))h(to)f(prin)n(t)g(the)g(sector)f(n)n(um)n(b)r(er)
h(b)r(eing)g(accessed,)150 2091 y(w)n(e)36 b(merely)h(had)f(to)h(write)
g(a)f(script)h(that)g(w)n(e)f(could)h(run)g(from)f(the)i(virtual)e(mac)
n(hine)g(that)h(w)n(ould)g(ha)n(v)n(e)e(a)150 2191 y(sequence)23
b(of)h(random)e(I/O)h(op)r(erations,)g(lik)n(e)g(prin)n(tf\(\))h(and)g
(scanf\(\).)36 b(W)-7 b(e)24 b(did)g(this)f(and)h(found)g(that)f(the)h
(sectors)150 2290 y(that)k(w)n(ere)f(accessed)f(b)n(y)h(the)h(k)n
(ernel)f(made)g(sense)g(due)h(to)g(the)g(prin)n(t)f(out.)150
2432 y
SDict begin H.S end
 150 2432 a 150 2432 a
SDict begin 12 H.A end
 150 2432 a 150 2432 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150
2432 a 133 x Fb(5)135 b(What)45 b(w)l(e)h(learned)150
2747 y Fc(W)-7 b(e)27 b(learned)f(a)g(lot)h(in)g(the)g(course)f(of)g
(this)h(assignmen)n(t.)36 b(F)-7 b(or)26 b(the)h(concurrency)-7
b(,)26 b(w)n(e)g(learned)g(more)g(ab)r(out)h(ho)n(w)150
2846 y(to)33 b(implemen)n(t)h(Pthreads)f(in)g(C)h(and)f(more)g(ab)r
(out)g(the)h(canonical)e(Dining)i(Philosophers)d(problem)i(and)h(the)
150 2946 y(di\013eren)n(t)c(w)n(a)n(ys)e(to)h(solv)n(e)f(it.)43
b(F)-7 b(or)29 b(the)h(VM)f(build,)i(w)n(e)e(learned)g(more)f(ab)r(out)
i(what)f(the)h(di\013eren)n(t)g(y)n(o)r(cto)e(\015ags)150
3046 y(mean)n(t,)i(esp)r(ecially)f(the)h(net)n(w)n(orking)e(\015ag)h
(whic)n(h)h(let)g(us)g(bring)f(in)h(\014les)g(w)n(e)f(needed.)43
b(W)-7 b(e)31 b(also)d(learned)h(ab)r(out)150 3145 y(ho)n(w)34
b(to)g(c)n(hange)g(the)h(sc)n(heduler)f(in)g(the)h(virtual)f(mac)n
(hine)g(and)h(ho)n(w)f(to)g(con\014gure)g(the)h(virtual)f(mac)n(hine)g
(in)150 3245 y(general.)41 b(W)-7 b(e)30 b(also)f(learned)f(ho)n(w)h
(to)h(generate)e(a)h(patc)n(h)g(\014le)h(and)f(what)h(a)f(patc)n(h)g
(\014le)h(is.)43 b(Finally)-7 b(,)30 b(w)n(e)f(learned)150
3345 y(ho)n(w)34 b(to)g(implemen)n(t)h(the)g(C-LOOK)d(sc)n(heduler,)k
(sp)r(eci\014cally)e(what)g(w)n(e)g(w)n(ould)g(need)g(to)h(do)f(to)g
(institute)h(an)150 3444 y(elev)-5 b(ator)27 b(algorithm)f(in)i(the)g
(place)f(of)h(a)f(single)g(queue)g(\(no)r(op)h(algorithm\).)150
3590 y
SDict begin H.S end
 150 3590 a 150 3590 a
SDict begin 12 H.A end
 150 3590 a 150 3590 a
SDict begin [ /View [/XYZ H.V] /Dest (section.6) cvn H.B /DEST pdfmark end
 150
3590 a 129 x Fb(6)135 b(V)-11 b(ersion)45 b(con)l(trol)g(log)150
3950 y(History)h(of)f(v)l(ersions)150 4056 y
SDict begin H.S end
 150 4056
a 150 4056 a
SDict begin 12 H.A end
 150 4056 a 150 4056 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150 4056 a 150 4056
a
SDict begin H.S end
 150 4056 a 150 4056 a
SDict begin 12 H.A end
 150 4056 a 150 4056 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark end
 150 4056
a 200 4225 a Fd(V)-8 b(ersion)99 b(Date)236 b(Author\(s\))324
b(Changes)200 4361 y Fc(1)370 b(4.27.2017)96 b(Alex)572
b(Exp)r(erimen)n(t)56 b(with)h(C++)e(implemen)n(tation)i(of)f(dining)
1786 4460 y(philosophers)200 4560 y(2)370 b(4.27.2017)96
b(Alex)572 b(Finish)28 b(philosophers)e(problem)h(in)h(C)200
4659 y(3)370 b(4.27.2017)96 b(Alex)572 b(add)27 b(commen)n(ts)200
4759 y(4)370 b(4.27.2017)96 b(Alex)572 b(add)27 b(I/O)g(to)g(pro)n(v)n
(e)f(correctness)200 4859 y(5)370 b(4.27.2017)96 b(Alex)572
b(add)27 b(more)g(commen)n(ts)200 4958 y(6)370 b(5.1.2017)138
b(Alex)572 b(reformat)26 b(old)i(latex)f(\014le)200 5058
y(7)370 b(5.1.2017)138 b(Alex)572 b(add)27 b(sections)g(to)h(writeup)p
0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 200 83 a Fc(8)370 b(5.3.2017)138
b(Nehemiah)376 b(add)27 b(sections)g(to)h(writeup)200
183 y(9)370 b(5.3.2017)138 b(Alex)572 b(Add)28 b(sc)n(heduler)f
(\014les)200 282 y(10)328 b(5.3.2017)138 b(Alex)572 b(add)27
b(test)h(script,)f(\014nish)h(sc)n(heduler)150 412 y
SDict begin H.S end

150 412 a 150 412 a
SDict begin 12 H.A end
 150 412 a 150 412 a
SDict begin [ /View [/XYZ H.V] /Dest (section.7) cvn H.B /DEST pdfmark end
 150 412 a 126
x Fb(7)135 b(W)-11 b(ork)44 b(log)150 643 y
SDict begin H.S end
 150 643 a
150 643 a
SDict begin 12 H.A end
 150 643 a 150 643 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.1) cvn H.B /DEST pdfmark end
 150 643 a 93 x Fa(7.1)112
b(W)-9 b(eek)38 b(1)150 890 y Fc(Alex)29 b(started)g(w)n(orking)f(on)h
(this)h(pro)5 b(ject)28 b(b)n(y)h(lo)r(oking)g(up)g(ho)n(w)g(to)g(solv)
n(e)g(the)g(Dining)h(Philosophers)e(problem.)150 989
y(He)g(struggled)e(with)i(implemen)n(ting)g(it)g(in)g(C++)f(so)g(did)h
(it)g(in)g(C)f(using)h(Pthreads.)150 1122 y
SDict begin H.S end
 150 1122
a 150 1122 a
SDict begin 12 H.A end
 150 1122 a 150 1122 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.2) cvn H.B /DEST pdfmark end
 150 1122 a 100 x Fa(7.2)112
b(W)-9 b(eek)38 b(2)150 1375 y Fc(Nehemiah)28 b(w)n(ork)n(ed)e(on)i(c)n
(hanging)e(the)i(no)r(op)g(sc)n(heduler)f(in)n(to)g(the)h(CLOOK)f(sc)n
(heduler.)37 b(He)28 b(succeeded.)37 b(Alex)150 1475
y(w)n(ork)n(ed)29 b(on)h(c)n(hanging)f(the)i(default)g(sc)n(heduler)e
(in)i(y)n(o)r(cto)f(and)g(b)r(egan)g(writing)g(the)h(Latex)f(\014le.)46
b(Finally)-7 b(,)31 b(Alex)150 1574 y(made)c(the)h(patc)n(h)g(\014le,)g
(c)n(hanged)e(the)i(mak)n(e\014le)f(and)g(Kcon\014g)g(\014le,)h(and)f
(got)g(ev)n(erything)f(w)n(orking.)p 0 TeXcolorgray 1929
5349 a(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
