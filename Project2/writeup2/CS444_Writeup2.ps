%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writeup2.dvi
%%CreationDate: Mon May  1 22:48:11 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writeup2.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.01:2248
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 79 /O put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E071B1B
EA3AC8852A244A3DDFA721781B8B57E60433CDF73AC3F2C1BC47AE55856D8A08
D3BC17FABD770EDBB69053B4D4D002E4B76F914C65E56CFF5EAE6C09BCB338F1
61C9504BDE038B6D44E4DEAC1057AA139F16D12009F3BB6C16D713B7E1540F01
8DF0527FD8E2FA87FF7ABECE65FA93C947AA1B33366B3ED368BA976C54ACB07A
BAFC6458344DE85F86711E0964BA5E87462A7C153A05AE3C504F0030F302757D
72467D99E36635448D9ECCB9DEBF97B0FF9703B229E6E54122893A19B70A1E44
0CA7CC0BA2CCFAF5B4EFCCC25A99C9359F749C8AD3F9C2C2A22DFDD957BF5532
9B054ADB5482BDE9F32ABBA44B6AF49C6977900BFA78B23178FE71711C6872E4
5166B9E7618EE4AEDBE02B7DCEF0BED8772597B14352A5791F37B4C087A53372
E0E010A6D6442A21F97714A98A3741EC14735F2144CBAC63131C6A364740CD9D
E40C76C9901962B5ED8C47F1B075B840BEA8A51AF62E9A18AD0AC6A605CCCD71
62ADED463D754598A769A075A5CC35EBBBA19CD69ABFB29667881FD2DF21564A
96CF3DBD53E37A7C3B9018B7E45614EFADB5EFE0E033CDFA0A0C1FE42DAA9746
A5EB521F82CF690BEABEF01F13888A71BDEF6160758DF7ABEF57F4FE12CD869E
1648FD1FA744274F9D625F6CD32ECD37AA20C664DBE8157B484A562C66ADFF5D
0D515DE6C6BD321801F2817871B1B9FDB37D045E8C75BE6169545BCD7A90CD66
EB572EB17B535217DB1BEE274E2628A16EB1DE6F35573D67C93202C0C8C51EC7
B7079A126B0677F97D09DC4B0BC28DA9531D17822301D6802B18798027D67C5A
7A5D26F483E275686956DDCE32D7B47F90EFCC2DE2F46231F081859EE6B5B700
E2884C33E7392ED35372588DB691C009E554272AC5BA1AA500E250012B6F6FFF
4EE221121069E8A112C7909D8CB4238CDCC4747DD53B301373463C309B210C3E
713CC5F73634D794003207CDCBD7341ACAC59B70C8C8EA1FBC94A2184781ECE4
22C96581B4DB53A1E6AF6B83AC92A589ACF32BE77223431EE0C11F1F11A2F5E0
9510D04FC4A4B723BB6DC63ADE83C7ECA5C83FF2550879EBD666086720DDD3C9
E4FAED33B9BAB29CA2CD69D2B02AEB4327BE1627F47C9901DE979B56A48FA1E4
BD0EE6B3CBF15FA011CA949C3D277373DBC76D9390B03D4D403BA5AE2E439688
A6BD6DF6C8404286FDC2E2CE9A654F45E0CC4E2A34CEED9EA2A9417B2541D5C4
AC56281795E8BACB684A7A5FC7EF67A114BF9ED28765F648D60407C688585D47
7DE6349014E9711FC6F90B5359009E315205720AAC0F24587523D51CEE3FD027
96A2013A3EC88B984CEEA4DFBF6A9AD9642A55DB533448610825D60E95591A28
9E3A6F3F38D7477338C7658137AF09CC4155BE8D7DE63C3022D7738C8B928688
11EBA1B2D06D460832E0024ED048254195595BEC8CE84C4D5CA5C2D4A8046EB0
51B70AAE744471ABED1A00BEEDDF36A50B3CB9206E113EBA164B082AF09D976E
2AEB54B3C3FF5B6C5D34A6F5FDE42DF95F70B19734F8EF8DD78C35F5CA503F3F
676E3974BDC66F49AA46633E72023EE271B30F6573F5E5DB5CB204751A65D1A5
B2819113137E47FA4696AE663F6A5D20BD8C3A0BE52C369BD5F544F6D523ADAC
4FEB5A27C5A67976514FD151EA5AE142FDB747395854F725275B6C8F905185ED
024558F90433BCD72E74D8962F429572109A3E40AFA1E45C49F2E5899BC147CC
E5C8D5B7B25B9CF9C7716D211DEDE4C4CCE88C1012FB40B44971204DE6F505D2
4077628AA8127408CF18640908BB1E26B274604B46A90265CE3E880ADE6CCF51
C8EE9AB8C7BA2C95679E6D79D7429B4B338A81BD54628756ACB53F47F7F02C30
4153528E0A99F90F3AE77ED58291202703518926BCEFBDC5A3C4DD5CF30EE4E6
661984716DFCD6C5FA882681E0C12A9241C0DA08EECE26FE20DC8AF5303D7C77
BDF98E6B858ABC0E49503B542F8CF1CAA11D52646675651E6DEA8EE0A5FFE528
AF0A310D4D587F29EAD4F6D8EDEEA0ABC72806B8CB2B27EF7BF90923C95B58D5
6BFADC5A6B69E1FABC9C5C0124DC2AF99A8529AFC55703DF037AA9D91A25C9DA
6DE74E0BE3F7EF4CAC37331DB406F9B6227A32D1CCAF5C2C6E658A022479B1BD
070B15D3F6BFE7DF73E205BF101147A21492C369729F9F0BCE4AC26D28D28FCC
BBA49E070D4949F2623929AF1B5EC43E2C145D2DD5269767FD14192EFDB69AED
B47FFA7C11E873FFBA4769E870C0A5D8AF01D3A52D5FD02BF4C686792370FE4B
718CA1EFF95F87155D296FE4BE6B40F055AD7755B8A8F45EC2A1E86EBD296797
139D3557F3D53319FBFFBB676AE384588533D51E5219ECAC26C18380F660DE18
24306D45772AC3B8060BC197B4FEF7751C98D6BFBEF157870133438531833F8C
FF6B93CCF5A6EA3AF8D58739D2CCEB51FC5CEB8632C73C3596605A7A08389B50
0D9EFC3E05B787F36AC6BCEAD24B191CEC132D94C3FDD124EF94489A03DBE82F
CD42A38D37CDF5C2B61A23F59595C13E3F6BA6C140A114ADACF7CE9AB93BC360
0272CB13113952DC53FF9F95086E3831C8A1F8BEEF0E37092B97A7B33BF528DD
C19D88EA353A83EA6F8EC9FB94F4D9B567651079389F6C117A938B626BCBED47
0F7945647A375C0AD43F718F2E03C8D4D487C4D47243DA1E6BD5DF194F06E5C4
009A2443CEC612714B26A3F6FF0634BA24F1CD0D527E9B800ACCAD59A9A42E48
711832544B19B204F5DB5BD6FCA8378CE172DD7058AC5F4D53905DBB87BFEF65
47B0F1D07178C82637A4BCB9A9E46AA43F9AA081444334DFE75D07D51B65D37F
D3465474BD258B4D3F93B5B63FE59768E8F84E3A58FA98C3D56FB46AB19C8492
C37784CC3F00405B355E5C62A1FF828A130BC9D16043C011BA4AD87B1A2616EE
E542A1B0599E6B8D0435D53E035056CDD4090810575107D2A179EAC8C5040EF0
CF4444802992591705D40894A8E16891EC4BCBBB258DD7488E8A326B0C94FD34
43EA7DF93699E3351C767F86F59D6D1B34E91EFCA19C8B1B9E6095DEAE93AAE0
C56FFF37EE7DFD97C947019CC0F8CA636900F84F3FEB79694676BCFC3011017A
A39367EA9681C061BE45D8857152E98D0B8CB9D9FF2F3A0C908C5993BEEF0B12
009BF9B0C113319D0DDE2AF8BACDD82A931806039F1BB1CA1BF77CE0E924BD8F
7060BDB1B399DA0522CA574691031D6590EBCBD9F485C8F81ECE1948C41D49A5
2FDCCD661EFBEC7A736DF054C374F8FBB3278A9130D0CB360F05C241258AB428
8C03B7FAFE55D74DEA8ECA96E42168A97BE8532D6815D481F123B5799D52165C
BA0ADC39CE0B0B3B56A16B9139971E69C4FFD3174819934855E9F167A1CB1D70
B38113D720D405B8A9B14F25F8D2E30CC3B652048D8D154865AEA9F75A2ED3A5
A75E01B8CD933C492A583FD8987735371FC5A6835433DFFD635BF2BF99587222
DCD39931C61E41671F3DFCB7BB870DAB3CEF6A11D30C6E8C2CE2068C8FE23850
C91C83BE5918332CCCD21B36BCBE1E23E804C4D2C9DF219F00600862889E814B
5E5DF561AEBF493702C2E029AB1255367509B2EE3EE721056496B6BA477D1373
AD496391EC3FBB25C3E39AEC8F5327A6F990E2C40EED003D219995A1ED06FFCD
E543821400C00231E6E3288F88B5055685C47AEFA18869AAA238E718D79A2E0B
D208C732215BABEC9BE1EF4FE49893BA27493400F78444488CB0A0653DB3EF9B
C5D2A316E134096360A280DF21F7DC96628F0501F5A683A79954F1C642D03F8A
826B081D08E859FE974ACC065A215D6438432E616AA027D01AF15B3AF7BD3EEE
3D6C9CF7A01EBA89F2D6096C7C65E15291A0A1139E55D2F68BD864C83FADCD4A
FCB415A79E9D36EBF023C9CA81715B8C6F600588600FE71CAAF975B5200D7C17
A4D3BA945BE99D2C5C7B6371926AD58526110DE5122D57887E879BB66B0DCBF4
9E01C86F4BBFFA320CF07462D99B2ECF0F3CC0407C634692488E3C53E8FABF72
81A73C1E5C5ED3FFF9F71DE4BAF5FDF1F896E6FAAC235F0578BA2E3CCEB9384B
7F9528DEBC1F8DE3B6FD46BEE3711C3335365BFE2FACB31BC29700487C093D51
345F4C3BA5C815AFAA01367BEA71C5C90BF80A1258427DCC425A5B700660138E
43303C0913EAA4C70F677ADD5AF61F67528D9FA41206585ED2BE211E0EE79A17
3127BB4509B0E602C1E71111AF7403266C040789574E758C9E34F2AC549E714F
5116E47620080245FD6E5217C2D163C587DBA9B2B538499D2456017A3FC7B27D
E3932074323B1A33F692535AE3EDA95599FA81771FED457D539DAE79C64E8073
C4EED96C68ED905B0E2E6EEB1EE0BCFCAE37E5E097895D49790F77CD5A5CF990
FFE6EE1FB68F158A17557B9542D0FD02ABD187871EA8092C688A65497CF5EAC9
016EEBB136E5CB2FEC1F5D3F274F8B63BDDED4653515088EBF7D22BC8A89593A
6D72E0A742D21F395CA7AAF418EF478C43A74CB15C152C6D989107DB163E0A5F
10FD12C4996089DED636DCB0EB9919FE0704C150E41B7CE1BA8B302F7338D09D
D1D7D68E349FFB302A54214C36A2D8F044F5EEA5E7139C3E39A8269D7B46070C
649B89838933AA8F33BE9BA1C5406ECC24DC179F884510EAD1D84DDCBFA2A8F4
53193DAF041665F4D7EAA63838F9675BC2F426179525D43DF3D9CBBF94BD34D7
505C8B2DF2F6A975F4EAA6E5DC2BE2AC0908DBFF77E9B3B7FD425239524E17D5
920AA8F40E38B8B743F98D65DD72AFDDF196D4E901C83B91950F6019F8E425A1
59917BA658D2575A13435A41484B0CE90F854E79A360660340F62D9B39C7A81A
403FE8899F9375A50FF726463DB92CA651E05B337EE6B820EAFB9DF338BB4961
E5318EAF26371E817295C79F49D52D92D9CC0FB361307A239D522F25453ACAF1
49A6BDE33F26567BE2A5EC8FA7023AE2E002A141D8CEA8FF5C02D0285050568D
A870DC23A4BD0A438629DA23065C47561335545884FACC4665B45F88FBED2A2A
8BAE5C9AEE53033606DB2D1562175AB94B1B171F1F2EFA52C95965E750922F78
D01E3E0350CD82AE2B61116CAE33B67462C50880EFCE98464E3C28EB6EC5E975
5A9304188BA701A145C0302FE912369E1D9D7C180C73D604D20D496A37AE9204
3EC5697FF2523E72397846C71D5044BEC70F3FDF67849582A14441BEE6D925E9
4A38186CB877B8632EF23C2B878704C62ABF09CB465B7B29C6D15296C92797FF
C16413B7C09B8F06CC73B4FF50366FDC381EAB3F3A48B732F299A6B11BC3AE70
60AA89EA93F1652A40861C15B95DAB7214693258F7B4AF522A5D065D3F080834
3A05C56F5D5EB75CD00AC1776F56531F14913E010C930DB0C54CC3DD10A9C773
AD7680CAF5F266B5AC7F6AB075638A7819C3CB954A6722A3C97A354ACA65A7AC
DF06FB142175D4B43CB04C7D380F36364FBD765CE1854AE7D4F887BD426A18C6
CEB9FBF55DCBA90D59C42A2F04ECEE2D4C91611BB151E009CC6227AF5F733F0F
E868454F01340500CFFB554DA3B258F52041DCB3CF4590B76853A8814CDE86EF
3C300CC3F07CEFA217BFD05395BF89DD16FC79844E17D291F1D410B9B536D786
AE1A313A36AA3AE058F1D8363034C3F768DD870546D9A60A3B5B8F3110599C3F
593142741C3E0F15BFABEC1B886D1E3611B56C0B5466D067810C0EA5AF8707F7
B25FD41CCC0777BCAC9F6A64FACAB9178F790126A24B87E26601DACEBB918860
5C3A2D8F6AE8DCD617F0B7F087C6DDC0A3D6B3B7E58473F0698B2720EE7A9D62
DDA27642A82F65BE412E17686BF943B7045F87F0859FFB91A21AF459C34249ED
CF4C239F5605C041A0E2F4E51C8B8D091F08559B5FFC0DCF82FBB78C324F2AE9
14EB275FB635EC090A93B1D0F810582A4F9AC819FC99FE290B89D857B08784EC
408E742CBB01A5E397EDD47BEEAAB006A32411A47C91F2055D3A000621D69EE3
577E108F4D652CFBA4DE6A1597888837C39EF0686CAFFD63DB7A87617FF47315
98449E1AC0FEE81109FF7E2CEE6DF7575A6901960F87FBCFC6A2A3FD138C53C1
58FA04F6E31150339EFA991222E7D3DC146E04B56D7AA17B29BDCEEB8D399F29
4C457A0267C341659DCEAD0C6272E22E212FF0F1AE4B657FB467DA1E705F1E08
E2863EED7AC32EA457BE94A32A14F1C0C0DDE8262C6C1779A069D0A8B92D742D
ED5C6D93C50BED792E058718152045F2FB85D17ABE56AB5ED334662C226C2E87
BA15178D825ECDCBFB3E40F0C0E93147C52DCB70A7563A641A62B95C51F64D42
C227E11EF280FD02A5D8832A57718076DCA9687A0B8153E21BAC72AFFE4EA56F
FF1B7B001CAAD712EE990CEF2857C13087D6ED9C07E9F568DEA3D1073BA6D5C3
BE1E185A407F15ACFF5EE5E76635744B400629D468BD081C8B31D1E999CA7756
64284D7DEF1A914EB7A90D2AE207B7516C9B4A1237DF4B67D3F94A90E927C610
77B63079F5E7034B5B9F6CBC6EF5D13342F5857E17CB911ECCD4BA3BAB445A1E
2F24BA15D698BD9669142725BCE60121609E28254BC7B42DCA33E3C1EF7948D2
5DD14D2A1E431C99979917B1B56DDAACC72C22D2F376B026885CDFAFC0612B25
AC31DD6565ECACBEFADEE96EF82D4081373D434652AEF767B03DBB5221A90F0E
740281DC3693A9E75FDBD8F12E5E235038D82BB3CC4428DF8CA92101F3E354C9
3F53DC226AD74C7D82797AE75853D5FD371F20DFE6F0C2853C36856F81C7264B
2E478CFA9EEAC22245C3FBE7DC3AE352912DFAFEDD1E47F76F250DB6CB51F46B
80ED0D63FE9B6BC4BF64210C32A85EA3F03D54E1ACEBBCEEE71A85DDD6CA5020
8A9B6F3267B5259A7D429D5CC48D8981996174BAF42325C9CAFD5CED4DAAAB74
E8FCAC91CF24BB6E68A2B1310790115C5FD443610EF5D4E0D924C0D377E89802
BC262FF73902235893F5F39EC9FF36982DB5322E75E0C42B016E6F2F8417FE68
C0BC82AF3234DFB108B2A29726841CC6D653478F6969339DB33AC83B1ED934FD
9F22CBF8E7034A92F696DC0E991221C886EA3905376CB6CCC31F90528F5EDC54
BEFA9794767AA1EC5230331D9B429088359A2E8C8386BA90DE34F1CE1FF880EE
2DF977282779A8247A2A38923E0C11868525A30AC0339E7E046FA57C48908B7D
8AB28F779770C03DAD56EC56D6276CF8C11EF50C0A4398997CB185266354CE9A
1D8D5106282E80E47E53C19869F0B630D5A82BE6517B430693F9895860C325FE
999C00BD4D219093A887E2CD614C493CC40DCF60111991A6A3F4CADE1863AD6D
16FA3894B23E59429981613B9241873078DB98B792F707487BE80B9F36D2DBEB
97AC8E78752AC3F4E8C91F0AD7323F4376AB5907F2652A987674F034FAA48342
4BC334EB7B3CB0402A854D8AD2F3EABF092F9E750DEE2815428431211E18DB4A
2885209065E6622765BE4F6384AE05AD62B4646EF59FDB2AD71A4C6752827895
F86424E181F1B18DE8D906137C067D109FE20045A863A630BBC086C97CCE31B5
6A4040B040CA0CFC8DC881370C6CF7E372DC5CE2653DFB02B21F47CD305BFC4C
61AC704B76B5F31C731579768F9F52DED4148390B5ABBF79638934A50E1A60D5
AB675C1444396ED80335B90D70512463EC8787039D652BACEE8875D508B189C2
7A0599C20EA188E678640850CED3F69F7EB7124B201C1ADF2154C0C43381D595
581D26A69EC46ABD5DA7CACF244C393F76BA394C4FBB31CFDCBECFCAC8A60813
7343BB3EA9283F478EDEF9F480540E82FDF1D58804DA8AF9A476739616BBC765
B624FFFBF852C5D0CC1BA328C2333C452C9756F4BC25A6E2A56A939B084FC203
0D85E899741D554B1F612DFD9F06711E404C04479F0419CBF1112FA94C33F1BD
582902779588039BC9291B1265CFB0897D834276B96D62BB10681F8DCCA60807
E7AD6E0EFC3A183EFECF92FC56011EEB61B3793965F63825ABF996656E4814A6
1EFF9F29AE4375D04DD6EAC0CC0E51B6A2FD46D98449ADE47FF9D5BA4C401A8C
A7DA71070C38B43E553FB6529AF147A9BD54E01470D6946E23EC2B9BF893D215
4751DDC4EE5653900C88488CF513296EAEE96878ECAF066C6E31CA49B7B153C0
463D694E75203E17F02B5744F14AB9A74514DB499917D5F080CF2F3C1407888B
A2F19844D02C4F0991846F7DA4BB79CD53EDEAD7F2A723A284A33A611D694052
EB291FAA2FB0788B45D59A00104DAF9CF5B9BFDA5ECD524FC4E5C848D2746A10
B401AF15B86B39C2082217DD7164D63FFE75EF93A3A067C4832369375AF622C5
0989CF2A781CB5B8F9D6CDB60DB590E40449557FDDFAB00F9BDA4832E65BE966
E7C20FAD51237D02DBC74F8E91628698383A9ED43765A900B229D2D38870926D
8F36D8396A5708BEF84E858308FC35FE1F293FB080C64EFFA8FC1B6DA7DE0C59
B49F42D88568A529D24099548DABCC72861B154B834D9BA41F50BDC89895F02D
1762FDB0434DF43EDBC2D65ABBCFBDF26366F2A87F901525C277002550089666
C7F96D2AA55A27E28BB7B1ECBC1B7EA35D13467777521D252DC9F9F5336F70C4
DE55F28409C51AF585D9FAF4FCA58E481157463EDC728FA45076FFECC09FFACE
BF0906D75BE297923717CAD29E41C72AE280184968E3EF47CF27582B6E138B6A
5C9BFE5D511055D99188AB1120CE8810D97BF1DDCF30FBA1C077875665515835
B2D195EE2C37DE6935D1CC22959077FAF7E8C4B59A4D4D6E01C20B06152EF35B
65D045E9498D7B3D14DF7A34237B611201DD1832E61470BDAB57CAD82BC220E0
4F5B93A8F9F02C1FFE5C21DA8EF273A7DD4CAB8E83679915D6CDA9DFE74F790A
8DC97D70EE4DB92F10B5F4F60E63EA1DA9229AC66A653A1EAA524921DCDBC19D
2E652C842D748B569B3332ABEE619608A8DEF0EB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 42 /asterisk put
dup 43 /plus put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7269
79DE858914A95826CB2A8F0F17773C8DCBF6481A19CA03EBE2F1EEE59A3D6E3F
C23B65AED2429ACE7D1CA1F45B06D9C952F6E026953949028A6B7A4138666C7B
0A7B10F10DA7017B72F57DC4971A485ECAA7CBB1F832A94E176F8B529878D4C5
E8A0F09E2150921FAB9ED7F964ED314D50CDC06341481153D90B725237D52AE7
61D2EBE1546467B248123CD33395B8DB094FCFA271AA654A59441E83CD759798
E036A0ABDAB1C5E0DCD6B7EF07900664A9BE5B0FEDE97100121348051B0161F8
5C13E4B525245B82998B849A5B180E779FDDE94B3C08D22F7E1F882DA00B471B
71551A2C319B8112CB01A0F9C58D24D8B8C93B14187855751D9F56F7DB5BBDEC
8755B3955B4C1AB222014EB0FD69A37C3561712B4A6F4B7EA8705F3B078E2FB7
F38FA4518A1BA326D159470FC34B5427C6A38F00BF76220F09E3D43340BACC89
74CE81F3E927856884C3C5F3C6B4E0F280A2FBCB84D8288BE4F91E720B63240A
51B63080237D7191D226F64AEE679B05EBAB7BF4A0BDA6A1B92BB9E1FE46FC6C
A267C16D65E671ADAFBA65FA02B073F464685CF101743490953E53F047F34A83
0E69873201B4C0A0C11392EDD476A3F3186419585EDA8A1A7515549D3025BBA4
6AC66916A90E3A59B9C1836A911EC285F9EF933D64B48EFF76CFC29311BA367F
C8F759815B768E0D7738E6F5EE898172692DC14674A1C7678C77850FC8A94A11
0CFD526D277E0C1257DC86937B1471E3729274AA08B9E76FF858F97FD42537BA
CB085628D4DE010F62B7BEF54301DF7535EDC31171F8B079D9AF78A4C998A245
F29CDE0438400E2E55128565F099FC48CE0EA89B74BE7D1517E4D27CA9EA568E
C57FBF739DDE7D87EAE04411B4E5C206528A175CFB1C0C2EBDAAAC0255EF9238
A34E2B6F2E8AD884FC8A27199E7DA7B6E08B07746C6E85BCE39FADCE7ED719FF
7CA419016DDA5346DA80B716237FF745E42FF542AEB5ABD645ED0022468E6D58
4381F30B340F5743CC235B6B0CAB0BE1CB7D9071466ADF9734CA66EC36C38F9F
3D1CC046550B7BA43B1CED034F34172BAB1957DFBD94A4FCC106D33FE08A122A
80B7BD4FB94CA9D47F86FB316CE95CC85880EB36B8C41183A3C743FA7027489C
CD5035E3407DE6015752B07312D5BE9415180B070072D29DFCF3B1E85677821F
1EE59D37A12FE7651FC1E5D535150A0ED9A5B535D8EB6504B1B0A6ABD6D994FC
9417A0F8AFAB88B777C1495138C888212C8D3BC4817A540F659DB3DB01C9B810
1C6925627D1705C9B0DCD83BF9DDF866DC8C0766E57CBA32CCA8AF68518F6E36
1C582B622F72359FF5ECE66F9DF23A92C00ADFC4FE5DDC67BF5ED502DFC7A8F0
E922D486047E0998246401D9FF6286CFEE8905BF51BC0E6391310F30CB170DEA
FC709D48DD62F470B5D8391AE02B0FA8C1430849F8B4124B283C9DA6DF4C7E01
F1867F7E5D595F66B072AA523A1373FD8883729F5DC3121462BDB4B8A7A02C06
D0479AA02ECE64C0C82A2FB199E52C394D699D114266EDE9A157EDF3CE41FA66
89CDBA9263126527255FE2A4EF3CB95E6010C48C499E9078602EF70551C9E72C
9FAFFADAC5AD81B15EE84F43E8D45082A7D1BFB33114867A5E785D68F9A93943
92C59CA5C1CBD3C17C19FB660811A1559EBD49D27353F1651E206FBDA0194860
3D70BE9D722EF3600FCC1CC2A52F9C1404F8063861731204D2B3405ADADB1612
A8742CF90CB7E4EEA1B8156DEAF7B5C4F65226D025A7EBE81386A5329992D6ED
2148F778B02B1D9436D41FEFB10CF3AC76601073B1281AEC5986C9B41D4FC62C
CA7AECA06D5B7C18FD2503612FB09ACF5B04B3CC39AE38F0B1ABF9DD7A55F598
55D4CFF6141BC023B4FC5BC27DFF21B94059247BE044F1C8778A8B16B7E5218A
14F99096F4C6B251125669F6B3792E9F73777673288C96688D13FB7EE5D4B166
6A04C07E7635643314F7000A4E07ACA711718EBC2C3168C44E89F8446EC450EB
755542F3B99921A6A60ADF66DD6E44B8A11CCF3B339391A1D0A0108BAE4424CE
3C29596CB2ABA9E4B51D08E62E757231A95EE46DB0E31EE1E6AFB086EDD7FF6C
18AD73564B61DFBB58F51CF78274A1435B51C77A81637801745E5403B8EE3B41
E58B46F81EFCF14DAC46F156C904C7C96493E63BD9F52CF9CCC15E90142C3A73
1356DD3317DB7C0FBF2BDEDD24CBC2A2B169F08BC5D9FAB8B748FF4510FC07E8
7E47A4532B54A4556E0A9FC7E7CEF89FFE158E479967CAB2119657032380D5B6
0D3427DFEFD0084B1E78B7BD01FAF54E374F92F006AF1E9F7D3D26F6657BE3AD
EEEF8BC83A423930556F6D376A9BCD071BF508174837CE0B1668BE17CEC3AE04
B5B46D1BF28C6E5690AB96A0FFE4E1A1336F1C68DE43A62DC36AAC6F58BB9806
7706A4F32CF6F51E852D5A941FE6D5751C1F12C5F20273E8E79204FFD555212C
8D161556D4DF34A81C5AC2D60C9CC6867C02335C261589A2A738F0757108BD1B
F2306DEC2AFF2540B63FBCFF2280FEE120ED71AF48029C4797B0B9CEA4DD711D
CA1630F93CFC783687A60B423624190D8736C5D63A13F11CD0C43EAC923D96FD
50BA0322AE0061C61FB9C25A08BA1A13153F1A395D32D840CBD9E784F19E5102
8188F8E59404E557850FB0C5A23C7E97031E89515229A1F1FD249EA24A4150BA
D82ED8DD834D6A24BF7A1893988F183284BA05ACF43FB9266791DF54AF6B6B6F
465D1CDDDF4DC559E48C88A12EA61053B7A2E20209D89ECCAC35C9BC690DE5D4
C0DE332464ACA65E97004C06D2CC4F483385CC4FF27E3AFF5486B1E6C9C3855B
23C86DA6A4800E795DD4B7CEF5721EC5C1943A8EFAD98D787A963797C4BEC4A8
5CFACDC4975C3237BF6AD469F10271F5D8E19CA45EE997DB8F481168004C913C
09EBAE49E7E06124E72557A483FCE35BDC36CB8C6B6902889E94FFE7C5FCCCCD
5D4B8DB1FD8315BD59ED2374A7F4AB018F9BC309B31F4D981BA4D65893FBAF3C
4E27DD912C815FD96AE3B9170A23601058F2881ABDD49FD203636763EE2101AA
8402690B3C99FF8E67C499A0A77216E784DA5DBCEF693CC02207068484A0B5C9
9F7B17B78F20F2EC239BD6AF936397C2DB406B4C9315C8F1CD1B5F4DE4369C03
2C832E52EAD604BFB7B528A40A82032BCAC2C3F1137473396B25C7C94BBA92AE
400588BA0606BDBFA2B410E19637ABEDB4E145BA1CB01E27DDD56190C0672F81
C58899E8A495AD037CB5F1FFE7B34557230FDE97889BD755D674D8D4BB53D8E5
EF48FB3CB6C0D0D6025EC44E5D46897D0436DA11F69CBBEAFD9D1FD7FC42152D
0031FA23C79B1E51669F7767A90C7A231DAF080D47A4F8C0BE1D31DA6FB9B5E5
74C6AAE8E2055EAA7F80500D652D1A5005D74B059A8FD486E52DC46444E6F877
09C4C6D0C2AB25DE345E4C72FA70CE73A83E362058F935C99F2148ABEDE0AA31
A022F6B26CC17B737A860C8689DA06B7C0AE4F3E91ECD75D080EBE7E5EF34B5C
DBD3EDAE33029B689C6DAF1007E4A568BCEFD4B89C643800F10122743440F8CA
BBCDB8FEA213F1E8ECF9395BAA342D42D52C57AB52BE3A98DECE032FE8846495
6D6476CB6C259566B90B2DF7E6C911EC67B1694C2A31C4B2BA73CB6EE809CBF5
1CDF2C5496B12A20E59C09636B3FD434BCB87BC4DA19C4661306EBFDCE78E4E0
99967E13FEBDB688396137C38A95CBE910AB93AC49BC8F54E87A01DDFD920698
C7AD2D9F8E0CC808DCC80CDE18457D932046A72812904E943423FA61BF7E8214
36FCD4762E09DCD290C8C00E281A9CB22C41120B1F32D340005BEABC51E0927B
F81EC1F5D83F6E96FDA89F8ECCDD09B5E41E81C4D0862B5B766E4FD63EC8DFEE
39E028EE96FBC4870DF220F6DD4A1180ABB91D312AA7F09FA3D6924E7B1C333D
04DEB156F64CB01E23BB91AD12A849481755ABDAE8D305C0AADCB0B0064D2E5A
763B0D286BE6AD31369880B0FDDC070BC6CCD50F7FB81BEB5DB05E6BCD2E368A
06E4393AC6227A2E75DF0C18C7046DE3851F5E4DA65453EEC5754D1FC4605D5D
BEC8BEC7AD457B2FFACA4562818FE5F5482895B38DB0E95D7565C005C59B902D
3C5AD8FDB1B3BC462C1FFF427ECD125982D39AA5FD2E46B977D9DCB100B2057F
38B0AB6E678712A6D6FC0645F72584F1403B6BCF9B7CCA09EF699FFE3F5A3C57
F79D9DB3F02C5E62ABF617F49E3476B77AA6DAD13A71A7FE5DE9353E5C2FF97E
B705237B5333942C172AE589CB33A871D201CC99CFF9CDC35DD7D1A26FDF9E7F
2199BE8BF5E5460A8308991520C7440C5AB12097161A3E6B3C043E93B1CA2DED
A354712FF6998C3405738520E17298DD1F6B68F6C79A0B13518AE770F3AC0359
7FF1C46953A4A5978253B02DCB0A1852BFB936D89EAD2F6261F4527EF1E2A744
4DE1B93190D6CA4E3C9CC4F57A311118DB3E07C3EFA8FA5C45821C4C6BC85FCB
2F6695797F80756CB023F6A8E5D8156501F30D428589CEB836F7749F5F1D675B
9F3AEF2E1620534A4AAADB66F8D998110DDFEEFDBC97732F6393192E52AE2D2D
F219D825255E1BD8115B5DC8C4DDEF86BB7FCEF690147949828200E0C9A18EEF
1F97BBBCD5A3C2B59A5AB17632EF3585CAD9373248455E29B8E24FAD88B661BD
2B7F3126A8C54A79C33EBDA6DA4E4DD69D8161233ED4938C9B45879B84D4245C
87802FDFD1DF020981FF8AE2EA0897B49DAB7575EB1DA522C08498D76E923ED6
CEC5486C352512B397D440FEE6601EF67F3901478047EDF2C31827D011D199D0
C29CE7900DD513AEE269389B6458C83C725BB0A4AF201BD3514F91222B917577
24E1B59D241C7F9E5F2596C1F0EE37981CA029EF8CD523EBB6A5785D3E88BDE2
97BDB6BAE394EBE9508863F2D6085E6C596EE2A87D2C3BE376FFDAD0A13484A1
0CA398864F6262CC17254AB0EA187CC7C69CD0E8472F54105FF957573AA545A7
10CB31FCE15E243B7320F0F51A9EA6AB46BECCF6DB918F275F6C967D02623AF5
FA4AD6CFF2CFA61F8EF5234996AE203EAAD79BBFB083AB54155ED30E2D4BF0BC
32EEA99AF7DF11BFE424712CB3BC65E614FB04FE02151CF897686C6B944ABF76
74A62FA726EAD50145A26E404C620BB5477245E63963C95878FA249802CDE054
53EA1A2FD3E81421F951603C808F52727494164B165AEE5D13EC7EFF757B78EE
89AC8B3D637E94617B3AA4097F8F944EF50B8C5AC76E0C038C6A7E23352FD6C1
7EE4A548943028E0D0FFDCA3C1CEEFE7AD32198F0C684EA49E4372966963552B
17611356C836D02E7492F04CEF43B170F099174C9411953A9CC4408678E74A80
72A4A2B66ECFB77159417A2277325DCC233AB04359400AA0FC93811E965FF1AC
1D0CAD94BEF683DB7376B8016D99F168C79B6C636C6ABE419851A289D4954D08
ED2C0FEADDF65FBE9206A0AFA3CCBF4B78B5FDC0F2DC0B41EF8812B1EAF4E56A
96A60ECC0D76AC117E8D8A5AD8638BAA871A4653F1521110F44CFB197D625336
16A3BB95E533CFBDFE40B275A7FE6B32076A7FC6CEE1DF68D74CD158910FE345
6179BB49DB71A8A5B8CF062A19348F02889907B21F2E885C2D619BB7A9C00E3B
29BBE2838895617AEA5ED47E30AF8199E41451974B074F34BC1AE181628A5BEB
2C0D619C7F67D464265A5C076C2BF77E66FAC49BD36E36B27B45B41814A67DF1
E5711DD6DFA8E01D9BDFADEDC17A0B28ECA827863ACCC61E5EFE04E343889BB4
A8A72667158180E52B22F2C555C1A036A1FD236A61224562563659F1CA6D3B1B
621DD9D0760DCD76F5EEEEE3032200C7F28EC32CAE878E68456FD82987F01098
DF6F0C595C8A8230E2F732A5581C93EA6D3B558FDEBC2B631FA9E86099BC4484
9C0829EE1E9D139662AB17ACEF899CB768EDA5E2339219B11269E876A17F00E3
2301B7588F1DC1F4A3081B1327504B34C52980BA8FA13865A5E6845CC767DDDD
27168AF8ABB1F0C03FC7CD4E05B883BB4F2EEA84FD7C42879EC1447DCBFAE3B4
AC5DAB6D47BC3F8924F17BFC7CBD4D67BAF20E59C7690AEF17E219A0BC2FFFEC
5AEBDC69A5AE17F267487F4C73E9DACD31AF84C77011C3632C356BA5A1F29B61
269BB396FD11EE1AEDB024385CC57C7F359CC439E562CE90F893273C503B946A
07354A2248726C4BC75F364E126E960BBCA68E41BEDACB12F328666FA110EBB1
6CEFA4A68A9681BAFB0F66D5A1EA2C29209D82F4ACAD48B3A2DC72D0C0B03435
0E14A34310120E777B72D5797320B1D9E06AD87D17020F530CB0817875C371A1
200C71C34FA39B588730C883751A60B2B6661E4E95E5A27D7C5C912486F9B3EC
7477C388F94E7A33131180D1774615882DDC78AB84D7FBAC6C7F3B25EE9E6E5F
B0F9E02EA056EFC6C483C69FFBD9F78FABD7F9F4AC44B643E6809111113C766C
BC408D8A7243B66383AF6BA4371A4A91995580F3386AEF60B512A4E5D841AFF8
24EEFF209630050B897874E8D6334921DAD31F6C34885292C92A0E7D83B85B6D
B33A857B45D1B3FA4AC646A90EC975A79C3AAE951DC1832139A69FAACE860750
80E2CD7A29B9ECD44ABE752E3A374EC8AB48775E40FBE5050F442524DE2BD0A4
5839D62CEE255C2E933130F85DAD4812BDF953055B98AA2CEC76C2022FCB939C
33BB69C69ECC1CB0EA7AD81132C00B797DC60E923848BF887EC5B81D889AD5A5
EA50456E7C61EA34EBD43976D956C41B76F0BE8833A580327B2DA0F670D17B41
D68D38194F93D913437E629D9BEEBFBE5512C70FFB477CC056BB5D625C6F1F7E
C1449D839207A7AD0C256BB7E9ADEBD03C6CF13968155693E07B69975C3D9E03
7D089AC34CC3EB61CABDF1227744A29B4679213E585FBEC12C6110E97526E661
6C583CD87A1D9460A9AE5B86CD958E8805739B434497BEF51577E71EA8F9255B
25A12141046D62A043FC4DD659A243CAA438BE86006CF8EB176261B38FEF35B6
879DFEB00BED8AA9EA513B5AB2D6F18B9442B624DF3F6FFD866A6960DA457102
64B6C48D81791FA16697B9750E33036372FF79C95812C7512B65FF090C3A43E2
AC325A2BCB69B9A09F5F7913EA067FF03295DCEB02B0A11E632CCB44CD4F6F7D
D4469221BA1CFC22535358F46138077A9209A1113EEBECAEEBF9961C04840CFC
810AF478ED1F291BA90CD898D83D8A00823F972D4FAE608F838277DA9EDFD179
2752AA5E7363AEE175A668B94141DA658681C41D93E12131E15CCA9B881CFDAE
71CCC0BF1430122C3B4A022A6C40773D4CEB06CE2143685B16ACFFD3731130B5
410EA4CA71D1D67957C79669CB57CFBDA2B1F1253525792A81EFCFBEF59D334C
F9259F52173D5F050CC1962B4120B5EC00590B1CD621841DDF08A0C3C7C3FCCE
AA15CDE03C2D0B1BB80E302F4751D3860570C5C23530529AE9E6686E3DD575C3
05C144961E5CD113112890B518D8D4679BC90B4DDE75B4499BB0BA790B7094C9
F8E9065D51A527372729241B238CA868C181585F028EBFA7843A98E6E21FE5EB
1733578562DD9DC93DAD071FB3FF60E25D5CAD8B830122038A61A3388B088F21
5633E437AA978F60B564133481DE7D8CEDC72645046DBA1E8D4E314B305477A9
D644A0CE37FED6BA75ED93E055DDEDBBB4C5FC70E9F2F48E7D802D8AD7729AC0
54620C0F209D3097244E4294DB58FAFF1785B279E9B7350CF869EEB181D5440D
53348ED6B4F18D39CAFBA9D804260C1DC466B6C868751C001C7EE121B3CB13CF
88213C2F42E2E92E59B7DA8F81C029C6D321A3F7A673B2F056D8D610603D9812
62FC67D86CF64AF693C56C4CDF770DCFF2C2BB0CC6BC708CB29CEC60DF07257B
60657804B52F7CE447F5D2D55308CE642D4DEFB70338CE9D93AA8F112FD04336
68E41B28CFC112B59BA801BEDD9A92F37E8489542F2A4A3ADCFF16317FDF89E3
E58AD111323D390C198C96BF06851F82277E61F0A07DDC396F7A7627F7F5DC3C
64BEA0725D9BEC5F59B5FBF713F34FEDCA67442BF2E62CE4DE54E0CC3D031025
B8D51B298579BA9840AFF0DF24DDB8C1B70C9F6D2CBFA3A49CCEE7C823B6F376
0F5FF768AB578FB34AE35A2969BB6AAC3F8010E71FAFA7F479A05A4C2F25A4F9
2662DF9BE6698A7D708030F3C1E3C6AF1B1005BADC5AD5D1FA762B22CB09D0E3
2964A7B72DC31F0E0FBD677DEC72B37251EE88FB93BA296D5FBA2D4EAC2DCBF5
37A9F03CADE0AD515ADDB351C0EA5FADF516A0B35DAB8D61D3AAFD0F5D07B46D
F27AB97F5672EF003551A0AE7EC92040752BB10A42771D264EF009303D52B1A2
99BF87AD0072DE2F8043DC25818C8562761EDA263617A98A53030241087A1D5E
BCBDBDEA9D7DAC39DAB594D15EADEC641DBC44BA296D9FB8F9CEA59DAFE5A0B5
2BD6B406F4E4CFA9706CF3A6F50A98AE8BE5D55B4F290716B5ED49323CA21A0E
AF73E03B094805A8C8CC5B0171B4F9C3353EBC093F95F2262C32160B5B910B7A
C02235571514193DF8903798416E84C001A0EB796A8F48B1184416C847076055
163C06239AE7486372C778604328DE01CBD104FB72370E236274FA8407377D28
B79A6F7812F5F5E39D46758ED00F7F61002B02D9E805B02E2E043894572FF8D6
116E1428FB84DD5D0ABF869C2089C5AC1CDB491FCE5540C9BB8410DF683EA35A
790665483A5DD736DA7D4BD0AB95B73E82D89CE943A41FB065926CCC26D796A6
468859AF3F75956D3561BE1393D9C0E246595187CAE85016F0C71A0B9CB10E03
367E5249C494D3BA021DDE25908429D72B1731FC326BFDD06DAC2571AB9AA1F5
0A2919AEECE8E40A89CF0DAFC8DC0D4BDE60B689A22F2BDD70EA026BC38EE393
4B69C85141856CD987B79858371C08B694A61FC5A509F2FE2D52B2BDEABA50DA
6E4939FE5C87877AACAA653964EED1F8DD43EE86C7FFB284B0FE3537F7677360
785CA8C4D9B6E5BC0A2D9874A44DCDC4CE3EE8B72753859B7A83619C90AC4560
02371DD783C19BA63640717C22E73F3A7633C08F450EEF946495E28540B46634
60A06C0DE8BA7F64FDD6692C97D5F2DDF1293ED7F3F454AFA47337B81A670685
B729F79FE86BA84AB5F2836EFD572DA220685CA6155AC242FED3BC48F76F2A81
789B2080DAB46F89E628E54F3AED60AB497A43E39EA31A53BEA08B734F147681
2522BD648AB450B519965DC8313C8BF6DF5662367838AB9D681C1EF07480DE14
664B79A86D19CB46592158A7D186D5A545C78D1AEA8DC9925A92C03BEBB76963
EADCEED1F9EB2FB6471580ABDA95ADA78B3A77E06741BA7CA079BA360F27C63A
498F54434D39E262DCF5A5577936440E6655FBF0E240A3FFF16551B61464C962
97BF8DB4085C15F133AB85DE1605B32F9E61233CD4DEDC7274CD22634C7DF635
D8E2BCB56F9D1F39CB2DC06B02D935CAE59E7F936896471FB206186038914BD1
5B113C6766D000D1BF9C2F111327E62D5B2134771047F9683C9FA991571E2CCF
D007026649011CAC30D40C37B07889937FA1FC11C9E1127E2B30C5F0DD94475A
02ABE8668C10762B1C64365A34ED59A43A984780A2C9C2D5464526CD1D8359D7
11FABCBBC059E8CF0F79141CB8141371FE98B7E04E3C19570718F048DD758861
33B5393C941391681F0866F5147442F1261881DEFDCA18F0BECBA95FE311FD78
DD84FDB5013EC72292B5D3F51B6C38A36ABAEF91B2D2B88AAA436FDEEF5C300D
1E20C6A463901AF55C14E03DC51DFD340A5D462A8FBD6AC5214393AB6BD332CB
5D2848C7FB9DF9B50531F8682F848A46C6B16AFA262E3D62C9651960234CB382
40506B9C4BF374DD0F4039366C6F02BC18A067EBFFE26DEFA5C0E0929D1181AB
D949071F42C58B7F97FE5CE37133C75F1DC050543A0A95A27D16B7FE5D2F5F34
4D98090282652B7386EE8EF54E8584B17FAE687F5A1573B89E56C504C612C4B5
ABC3737D27C9E511BBA1E7C5777FF9BAC67740EB9CB3E8EEED59663F9F640C9E
A653F7DBD15004EE06E7079CADD12F3A198D3A6DCD55FB2032F93D0D5F160F61
620FD7ABC89675D5A976CFF5D95A88C026DD2A54BB1AA3E495E1D1609E7B66E4
8312D44F4A28BFD0DD78E4A0D07B2B3D394DF963833B71E553FA3B6CCC934B30
5A2B19567D3FF5B1277EF2AB549AFFF39CFF263E0E193D91BA4E3AE22CDAE17C
539C2E7E3453DC1D254FC7AFEFEAD3B3BB3AABF5DB0F8DAD698D6599C79C8C90
DE3619CA3036436B86E4739AF50914E4E6349EDD929EF44DAA3C79E9CF5BDE28
038F915A8E1F3A68F4A858B4D9F591CEB7C2E0C408DB5874CC28ECAF86C4121B
0414D41A66278A543EB3FA2AD96EFD6C38EB6C606689739931918BE92E755226
E5AA5EFABD51CA4FFC1B095C6C72C9BBA94E8FD0A156E3EF6717332FE12E683E
FDF9E19780EF318FE0327E6AF40C5CD0907ACB7C62EFCAFA5D8D592E1BC39AA5
ADFB872F32FEA1A1FFDBBE7DF7911880AB0A727336C6D4F8A7DDFBE865F57114
9CAF69E42364A53A67C70924420D5C257109D9539A6CC5CD265679F502C05AA4
4C8193238B7A91E18C351F766B9F36183C9902BB184658F33ECCA1FC91497541
74491261B52A629727BA6F3A8B4991FD775C37ECC7A5131F352D56570C691FE9
4975EA74DF32B3C92D576D22B8DABA8A2D97F9670CC410702DC991B8163B0A88
4ECF6016096BEF50EC9B962DF10DE6F7CB83BA2BC9CBF293D3A56F20685E8E4F
741B03E13EABE76F5934854D358C6B96B834AFB6DCF6E64E32F8EB56F8DB40AA
226A45B6EB45D98405AC14F71BEB3EEE87CD8BD40819FD06746DE98AE06B5636
EDF39170DE0A7BC16E2ECDFE91B23B77A4C1BCFAEA8DC3DE205A1D1052D73905
E12BF9C160CE1495BE81053ABB1B8B48B7774309734C474E094B7E8A9D8D54DD
99D2330F8469CE900DCF1CADC8E823701DCE88E7CA1D2BF0C05FE1FFBB384A3B
5D70A11E328593CBBFA900C486999DB871AE8212B840F68D5A7EFE992F564A29
26F33F983BC1D7D2248850346D8C03837BD66EF423554FEE19D696C4F0C7EEDD
D6CCC4B688BD967495D0AB974C567F7EEB58095F4F01B373958640F97B0FA42A
3C95D16ED646EDD24E9A521FA54F107F45BFAB77CD78A85502CF0A0A57EF2BFB
B4FEEC85BB99D88A9CB5490F465C53FA76F2089AD29D65DFC74261F6E75650AD
61C1B1BD9036F81F65FDE47026902352FED29DA5ADC86DBC89A1E05469CEA64A
38B292915E6B3B950FD44759297ED2BD8D7DC28F2B1C9DDFB4B82B2FF6920D99
2DA52D5BD2B536300DF9DCA2640EBC911AC91FD697DE7E5AAF4C3FED434622ED
D91B195E34678415EDDE73BFD3DEC9023AB18378F2A9032E5FD3694C9F1CBF71
79CB6A3DE259FE0FCB17A8B97C69C24B81ABB77908EDF5BB7E2B324A23F4F6BA
84251B5EDFC6B6509C31DD8A33815817C76C152FBAE9DF338F38DA19936FCC9F
42F16CE1F9289ACEE6449A278A4B8207814A9CFB8F774F30E19C3CA1EFF51CC9
2D1E4764AAF91CB4880D08C5A13B2828BFC8C369A30A47CC45C4370E8BB48472
D75FCF237B124660331E207100E2D1D733140E0EE20AF003286DA06546276945
ABCB0397767EF9CCB3690C64AB6FBC64D7C92F83A6FFC26D96FFC18A0B65D805
72E0C2DE540F402A7F6A063F93FC885AF89C6F8A1C857DE922B37E2EDBCC16AD
463009415278E6837C131078B84A9C7CAB05CA44CFE4E462A92E8A720A7282B7
FFA59FFEE94F548EA08562695C3D22A15D36FB42788F46D4FBB423E8BBE498DC
34676E7E12EE09BADDE8F7A54F0513E167621368763BBFD563E776AA6D54D7CA
A3FA1317E2F25E01527EA58F4887C9EA81B9BC2FD427A236EAD32204F032A4E7
2B3F1CEF0205E6FC8320C5616091624BE5819DC182A4294B2B13BCF300002725
0A4B87B8DF87B84F51A8CF96FF275025A8C79505A059772F893F1CC05C71D396
2B9A88D62D1196A3A23385B1A7477DF1AFE700F03C6A45A6A6602EAB7A16FE4F
D5C92A3F3FC79D82756F4A7FF63E5F1AD3618E55FA3C6059636324DE1B6996D7
7CB570B68FE9D59CB4D657499EF245C32A77E72AD3A7DBF6EB1FEFC6C4BB5E5F
3B6E944EFD745F424EBF225ACC06B28C93C537BDE3F2CD1C6892992C3DF48D6E
5DC0A84A361464CC8FC97C9084930CBBE3B28FF5FDBBB78C58A3DA7BCA1E43F2
1683C6C073B08369B05F24F3DE4A3F500058E99E388CD5009B162862B99A95F0
F824A8DA10533CC000E1A899836674546DCFCF525F91A320A010F9FEA907AA13
3EAB2A1781E9D8A275742A1B4B5B0E3B1A6F20135FD1FB5F9049D17B6AD47BA7
6CADD7B4B30DD8471ECAF24D447F83F3CC6483BE40CAEFA380C6DDCA2D494E26
C553FCADEDC40B7FAE37E9E0662F79C9DC855287B6C57382776329F6ED07203F
34F7B876CAC6EADDE1260B7DF3C0B4D588E8D7B8797A0CA2A82DC98950690476
D0395C57C374213666B97C18D20522F4C48F528D56A6D77C9C87E2604FB67D6E
6A012F39EEEEA4842951384C24A7FE879B4841E087A32B14B4DA835300284FD3
817FF2BA48582A19201534A652C896C93F68B753C3C42D24C8BAC951DEDD94B3
EE51D53CD1DE0D3CF5199298CBA14F9AE6C82A1C2C7785842E5B81BFED0ADAD0
9503943AF922BFF99EA37CF5F3E95E558F4435712B851394D4786687461F3120
CFB663C16B16BE4AD493E7392D4683D81FCD56B5061015987C0E19D234CFD36B
31A56A8010F22B646EA9365F7E94F8DB221B32D40D1E2F6AD35DC797E458E79A
DF7F4FF0B3D8CAE6D7913D01BA91FD28D5D2C8790FE42D25414DAD6D20F23A87
0D7AAE0FF5749D137ED66A72A628D168B32DB12F053A96062D7D5821C68E32D6
8C8E6D7527FCF01DF33E9D621E908E5C35F9D008D719B21D160C5D4498A6BF01
472AD0756AE1C24739BCFB54FFAB4139EEE5041A6CA6CBBBE0D353F2DDD72969
6CC4122F3E9FB4048C6654B79954992965B02026A8B690C369B08F6D794908A1
85F3A8649BB5CC0589AD506A0348970978F3BFEAA61B8397E8993D0003951FFF
E112652EB4A78ACAB4EBC22381EECA08E3811FBCC4CC4F90BA8EFDBA6A7FE6D6
DFC1DB691F435B61FF4D111B222B05996FAAAC62FDDD9A840A565C97D64372A6
600A561CE0D20ABD7196A9B4495C2BC6EB2E4DBF02CC800267DDAC64CDFC8DBA
4A7608F7026F6C5F7EAB7D46F552F4056218DB4C678817889E555D031898C2C7
A143F76939512802485691DCF38F4C1085481F22D4F401202D2091FE58443450
2D89C0BE853012877AED3F188A956F706364339700DF0B34EA5C9F9895348A80
4042098EFC48464E3037F040946D3C263024CE2D6AEE46E201A2D56BCD4A7708
01C65C0FD64DDD6C8FD8E79448514E16290C8DCBFDC561D3D4D6335A8DD76397
FA9877AE5DB6DC30BA557F0BFDD34622D06467427671D8C473B6AD42ACED8FFA
F3CF67488C510332B9E0EB24DA30C24FC6E98EEAC8CBD55B77A1E78329151F16
8EB4702C8DCE19B5E5BDDF2FAC17188B2F1402FF0CEBC8F5EECB839CE70A5631
417B253B9840F031BF0F74319A17C5C792D80A37DB4C851EEF3698BBC772FFBE
E3A1635970A9F96C8B4400A37C31582C6A0ECE78EC3E45DEDBC054F72B817A13
A1BBC3BFE6732E476F42A2F7F6AE5E5B31C45A6CCA21F0E87A1056562B82C8A7
4F439A4A8555783FFE049F7C365EE7ACCBD2C51ACEF3BAF664CDC7F3A13F444C
784077EC5E87D9594A7239C792BF5098DF1E36E274367B78DF1A38672B33BDFD
74E417DF6081EC63BB00A2C6862C5F747B8CEC18883C3D568B8C29C1FA5E0F4A
40CF09D0C96E6D3CF3AA3C4829698E7880F53DF8876ACE02357474BBF3ACA02C
1033B0BCA8682656A4C8DED5614499E4D1E1309C076608D85B417F3919CE5453
CF98DDDD86B5B91F39C05E766AB116AD463472B015FFD737ACB5B901E2BE3230
68D6CDE2356B43331BE79579511529765F875B39F6E8446EBD721BBAB2B7BBAB
3C3E8C5E17603A0CB7CCF450C986320C111A1EF69FB2B58C03644DA7B8C2848E
73C84FD0AA45D7B23A579005D614C9C104FD2B3A5E5103C71AE57D4C85C6732F
FF6F8BF99F3762F99D0DEA9A43975977A223612C321221E28F0A8EE5A86ACF13
AB8BE72BEB07BCB772A2C90317875A8E1226A869799C223DF6AF18AABC39B056
4C72485B092B260F170ABAAC10F10CAD866459DD9FA7CE57C58AE478F3BA3320
6E370429DE343982327427C5F638754786ADBE1A41AFB89A047AAE4F91DB16CD
F3B0EF73C3340919719A0148754F42F625B159622C39BA4DED77F75E6EE55E1E
DBDAD033B91C0C8ACDFB8979D807FCBB72EBCADCDD78BAA3CA9DE0B0525ED454
52275C9EFC22A7261D0CED36CA5C736F6E13F22FAE6F65DC85704BDD476F3A06
6157EF988E0CF4AB05CB4BB1519AFC129336A0D1A02846695B464FD456542EF2
9BC24CA6BBD5295BEFFE4159B9881DE3A18D518E38601DB0413B5E8A2EA9CB36
3D9E805E76B91E474036B40161F652D24CDE51518A3007E5DE683754D3484EF6
602B772F9B7A3D3D19899857841CC6CFD097B64A5109CE5AE759173C3FF963EA
3F9D6F40E79D81FEA0D3866522DE9E6C3E774F3D3119DB276FCC22EF1C6BE654
9CFA6B13D4292662447F4B84899EBEB021E0D662B99F5466B59D5A98413FDA35
268B3E64612E3A36DE202217E4E32C9CC7EB52A7D8AC55EC1AB8DDF8ED39617A
0F22423544D26108D87B6A88F3B4B2E85FE638C9AC587E70170D3A8C664A5167
7080307436BF27D17162AA0B31D235D454BFB03E90ECA7BB6E03F7F6C6BEB88B
9843DB07524DDFC4A1EE35D21407BD6381CE9BCC3221F215791002CDBDCAEB34
7E89AB57C5F88470BAB8AE1FDEC74D2F4086BEEDAF932D1BD763219D0F08EFE5
68ABC1BB9042D97009E014F859E8DBB8579D8B2198939A8812FC4AAE836C9260
520A0D1CB0EB31DFDDD43292AC1EF3E691A1F468A9A619DF78A80B5A36490DAC
5802C567213C5127E6500251BBF43EFCC8E7047E79E9E39435F663D19EA2F7B0
8BABA9C44DF9A064C2498A6A7B6BF382621BF877017B5B66B5ACDF76B8F5B0EF
88E59D2EFE18094DC86C12E858EE730534CFFC2C755CCEA4A1B1E670C3F0BA2E
54C1062D84297371D846C5139947AB9FD250104AC58F2F3150CF59199755CB26
8D7B0730D79C2528C0BDA1BE2A7F530AED114DBF1626ED20BF04BBA100399445
4E3D62EA105A86136FE566C13295369DF5C0EDAC18BFFE72EAC6CF44FC499FC1
AFE7355AC66F1547C1975B8B1506E096935704DF7D183B0F09F75B22F38F8B50
A245B28E9B8C39F426F4CC32D53CE9749844F6C083E51393BB19AFFD2EDB332B
1F6E1022B5F359F63BC01990F70344AABBC657C22A33A62DF5018792964E1494
7D821305FABD420EE2A0BBAB34592CA8B468E9121F6F8F35553CC5B265BE4F25
925532804C56692E886FEC265574625D3A2B76B881A51ADCADB024F84B691FD7
0B363244BAA8EBCA3319778BB8D811EB27EFEB9EE8797859E2B24048C38186B9
C4EEF6A770603C082C9ED11CC1EB8862D0C9C1DFB5792E675C54609DD40F34C4
1AEA82FD448818241B54D5BED75AF6FFD2910B14B08D6A103993214AF50F4842
438E87E3F402350A35C78D9E2EDD2745B916A977A9C4636D479A990BC76C9B83
559099247A8C4A7B74D88E66EBC4860CD3A7CBAC2D56520C77ED48A0668B91FE
D47AD6A9CA71A34050AF13EEE3D7861018D4C8F19CFB582DD6CF41DDBF5F8432
88040AEA43512D7DDE768C29AE6EAF6A7EAD6443441962FC10960084B9B7FB3C
21F5FE221C2129C734AC048521C18BC0939224E1FDC43D1FB0E622D83A8E23BA
D890BB5EC155263587422B120BD1AD91617C35327C2F06F3F55ABABA067B21E5
798A135F81C2AF5170BDE8D6EABE6968A35CC65AEE0B3C3265E1A0D8A0718ECE
2EEA859C107F2DD4EDB12F5536D420600DF34D7ACC0ABAE3A7BADAAC75BE6A36
965FC5B2B1D4CEEED87836D7B731E2CE52CC42A24F2B8352A94E565373E36362
F089B38C61B26018EEC26C9CB1B755370EDAE7F4B56061012FB7289BD9CE5F30
80147B40AB48B1ED425B17805AC9D83604FEDA5F0D4DC2BF6EF3CDFDC98438EC
313CD4028501C7DFBEEC5E3243E324B34BCB7AECB6FC78B792D8B8D67480D26A
26EC86A9374EF1DF080DD6BA1BA2049C0503466996242DE67A89ED300086C536
C7AF3462C2B4B4CEF9B014ADFDEDEBA3E994B9D4FE1084DEF6C0446E73A6CDBE
AA31C87C530297952F7D9DCC0F1E980B37468933083F0586B27800507BA3D241
13ED41EB800DB5DBEF1FDC20FF17C504E76AB6E710DDD4024C26AA37DDD021A4
3A486E7303A9EA9C098BC1A774109087ECE853
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 78 /N put
dup 83 /S put
dup 84 /T put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D5C30D20FD1358CBB61AA05EF45403C3B8019EC
6350ECB240F696BCDDD1A9F0465CB43B824457852CEE14CB39164B65A06C6F60
2FF3A2A62E9567386DA80C4AD7651D44FE76DBF369706318E0C38215CE324932
7625B5924F5370E9C13F0A66881FC91A4FF6F1AD4CABA49269C8F547DCD6E7B1
47D53DB0D8DB88F2B7D435B16704B69FB1932CAE7E189DBCE941CC7A968A8CF0
A5B18680C9C1CF25413ADC7FED11BDA308A61F2B9B688FBE6F35592A7A80E7F8
36315FEDBD2A86FEAC9A2436E9827F2D291EBE20C9AF3B6EEDE26157BA188623
EEFD088E3003970F5406023034921BE2CB71FD2FF3A8097881277AD8FB61E2F1
78234A1900D0E11B18F1FC53B65F62F8F20B22A7C0584A3DEDCE17A045F366A7
2452F46F213B0EA52186A9693599344A739F6DD15AA4EAE18AC229C7C70E12A2
475B7821C941EC9B149BE9B6AF9A887A21D59350EAED951E317DD3AF21767FDA
40A19CF746A59B4B32287762B6D2F9850A4A87122E1D509E77B7E20D38903764
AFCD068B8A76AC6C24DE414BCF255B58E09F4896A0145E57B37C25B3A3B4F806
6B7213EB4B15F2817F7B535D00FE9C056045D271F2CC490173D436C77A4D1B5C
F3915DBB226CCF227260EEC9FEFF583E0EF33F6BF4DB1217F996539D799C1F2B
A294679C8CAB4A33F3DC44787F1C1A2F8E20F048E64438D01C41D5DC78FC197F
B5C0EDDCE8A5C8BD47011E12C3694410625F62DAA9A76B0CDC891113DF81BAFF
6C2330BCA4823C8EFC239E90AB58CBFAA79D5DB9129DF0596B941ECEF1150875
D47D83B0FE7193D255D4073B172CE1F795333DBC8305E2D7B377E9392064115F
CC430B7C56A4F012AB89EC3C4A27E78A6440717AD6A27FAD151067B5D05C903A
EB0228EBEEF7029F9A94998C6CB80C88E3959676E966A4573C342A07F6FDF3D9
7F278BC464242D1D7430BE7448B0CA657FA7E308BC5FF759E791EF3D8B466BEA
1EAD979163F3C22AC209459AAB2A8DF8EA3E7CB62F53DE1E2C2FE029263DC79B
6F98D7A4CDFB513DB6419A5198A469385ECBC3A6473145AF7A4ED82CFE4B1059
3F7487E14EA5E399DF5666BFB1E6DC8BB47553C4B922431F26F0E1CBDD960803
CC12903179A0F79BB05370C57291FB0945FBC73FBAC8237A98BF8278DC3F1C6C
04A9BC1EF84AD0C110820E2ACFB18925AC537FADBFDD4D9F26DF055AD73564EE
D7B0A7E05292D034E95275F3425515A93C34EF8FDA0095FF880D4BDCE4AF2EFB
220546BC6BC21226CBE153FC6A732EA3767E7F9AB51ECF51D19839C48831EA93
A5DD7687F7E20B080118709B103B91E34C7FD9F1D5966949859D5F1BDDBA381F
C71B231FEBF1F199E4C13308762321F6FF85402376274E125A1E00493EF9C658
5728A47F16BBD9C676B54C5041F675D099941FFCF3104BA9AED398ECFF46D327
46DFA2F3178F5A4193F37EBC8F32C2D8819842166535FBF2725655CD36ED4FB6
FEA0D136689665352D6054A25B712DB3FC5CDA93E64209F91744B47E11E6A04D
455AF91E4F5CDAE26580CB8961AF96FE27FF4DDE799372089A7CAD22E0972B18
43E20FDAF8645FD2281C29E68856B10C001DD9087BBBD5002972CDFA6FDB9C1C
A5DBDEBFF3B65144860E642DDAB31A643B644E8595EB62C9388D54F605DDA9D6
CAE96F4CB45D0C24C7F838B4F5907226DFA6EB7E2FA0AEAB32CF66C0A0FD4CAD
6FE7680C3D8837F71B956F02D8BC0B2D1F6743FA80CB14522E35722DBB71CD95
5848AF17A410097461027199A4B656B5183285FF3A22FFB806DD62FFB508B0D4
C90C9B0C3BA04022575C3C41BC363488FCCDFD442B94D51E537AABA773776AD3
039C062F0A261EB98702107BF2B0156AE1FFFCF457821BDDC3947E6B4B06841F
A64F25379F768DB4AFB6FDEAFF39986415307EFF86FBEBC09E101F95784B3F5E
5AD30B577E48E24989D87EA104A088769CB3C3A31640B93F83D806156D719011
D0B9C697ACDF0D066D341F309AD116474E686CE1C76F08B34DA76AF43EB1382D
21839845B57FB4CEA0CC8F8A4E92282D1E2C0D038C9268F1E4532BD3C291556D
0E19E439E66402D75F2193E56552C02688CC3C83C7B87F2165515824A9D2C5FC
A5FCE6D7A568896599285159236B7EE93B4AB26068734EDE4DB48A8EA6EB272C
12140C210FED895520605A3E92EC4CB9A5A9C965C3A7F4E3AD75034252BE8799
6BBF6363529DD3B190EF57C9276643A9443002CFC1225543FEA03CEE0A865198
D7E1BC8C49885507ED3DE51EFA18D1C2466D831CB7568CE85DC481D41F3881F9
95AE5EAF0944EF072CB0DFF3ACADF718D6AB415E4577AEEE8387544BB22B1B17
77A60CED5CD7E07ACFE336EC430823D9EC5543D448D6B3678429DEF8A52CFD93
059C68690E3CC412EAA9539E18D381F7A20CB404ABFDF034BB72A0AC60883467
8427C2575243EDC793A673E11154D37A781E17B78577A871D96337508C525554
D5D0D6751F6C4035A97CBD6D4A3B8C94D6ECACED07FC274A3D8A707B85BBE266
040E2BECF9373C9AF426E17059D6EAA59AA2D249D17F31606AA03661DBC0F149
A46970708C875377C40F2B60E6A34F45074010FA954055C813B7B7A5948C9160
A407AF5324C3C4C3B33F426AB61E459748F44D39BA64AD7F424857128CD427D2
126FE27139D73A05FD33B0358C4A7F9DDC8E5A4E871E2C1C3541847BB962F6E8
AD136D3CFB18F68396A1F561884D4959A1B2D1AA71A961EF8BC0A5A985CB5B48
F0B7A7C1514870F61E5782DA2E10DA8448EF07CD41EE90AF1C98E72BBC53085C
789F253C77A3A91CA50AC69A6183F4AF785F0354FE8C6AF224FB31E83A67A9D9
CEFFCD9CABBC77BCD495B253DD722630869A875682373892E81D4FED5FDF209A
7DE54C17B4AFC778C74451B4B4B7E0FD4C543E31935A3598ABD4E9ADFADA0F2F
6129F9298DCCA67B16408CB7CD6BCF98A227D98628B94377564433F41EE3E3DD
D7612C49DE7576AAEC77345B6A2D107B01605CD7B1F5A3340A03DC78AD5A9F37
0D60C8AF3F69BBA10D99C292CD6251AFF6208078D5198FC18E465B91C3C26386
FC0403149CD74DBBA7E6D6FEF1A6C7FF7FF00046A1F7DA406675B2D5C1E38BE9
253A95FC0D23C832B5B2D958787734836D6822319B7BFA1F4995639B775114BF
FA335E51E977A17D9A9DF8D485284D492A8615FA28A2B7453AE1913A34805A82
E0B77AE08BEE53992FD6E0924E49D59767DE60E74DB10D6CC9807A7A191E1971
C98EAC2FE1E6CB5B29668B8423E5B570EF7901CDB46A5EAC029455D0777C45D9
806CD0D191475A02134C35D400F2D98E6EA46A4DB28DE7486B63F77CE3A61319
2C2DC3C7BF053545F30E85AB5FCB8E008696EC3A294E2B8FA35A6D5D279AE811
B0C9F8AB462D9E6FE7AA973348D8F01A7122E9CDBF511C1E2390658EC0BD2A82
D1925599E3B01C91730952F155C9E4ACCC961DAE19978E7454B930CA7E4B7B87
AF7AA737D4A15FB119FD36EAD8EF3ECFF27CAAD1652AAC4DDF0438B6A9FE78A0
00BCB88BB832EF61BECE87498E45C696B11EB368170A4AD7EC5B61C40E0EED26
D5BAC0374333814C43B8E729A7E2BBC95078CC93A8E7D5159074A68217A24C5F
33650545569DB1524FB19ACE7983A614496A8A51F04C128201E05A2F19B04A95
3C4EB1FC684B61D6F38351129047468DCDAA864660B62CA9D3C9D5F9A5306F0A
9911A8FE1FC6D87A3C505BDB41CE98DBB1CEE25CDF6A477EC1F2B0C0DDCDF5F7
694067B9E1F10F1DB9F8A1193A45ADFDDBBD10984356419F89FE6579CD8345E0
6EF0B4CCF171FBE1B471F36DE44A4F868AF6431E3A1353ACB9CB124C4E9D7BE5
F3E80BC5D29129F18D358C377FF2BA7EF2D0B365A4DA15CCAEA19ACB089F9E4B
E72D9F794F1DD4B435602A2BDB03A0AA53101A11A09D866888A735D1B4699B5B
804E26F354B27CBE0BF66A2ED772A2AADFD8A09F901A92A6B76F664F1F66070A
DC6F5BFF090EEBAD1B07EA58B768C507D989423CFFC80D3DF2A5A99D70200BA7
EBDB1617FDB182CFFC8953A47AB7D8524D1B1EF9C25A71FA5D99B7F55B076E35
4866596A6AF217B2C392AEFF8B929A9806EC4E45385926EB894D3BF098D5E526
600BA57C29EAECE058229E51819885D4199DF78582E4FF2239734106C246D8AC
73BA5725573B665368F4A8578CAB35E364229FEA64B936AC224401B579F68DBA
8B427A9B3A3162C2B53847E039C02590FC0F789178441ED5F9EBBE6657171494
A4CB6A5F8F1C67A4C625C731363CDCDA2535A6D5C92F1DE3CDDC1AF2CDD20512
51C369AB512C54C96EBA8EFB95260E6CDBDFB2005FCA764B15725C8167012A4F
FBD50AA4A5E94FF4375134907653F9031A0C33EE261276ABEE106F090F032605
7282774C2AD219607C4C4BC76A31B4AED126839347AFE078F874CC9DD12EAD24
44EF98EE697F8309A602B04E4D0FAC68D86999CCFA7999F2DCB2F6932B871B84
CDDB6917659EB213D907E66155632905E5EA6FA7080B3C5D5831894DDA8C0852
93CDDD25D5A8F4EE0EA234176CFA34FA9C1C0F99EE94B63FCCD452EE926E0DEB
F43451DC11CD83E502ACDAB5DE3F3F04A3D5D24A91E39A60AD9663BBF944ECF6
0145BEDA784EFF2D726E6BD7E23CB4CAB60CAFD38D6ED99A9E74FD8700E1FFA7
BC9F63D69C958C976E84697315DAB5A1C147BB2819319F667F6F9F864EFD6923
3497BA378825BC54E724BB79A13AEF39E5A297F0D3071419CFDE487D07BA41BD
50FC86670AA04942C8C424D37CD1BEDB8E489B3E9AB271B434D45620D87F6197
96C57515256C0EF1989CA2489113E42ADECD726A4CBC1FE58C6F87DD27762374
CFD6971B587940831CACD122B4E9761601EA68CCE0C32D7E9D3031E6EDE3BC30
86AB1AEE8B4E3C674319D17D78761B6E4FCBE3FBCB35EC2999EDF55C8D6670E8
E8E24D95933251C48FB106F8B56D1139F39FFE19416FDC22D1F0C3B7F5785E5F
28517A676833CBD6389CA96D8BFF42F3462072064A41D97076B0EEE380257C0C
4BBB12FCF01349E7F06CEEC20B2F340F9357885A09906D88238073C59D0FB837
C56A5538AED41A6AA33A06C537628900BAE1998EDCCB89189AC7C3180A707602
985CD4E5DB6C5F30C620114F4A519DA25744F62C97CBA901470E299ABC6B41BE
831A7B74217A445AD7AE444487347AA24823872CD4474FAEF0CDE4A988A9379D
D7F196A4175C814A1FEF3BCE2E1801FCF6EFE2A9EF484E9A1BBFE7641DB3C37E
3BB19C1FDD38CCC1BD2116266F2557321B83AEFC8F0E8C91161DA0923A20F0BF
FA029BD1B6E4601A06BDA6D7A77F323F7EB8332AA84E1C244E5FD767A61CDDB4
94CA429A0A7543E79ACCA901ECB02D5870531FABF88623676E0F57D13F40E7A2
8625F226B3CA77BEFE50E0E889BDE8591074101F0533FD1165D0EECD4709B2B0
5FEAC688799B7A0EA3ACA9516D594305DA5159E28B07FAACC97A60BD1BA048BE
8E975727D88F86FAEA8EEE8CDE2272C082B5456F987A2ADDC0734E0F6F4B3CD4
04479B0067E6D3980EC2E8438FC88B5D52F3ABA5CED9F81068314CC3A362D6BB
15B3E526AD503B6E58828E2CFADB18873DC653C982315841292A2426B09F3FEE
1771C124EB071BA53B4309D2DB520743FC3B1DD18040393F4D071AA6E8FFC5FF
25ACE4D312B01AEFEF299350331DBB756D9415F2D24149BC6FC618FC3F9785AC
A4FCC247E616B42181A59D107513A5C5F7BD7982F88FF53523ACE8C8A4F4BB74
A0E33C3F7152E316CA9637898BBF3A857DC335A2A2C4BA85CF767A99A7746E7B
A88C6C6017D2B509B9421D9D231BCD94CDC89D3DC8ED7D2BD7039B818D1AED4D
5D7831C059FFE9F76118F74CB7760417E948C261F6008DFA6ACA650D32BB0723
3D37BFA0DF9066EB80D2728B3A7C9012B39850FDC7D0010AAD789B3B483B74F2
DD59C5B5F956F13EA6EE6799462FAFBCBE7678ED53C7D30A52A78767656496A7
99A5537675EE43DC35060102BF02438458CFDAAF6DF38C469FDCEFCFC65E3E4B
F76E119C275B3E7AB082CFDDCBE5C9CE73578C3DB355CDE9A9F47FBC0C02CC53
2E3113847B5CE894F984E034F4C9448DCE310FC76F7BB16BB6D212784A603D8A
C724A8478FCEE57270DA76C63A486E4127ABF3A1D30B79F0A7AD3DFE6772845B
EB2A7B1452E213B546ECB5756BA2AA8C3C49F3B7202FF678A5B12280340EC7BE
124FF3EF7470C6DA49C2E98280DE6CF870C3AF4BC27C671E9359B87C33751FA7
761799F408B4F8201E369350669466FDD25C7B43148D5A28C583B4543F53C559
4D1470F42ADD3CFBAF360D688D83EF37E86F69A7631B983A97EFE23D205A55C3
D50D7EE787EFBD4435C2BA6F488BCDE5E30C96D8C3759A3BF03751D4E1B53054
59102A814618D56466E89C0652A865D9660FE44EB2999A41D2A2FF1F1ECBE9C2
D0B851423A2D8D9E49B3D72CAD89BB455E212DBAC372ECF7E1DC755DE0F09F05
8EB715F55864EA75102C31498DA44DCEC91481423984A67C7C06E37F8FE69640
EF6D02A814C63E2F3BDAB3C4686B94A8EC2F8C915BF978C75C30B41241C8A0C3
63D77B4B466A0C55B9524F5808206019FDF5701B6AB478301C271E72392280F5
33EB152DD725F6E9928E87F71CBB8EC42B6BEC4A496C6F66FAC41D865F4ED111
BE5C934E5A2C022A0466A241F732A732ED3FD7B4BD820652E3E07C6B2E1184FC
82004E78C904C998C6140EEEAE2BFD3C540D183A70792DC54F6A67CA4FB37DD9
4F2749ED95A7570B5659142F22891CECCB6C94F4099A6C14BDB16A5C6D8D733A
ACCEFFE85B334A013CE3D59782CCF2E4F3CF6258EE8377250983DC248A1B628C
066DFDC1C0231DBE1AC165E08068DCD7132D2FD4A1A8258CF70C9DB59B9E9F36
B0D40BDCE1E3915D2B4851F95033B5B313D631976A7449762FFE43E673ECE7C8
43E966793704CA6491B4D1ED45E936607E870B8A2E2BCF398B0ADA3A73116EA7
3DB8BC9664DA29F82761B77C5FAD18792AEB46F1F63794DC6440E7E60311AB6E
D040C645B1D63C9A89722809D98A095D6F488F7D372446458827FD9BE7ED1C43
307E78DBACE4205C354651ACC132206D0CE8E8100513124E2FC1B172791FA54C
51FB0A2C9E8488FD4ABCB0572DABA11BF33F90CE9B00ACFE0A00AA452DC766CB
8EF6099B137C406A2CADD9EA2444AE54BB85EED69C5679E635332809E05DE0F1
88A73A9F660AE7C1CDE33D5D40B0C6C808F4F859CE31DE40C304069D55ECAA41
182534A2BAECCAE1631A0D4640C3E4B0FC1B13C18F0149553AC46625C9236068
51C88D0F2E6D9C6D58EE526B4ACD262FE13A8888ECA6DEF76BA85ABF7FA0124D
889A4256406F7F7EF2EDDF40D32FF26C91FB27DFD5A24FE8984C66A73F7309C2
0AA087B8FE5EB8B4C2273D3F280209E6DB8B8BBECCF398C75C1693B0BC43EDE5
E735476896C83307129AFDC84E4CAD1BC03785003617554939E46C83E6ED90E4
A14C305E071ED6F445FFEDE3F25553A99D261B4D6A35F97476ACFC46C5F8F446
FC9147941F6525A79F4A22F65D70BFA7A20522F4BA3F80CA07E8C376B7D1F4F6
C19DDA8C58B5A09469F6BECEC9C51DF4696A904E11FC9D179A163188966BEC21
090C503F5F4DE1E153CD25030266CEF5D7401DE87F5110C7091775E5C68FB991
9015191960691FDB62626AFACF4C034D82A55E3352E02B554917DE529FAAD21A
CA5C6AC11BADE368E11C191FE5173E1647A5445ABBD01AD2D014E882B03DCCFD
9A48B8D2271E6E701019161BF3E343FDFDD5E8112F4F81280E6724E6E6894E41
BA9F9A9D6B73C9F5CEF5DE360AC3636FB323ED17DE442DF630969E2EB8591772
DAD7ACF539032D971D134AE68B971BE54FD78941492C70A39B43CD0B66321AE2
453081EF0EFDE26785F88BD090FCDC1F8640CC735DC9F550731160C711A4234A
FC08908BEF220224FC4B9ED0771B3EE8FE7D9A66610D79CD6240C436E8652961
1D683647876BCAE3E390973BC5D3EBA3816D5C6F6AFA94E41F3E54CF1DECD28B
7AF354F9282C46810329C9213152CB0111F661AD371EC72D73E22CF216BD3482
DA543C42D53062E684A7B65AA31A4DFAF9F8A2DDD6A7D16D8A5B342C375F212C
0202F094EE3595FCC567F500C3CCD2CAFBA5C452CCBA91EC54EFA3B76CE4DD15
CBA1F9E7BC78782CC058AB5226427A8F7ED5C8AE1634A0244C0DC2B636903431
8A8BE85A9C2390010D5C3CF2284DB2AF3A54962A0E8764091EAD96DB13C32D89
D88F58F2FDAA160F6D72D508E24F805DA4A928F043EB2F6E8B01BBBC461C25A5
7CC82AA1C78AF82FA660C5CC7E0281F072863F659CE8B0908F586E3E8DEC769A
D7482FA0E071BA2A2EF173EC1D77343BC7537212EDF6E8A306949B268286D689
D98B3AFF51748F2D401385DA513779C72B92B95F845565AB493FA2BB92FCDA4B
3BD3DB9EDDC6718E1623DDE16FEFFC557F4D61BA6A5FF6837AA8F65C01B8D3D4
7F92F584C00582C5411DCEDE638A894C0F1715080B8DB06403D432FE0FD1B08D
FAA90F6F8BDF1E00A15FD8D556D6FA63DAA63472B2992A000C6196EC5EFCC9DB
DCC14EE31339122703F032D3CCE6BF32F08BCDDD98AADF7157587794BB95D437
6C0E4ED6F7EFBAFDCCFFAD2C2B06B9729B5E23A01B39A3531A4A7C0AE42D164A
90BCD2F338BB82A5EB716DC800D3E6978CC63E0C91FB9483F8E19F6544313AD3
20A532FDAE8EE4611F19FB6302DE4EBBA8908F139B56F9291F59629CDA8090A7
A8CA149DDEAD0B0287E365CD909F2025057C8C48EF60ECBAE8039FA3A70FF571
2C0640EED251C5CC02380B1061C9F2B2829A7BE0B61EF9651EEFF86887EA96FA
4C926E5AD9571902CAF62397090BF9777FD1025CF9A7CBB14BA63A4ED2D57E3B
E2BA4AC26C156886AC1077959D228DAE638F0478A6EBA7F96F4416938B8A1A69
3734FCF36BD102DB122B2001D957590BE4AA618B70138DE91C94D992C9E65459
8214B65474B2AAB7A0966157F5BBD76EB53E2FF8F17C2F2376BCFE0724F0E28B
E76D7357806902CD8B96FBACFAF177E8929BDEC0B95575F7289B5DE49D455FE6
F3B62093543D5435ECDDACBFBE1681902D9A33A14EA9E99039001EC1EC83215D
E48ECF91299B1083FEFCDCD1EF27B7CD36BBE830035CBE34E4AABAC5A8464F16
35E934AB89070E7E66E903396F45F4A89CC7D40B2307CEE412B2041B5CACAEB3
C919E808CD5F437BDDB41432D9E7351B3C816BFAE8762658C94DD6C053E4E1A7
3479C08F48EF211DA915FC407A9B1DDF17F4FADDE203051879861400F8CEC80B
AC8983179336660E64D50AF4A5D5CA5F1B6EED4FCCF7FE5A2FC12A69C86567C6
4A42BF8B6D8F993C035482FC34E8B118E99369146B7E36B4E00483D3FD0AE0E3
36BDDDD307FE124991CAE21013D06022717FC52651D92E370B3049D47CD166CE
4A66B98382B85ABB5F5DA49FCF7A29263025F18BA39D22EA52B5B5B3A7ED4ECA
2B1F4F0820FE18A88562A9B34E74397CC3E915734150D72408FE366C2E34F69B
567BEEACB04000220668275A59C69B2BA699576ECD21B88E718E44AC8E256E98
5A8944F2FAAD09A11E507209D62BB408B760FE0F1D076872466205F4E9AB3A15
33EAA81527FE8E1B95204C30AC487406D8E0FCA6EBE1BA613F039A2EDDB5852A
24D39E323E2FC2505944B412F97E6D7A0CAA33667137A7177813D90440534535
6F1E3F790734DB18EF4853B8C6D387A6D46B3BB4B7A5412FECDA8C7433F67C74
0288C87956C18E77132E2187AF12C001B145ACE046FBB55D82519B3B9D8ADBD7
2CB0FF993280AC5E1EA0481866E5C45992E0EBE919C528DC56AC83FE097944C8
E2C3515D56339200DC0F2297D94E28615D52DB24DED740AE30AC276D0E7B4B01
1E1A39D325BCEB9DC33EAB779FA7B9968DFF8BA40CA623CDDF640E41B1CA1EDA
40F504847C0585C82AC28A76EDF6CB4CE286EA850D731CA1AEB162F86547F0F5
B5C8E1628DC2894FAEA9D086853547FF346072295190AA1844102DB021EE6571
932296304EE9FA8F5DC3A1F7F7BAAFD038B96A5CF7159F30F1AF04BDAE153031
613A4B86C08287F77A6D0A9297328072705B26E89E10B6C9DABDA586EEE6B716
688DA54D212C03DADFF89588FE5D174E245ADF990E9764DC381958E287891614
54677B172A568F9BBC6E592BA116C6A4793DA40C69805829273AE2D34E56D2A4
FB931253C026E9F97D266CCD8918271DC9BBBFA3A54B4E802E675B785D0C6366
B2652F7A6CA25C9C2AF6DD22AFB2617EEB7353A7A6ADF3EAC8A9F6CC89B10E90
A3690675B94DFCA6A506EE5E92AE20C66EC2135EDE261A653EFF25F59ADDD254
5244CD6A799ED1B3918714DE9B6473A12E3894D7BC8981440904719DC21CEC30
DE8F95D7B7F9C432473DAEB72B228A65BF90B6E8213B898B210195D876C52058
F0C2BCACBB341279236E0B9BF579DDB669FE8D73C62DFEBB343C86B9E5A87C95
A1398DA01AE1BB8206CAC12FA1F20ADE2F32A4599CD87C8C014B11A3EF0388FA
06BEF8EE3E43475AD40F0B43435BD2FCE3BD6028DAB1BF3A2AF452CC3A452F96
FF1640529F79515DC501F726186BCFC57B6AEEF2AD26B2F05C9A58C2F4AFC367
597C5D2A5FC7E11E6EE9F4001AD9641A8FB2ED5AFEF54CCA99DC3195955F40FA
1AFF7BACAD47E3C92E47C54B8D9A137341EF4885E54780F36F3E19285BC7E7D3
B0D6DCF3C041A052EA50CF1A1B5C7B521688185AA3B1BD6C05D6BFA8E88765BE
3EFA69BDE25754D03558DA1B12E9A6ACA8EC264FD7C4CDC27C7DB9AB975826FD
CE02D10894CB6FB2CDAA5D3DA49BEE5641FD786098F5966B625BE27A4EF0108E
25DC24620C83EEB8CF843AA8A45E631F1F9C656E9DD5B4DD40DC5276CA847866
344653D69FE515DE659502F902BCEC71D8880F3F660E0B2A94BE914FA8B50DFA
08C9C598459D1CC598A2BAB0B0A97304EA424F3FD462E25F1759A08681CB0217
397F5BA1BFA8EC1C97
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_Writeup2.dvi)
@start /Fa 134[59 3[62 2[46 2[56 62 1[31 3[62 2[51 62
50 15[62 3[84 2[67 88 7[81 11[56 2[56 56 56 56 2[31 46[{}21
99.6264 /CMBX12 rf /Fb 134[71 1[97 71 75 52 53 55 1[75
67 75 112 37 71 1[37 75 67 41 61 75 60 75 65 9[139 102
1[94 75 10[105 1[85 1[103 97 11[67 67 67 67 67 67 67
49[{}37 119.552 /CMBX12 rf /Fc 133[37 44 44 60 44 46
32 33 33 44 46 42 46 69 23 44 25 23 46 42 25 37 46 37
46 42 7[62 1[85 62 62 60 46 61 1[57 65 62 76 52 65 1[30
62 65 54 57 63 60 59 62 9[42 2[42 42 42 42 42 1[23 28
23 65 42 32 32 23 4[42 20[46 46 48 11[{}66 83.022 /CMR10
rf /Fd 134[50 50 69 1[53 37 38 39 1[53 48 53 80 27 50
1[27 53 48 29 44 53 42 53 46 9[99 72 1[66 53 4[75 5[75
1[60 63 73 69 1[72 9[48 48 48 48 48 48 48 7[37 37 28[56
11[{}43 83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 2) /Subject (CS 444 Writeup 2) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Design plan for SSTF algorithms) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (What we think the main point of this assignment is) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (How we personally approached the problems) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Concurrency) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (LOOK Scheduler) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.4) cvn /Title (How we ensured solution was correct) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.1) cvn /Title (Concurrency) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.2) cvn /Title (LOOK Scheduler) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.5) cvn /Title (What we learned) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.6) cvn /Title (Version control log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -1 /Dest (section.7) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150
0 a
SDict begin [ /Count -0 /Dest (subsection.7.1) cvn /Title () /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150
0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0
TeXcolorgray 0 TeXcolorgray 1738 1009 a Fd(W)-8 b(riteup)32
b(2)1707 1227 y(Alex)g(Ho\013er)1544 1327 y(Nehemiah)f(Edw)m(ards)1821
1615 y Fc(CS)d(444)1735 1715 y(Spring)g(2017)1767 2051
y Fd(Abstract)238 2269 y Fc(This)g(second)f(write-up)g(details)g(Alex)h
(and)g(Nehemiah's)f(w)n(ork)f(on)i(Pro)5 b(ject)26 b(2.)36
b(Pro)5 b(ject)27 b(2)g(consisted)g(of)g(a)280 2368 y(concurrency)f
(exercise,)h(a)g(Lin)n(ux)g(patc)n(h)h(\014le)f(in)n(tended)h(to)g
(rede\014ne)f(the)h(no)r(op)f(sc)n(heduler)g(as)g(a)g(LOOK)1432
2468 y(sc)n(heduler,)f(and)i(this)g(write-up.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fd(1)77 b(Design)30
b(plan)i(for)g(SSTF)h(algorithms)1655 266 y
SDict begin 12 H.L end
 1655 266
a 1655 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1655 266 a 0 TeXcolorgray 2047 w Fd(2)p
0 TeXcolorgray 150 448 a
SDict begin H.S end
 150 448 a Fd(2)77 b(What)32
b(w)m(e)g(think)f(the)h(main)g(p)s(oin)m(t)f(of)h(this)f(assignmen)m(t)
f(is)2439 448 y
SDict begin 12 H.L end
 2439 448 a 2439 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2439 448 a 0 TeXcolorgray
1263 w Fd(2)p 0 TeXcolorgray 150 631 a
SDict begin H.S end
 150 631 a Fd(3)77
b(Ho)m(w)31 b(w)m(e)h(p)s(ersonally)f(approac)m(hed)i(the)f(problems)
2151 631 y
SDict begin 12 H.L end
 2151 631 a 2151 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2151 631 a 0 TeXcolorgray
1551 w Fd(2)p 0 TeXcolorgray 275 731 a
SDict begin H.S end
 275 731 a Fc(3.1)83
b(Concurrency)926 731 y
SDict begin 12 H.L end
 926 731 a 926 731 a
SDict begin [ /Subtype /Link /Dest (subsection.3.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 926 731 a
0 TeXcolorgray 84 w Fc(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(2)p 0 TeXcolorgray 0 TeXcolorgray 275 830 a
SDict begin H.S end
 275
830 a Fc(3.2)83 b(LOOK)27 b(Sc)n(heduler)1088 830 y
SDict begin 12 H.L end
 1088
830 a 1088 830 a
SDict begin [ /Subtype /Link /Dest (subsection.3.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1088 830 a 0 TeXcolorgray 51 w Fc(.)42
b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
150 1013 a
SDict begin H.S end
 150 1013 a Fd(4)77 b(Ho)m(w)31 b(w)m(e)h(ensured)f(solution)
g(w)m(as)h(correct)1827 1013 y
SDict begin 12 H.L end
 1827 1013 a 1827 1013
a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1827 1013 a 0 TeXcolorgray 1875 w Fd(2)p 0 TeXcolorgray
275 1112 a
SDict begin H.S end
 275 1112 a Fc(4.1)83 b(Concurrency)926 1112
y
SDict begin 12 H.L end
 926 1112 a 926 1112 a
SDict begin [ /Subtype /Link /Dest (subsection.4.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 926 1112 a 0 TeXcolorgray 84
w Fc(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0
TeXcolorgray 0 TeXcolorgray 275 1212 a
SDict begin H.S end
 275 1212 a Fc(4.2)83
b(LOOK)27 b(Sc)n(heduler)1088 1212 y
SDict begin 12 H.L end
 1088 1212 a 1088
1212 a
SDict begin [ /Subtype /Link /Dest (subsection.4.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1088 1212 a 0 TeXcolorgray 51 w Fc(.)42 b(.)f(.)h(.)g(.)f(.)h(.)
f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
150 1395 a
SDict begin H.S end
 150 1395 a Fd(5)77 b(What)32 b(w)m(e)g(learned)990
1395 y
SDict begin 12 H.L end
 990 1395 a 990 1395 a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 990 1395 a 0 TeXcolorgray
2712 w Fd(3)p 0 TeXcolorgray 150 1577 a
SDict begin H.S end
 150 1577 a Fd(6)77
b(V)-8 b(ersion)31 b(con)m(trol)h(log)1065 1577 y
SDict begin 12 H.L end
 1065
1577 a 1065 1577 a
SDict begin [ /Subtype /Link /Dest (section.6) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 1577 a 0 TeXcolorgray 2637 w
Fd(3)p 0 TeXcolorgray 150 1760 a
SDict begin H.S end
 150 1760 a Fd(7)77 b(W)-8
b(ork)32 b(log)658 1760 y
SDict begin 12 H.L end
 658 1760 a 658 1760 a
SDict begin [ /Subtype /Link /Dest (section.7) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658 1760
a 0 TeXcolorgray 3044 w Fd(3)p 0 TeXcolorgray 275 1860
a
SDict begin H.S end
 275 1860 a Fc(7.1)465 1860 y
SDict begin 12 H.L end
 465 1860 a 465 1860 a
SDict begin [ /Subtype /Link /Dest (subsection.7.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end

465 1860 a 0 TeXcolorgray 29 w Fc(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(1)135 b(Design)45 b(plan)g(for)h
(SSTF)d(algorithms)150 265 y Fc(**)27 b(WRITE)150 390
y
SDict begin H.S end
 150 390 a 150 390 a
SDict begin 12 H.A end
 150 390 a 150 390 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 390 a 149
x Fb(2)135 b(What)45 b(w)l(e)h(think)e(the)i(main)f(p)t(oin)l(t)g(of)g
(this)h(assignmen)l(t)g(is)150 721 y Fc(W)-7 b(e)27 b(think)f(there)g
(w)n(ere)g(three)g(p)r(oin)n(ts)g(to)g(this)g(assignmen)n(t.)36
b(One)26 b(is)g(to)g(con)n(tin)n(ue)g(enhancing)f(our)h(concurrency)150
821 y(abilities)k(through)f(the)h(completion)g(of)g(the)g(Dining)h
(Philosophers)c(problem,)k(whic)n(h)e(is)h(a)g(classic)f(problem)g(of)
150 921 y(concurrency)-7 b(.)34 b(The)25 b(second)g(p)r(oin)n(t)g(is)g
(to)f(see)h(ho)n(w)f(the)h(LOOK)f(sc)n(heduler)g(lo)r(oks)g(in)h
(practice,)g(and)g(ho)n(w)f(w)n(e)g(can)150 1020 y(mo)r(dify)33
b(a)f(Lin)n(ux)h(distribution)g(to)f(apply)g(this)h(sc)n(heduler.)52
b(The)32 b(third)h(p)r(oin)n(t)g(is)g(to)f(con)n(tin)n(ue)g(to)h
(familiarize)150 1120 y(ourselv)n(es)27 b(with)i(the)h(Y)-7
b(o)r(cto)29 b(k)n(ernel,)f(sp)r(eci\014cally)g(ho)n(w)h(to)f(mo)r
(dify)i(the)f(build)g(conditions)g(of)g(the)g(k)n(ernel,)f(suc)n(h)150
1219 y(as)f(c)n(hanging)f(the)i(default)g(sc)n(heduler)f(and)g(running)
h(\014les)f(from)g(within)i(the)f(k)n(ernel.)150 1361
y
SDict begin H.S end
 150 1361 a 150 1361 a
SDict begin 12 H.A end
 150 1361 a 150 1361 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 1361
a 133 x Fb(3)135 b(Ho)l(w)45 b(w)l(e)h(p)t(ersonally)g(approac)l(hed)f
(the)g(problems)150 1599 y
SDict begin H.S end
 150 1599 a 150 1599 a
SDict begin 12 H.A end
 150
1599 a 150 1599 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 1599 a 93 x Fa(3.1)112 b(Concurrency)150
1846 y Fc(T)-7 b(o)24 b(prepare)f(for)h(this)g(problem,)h(w)n(e)f(lo)r
(ok)n(ed)f(in)n(to)h(the)g(Dining)h(Philosophers)d(problem)i(whic)n(h)g
(w)n(as)g(in)n(v)n(en)n(ted)f(b)n(y)150 1945 y(Dijkstra.)34
b(W)-7 b(e)21 b(found)g(that)f(there)g(w)n(ere)g(man)n(y)f(di\013eren)n
(t)i(solutions)e(to)i(this)f(problem)g(since)g(it)h(w)n(as)e(a)h
(classic)f(one.)150 2045 y(W)-7 b(e)30 b(w)n(ere)f(c)n(ho)r(osing)g(b)r
(et)n(w)n(een)h(Dijkstra's)f(Resource)g(Hierarc)n(h)n(y)f(solution)h
(and)h(the)g(Chandy-Misra)f(solution,)150 2145 y(but)g(w)n(e)f(landed)h
(on)f(using)g(the)h(Resource)e(Hierarc)n(h)n(y)g(solution)h(since)g(it)
h(made)g(the)f(most)h(sense)f(to)g(us.)40 b(Then,)150
2244 y(w)n(e)28 b(needed)h(to)f(c)n(ho)r(ose)g(a)g(language)f(to)h
(implemen)n(t)h(it)g(in.)40 b(W)-7 b(e)29 b(tried)f(C++)g(so)g(w)n(e)g
(could)g(implemen)n(t)i(it)f(in)f(an)150 2344 y(ob)5
b(ject)33 b(orien)n(ted)f(fashion,)j(but)f(ran)e(in)n(to)h(some)g
(problems)f(with)i(this,)h(sp)r(eci\014cially)e(b)r(ecause)g(w)n(e)g(w)
n(an)n(ted)f(to)150 2443 y(use)c(pthreads)g(and)h(the)g(pthread)f
(create)g(function,)h(whic)n(h)f(tak)n(es)g(a)g(v)n(oid)g(function,)h
(w)n(as)f(giving)g(us)g(grief.)39 b(So,)150 2543 y(w)n(e)26
b(c)n(hanged)f(to)h(C,)h(where)f(w)n(e)g(w)n(ere)f(most)h(familiar)g
(with)h(the)g(en)n(vironmen)n(t.)35 b(W)-7 b(e)27 b(lik)n(e)f(the)g
(pthread)g(library)f(a)150 2643 y(lot)i(b)r(ecause)g(w)n(e)g(are)f(so)g
(used)h(to)g(it.)37 b(F)-7 b(rom)27 b(here,)g(our)f(approac)n(h)f(to)i
(co)r(ding)g(w)n(as)f(that)i(w)n(e)f(read)f(the)h(Resource)150
2742 y(Hierarc)n(h)n(y)c(algorithm)h(and)h(used)g(traditional)f
(pthread)g(library)g(metho)r(ds)h(lik)n(e)g(pthread)g(create,)f
(pthread)h(join,)150 2842 y(and)d(m)n(utexes)g(to)g(implemen)n(t)h(it)f
(so)g(that)h(eac)n(h)e(philosopher)g(\014rst)h(grabb)r(ed)f(the)i(fork)
e(to)i(their)f(left,)i(then)e(w)n(aited)150 2942 y(on)29
b(the)h(one)g(to)f(their)h(righ)n(t,)f(and)h(if)g(w)n(ere)f(unable)g
(to)h(get)f(b)r(oth,)i(ga)n(v)n(e)d(up)i(and)f(w)n(aited.)43
b(W)-7 b(e)30 b(used)f(c)n(haracters)150 3041 y(from)k(the)h(Marcel)f
(Proust)g(no)n(v)n(el)f("Remem)n(brance)g(of)i(Things)f(P)n(ast")f(as)h
(our)g(philosophers,)h(whic)n(h)g(w)n(as)e(an)150 3141
y(imp)r(ortan)n(t)27 b(design)g(decision.)150 3273 y
SDict begin H.S end

150 3273 a 150 3273 a
SDict begin 12 H.A end
 150 3273 a 150 3273 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150 3273
a 100 x Fa(3.2)112 b(LOOK)38 b(Sc)m(heduler)150 3526
y Fc(T)-7 b(o)19 b(prepare)f(for)h(this)h(problem,)g(w)n(e)f(w)n(en)n
(t)g(to)h(class,)g(where)f(Kevin)f(McGrath)i(talk)n(ed)e(ab)r(out)i
(di\013eren)n(t)f(sc)n(hedulers)150 3626 y(and)26 b(discussed)g(the)g
(no)r(op)g(and)g(LOOK)f(sc)n(hedulers.)35 b(Then,)26
b(w)n(e)g(read)f(the)i(T)-7 b(opHat)26 b(text)g(to)g(understand)g
(these)150 3726 y(sc)n(hedulers)g(ev)n(en)i(b)r(etter.)37
b(In)27 b(this)h(text,)g(there)g(w)n(ere)e(links)i(to)f(\014les)h(that)
f(corresp)r(onded)f(to)i(the)g(Lin)n(ux)f(k)n(ernel.)150
3825 y(There)d(w)n(as)f(ev)n(en)g(a)h(link)h(to)f(the)g(no)r(op)g(sc)n
(heduling)g(\014le,)h(whic)n(h)f(w)n(e)g(used)g(to)g(p)r(eruse)g(ho)n
(w)f(w)n(e)h(needed)g(to)g(c)n(hange)150 3925 y(this)29
b(\014le)f(to)h(a)f(LOOK)f(sc)n(heduler.)38 b(Our)28
b(approac)n(h)e(to)j(co)r(ding,)f(then,)h(w)n(as)f(to)g(cop)n(y)f(the)i
(no)r(op)f(\014le)h(in)n(to)f(a)g(new)150 4025 y(\014le)g(and)f(then)h
(observ)n(e)e(the)i(metho)r(ds)g(in)g(the)g(\014le)g(further.)36
b(WRITE)28 b(ABOUT)g(THE)f(CODING)h(MORE)f(***)150 4150
y
SDict begin H.S end
 150 4150 a 150 4150 a
SDict begin 12 H.A end
 150 4150 a 150 4150 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 4150
a 149 x Fb(4)135 b(Ho)l(w)45 b(w)l(e)h(ensured)f(solution)h(w)l(as)f
(correct)150 4381 y
SDict begin H.S end
 150 4381 a 150 4381 a
SDict begin 12 H.A end
 150 4381 a
150 4381 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.1) cvn H.B /DEST pdfmark end
 150 4381 a 117 x Fa(4.1)112 b(Concurrency)150
4651 y Fc(T)-7 b(o)23 b(ensure)f(our)h(concurrency)e(solution)i(w)n(as)
f(correct,)h(w)n(e)f(implemen)n(ted)i(a)f(lot)g(of)g(prin)n(t)g
(statemen)n(ts)g(within)h(the)150 4750 y(co)r(de)h(to)h(tell)g(us)f
(where)g(the)h(philosopher)f(w)n(as,)g(what)g(the)h(philosopher)f(w)n
(as)f(doing,)i(and)f(what)g(the)h(forks)f(w)n(ere)150
4850 y(doing)i(and)g(where)g(they)h(w)n(ere.)36 b(W)-7
b(e)28 b(made)f(sure)g(the)h(names)f(w)n(ere)g(v)n(ery)f(di\013eren)n
(t)i(so)e(that)i(it)g(w)n(as)f(easy)f(to)i(tell)150 4950
y(who)g(w)n(as)g(who.)39 b(Then,)29 b(w)n(e)f(executed)h(the)g(\014le)g
(\014v)n(e)f(times)h(and)f(traced)g(what)h(w)n(as)e(going)g(on.)40
b(W)-7 b(e)29 b(found)g(that)150 5049 y(w)n(e)j(could)f(pro)n(v)n(e)g
(that)h(t)n(w)n(o)f(philosophers)g(w)n(ere)g(eating)g(at)h(an)n(y)f
(giv)n(en)g(time)i(b)n(y)e(our)h(prin)n(t)f(statemen)n(ts,)i(and)p
0 TeXcolorgray 1929 5349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fc(w)n(e)24 b(also)g(found)g(via)
g(these)h(prin)n(t)f(statemen)n(ts)h(that)g(other)f(philosophers)f(w)n
(ere)g(also)h(able)g(to)g(eat,)h(th)n(us)g(a)n(v)n(oiding)150
183 y(starv)-5 b(ation.)36 b(It)28 b(w)n(as)e(easy)h(to)g(tell)h(that)g
(deadlo)r(c)n(k)f(did)h(not)f(o)r(ccur,)g(since)h(the)g(program)d(nev)n
(er)i(ran)g(in\014nitely)-7 b(.)150 315 y
SDict begin H.S end
 150 315 a 150
315 a
SDict begin 12 H.A end
 150 315 a 150 315 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.2) cvn H.B /DEST pdfmark end
 150 315 a 100 x Fa(4.2)112
b(LOOK)38 b(Sc)m(heduler)150 568 y Fc(**)27 b(WRITE)150
693 y
SDict begin H.S end
 150 693 a 150 693 a
SDict begin 12 H.A end
 150 693 a 150 693 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150 693
a 150 x Fb(5)135 b(What)45 b(w)l(e)h(learned)150 1025
y Fc(W)-7 b(e)37 b(learned)e(a)h(lot)g(in)h(the)g(course)e(of)h(this)h
(assignmen)n(t.)62 b(F)-7 b(or)35 b(the)i(concurrency)-7
b(,)37 b(w)n(e)f(learned)g(more)f(ab)r(out)150 1124 y(ho)n(w)c(to)g
(implemen)n(t)h(Pthreads)e(in)h(C)h(and)f(more)f(ab)r(out)i(the)f
(canonical)f(Dining)i(Philosophers)d(problem)i(and)150
1224 y(the)h(di\013eren)n(t)g(w)n(a)n(ys)f(to)g(solv)n(e)g(it.)50
b(F)-7 b(or)31 b(the)i(VM)f(build,)h(w)n(e)f(learned)f(more)g(ab)r(out)
h(what)g(the)g(di\013eren)n(t)g(y)n(o)r(cto)150 1324
y(\015ags)f(mean)n(t,)j(esp)r(ecially)e(the)g(net)n(w)n(orking)f
(\015ag)h(whic)n(h)g(let)h(us)f(bring)g(in)g(\014les)h(w)n(e)f(needed.)
51 b(W)-7 b(e)33 b(also)e(learned)150 1423 y(ab)r(out)26
b(ho)n(w)f(to)h(c)n(hange)e(the)i(sc)n(heduler)f(in)h(the)g(virtual)g
(mac)n(hine)f(and)h(ho)n(w)f(to)h(con\014gure)e(the)i(virtual)g(mac)n
(hine)150 1523 y(in)39 b(general.)67 b(W)-7 b(e)39 b(also)e(learned)g
(ho)n(w)h(to)g(generate)f(a)h(patc)n(h)g(\014le)g(and)g(what)h(a)e
(patc)n(h)h(\014le)h(is.)68 b(Finally)-7 b(,)41 b(w)n(e)150
1622 y(learned)28 b(ho)n(w)g(to)g(implemen)n(t)i(the)f(LOOK)e(sc)n
(heduler,)h(sp)r(eci\014cally)g(what)h(w)n(e)f(w)n(ould)g(need)h(to)f
(do)h(to)f(institute)150 1722 y(an)f(elev)-5 b(ator)27
b(algorithm)f(in)i(the)g(place)f(of)h(a)f(single)g(queue)h(\(no)r(op)f
(algorithm\).)150 1868 y
SDict begin H.S end
 150 1868 a 150 1868 a
SDict begin 12 H.A end
 150 1868
a 150 1868 a
SDict begin [ /View [/XYZ H.V] /Dest (section.6) cvn H.B /DEST pdfmark end
 150 1868 a 129 x Fb(6)135 b(V)-11 b(ersion)45
b(con)l(trol)g(log)150 2228 y(History)h(of)f(v)l(ersions)150
2334 y
SDict begin H.S end
 150 2334 a 150 2334 a
SDict begin 12 H.A end
 150 2334 a 150 2334 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150
2334 a 150 2334 a
SDict begin H.S end
 150 2334 a 150 2334 a
SDict begin 12 H.A end
 150 2334 a 150
2334 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark end
 150 2334 a 200 2503 a Fd(V)-8 b(ersion)99 b(Date)195
b(Author\(s\))334 b(Changes)200 2638 y Fc(1)370 b(4.7.2017)97
b(Alex)582 b(Add)28 b(latex)f(template)h(\014le)150 2768
y
SDict begin H.S end
 150 2768 a 150 2768 a
SDict begin 12 H.A end
 150 2768 a 150 2768 a
SDict begin [ /View [/XYZ H.V] /Dest (section.7) cvn H.B /DEST pdfmark end
 150 2768
a 126 x Fb(7)135 b(W)-11 b(ork)44 b(log)150 3000 y
SDict begin H.S end
 150
3000 a 150 3000 a
SDict begin 12 H.A end
 150 3000 a 150 3000 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.1) cvn H.B /DEST pdfmark end
 150 3000 a 93
x Fa(7.1)p 0 TeXcolorgray 1929 5349 a Fc(3)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
