%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writeup1.dvi
%%CreationDate: Tue Apr 18 12:46:23 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12 CMSY10 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writeup1.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.04.18:1246
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 81 /Q put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E014494
0A17B50A9C688EB2A49EA9BE6A81A7BC77BBFCF7D1CB80F344716E2AB6248EFF
1B52FE1C415384FB8C9F165E1E4E747B1D044A7F8EF2214D5F1F7A1452180A4D
32CC7A9A85519C85C498A6B1616003FF395F359C9E7AB8A1C99BFB5F4A93C46F
ADE3FA971D3DC8EE574EA3B56A3927AC3CE699FAF7BE4CDF2D574A5B579C9FD1
B253DF3B506B6F32315D49DC1615C5DA344AE5EB1240AB4F3A0F5039E50CC9C7
B0A223FD12E775B61C80ED3BCFD135F31F4C0DFBCA717F32A1B56C63118A607D
52166B30480D2529D13B666925992DF19FA957CDA6470CCF08438BACDBF02E60
3B996BB66DBC9E0FDC3ECE563F5FE605CB2329122BC2241165F242D569CA29BE
18FD209607FD2D57B8B7AFAE4321B8C1CBF5C044AA8274DC17DE43FB1CACBCB9
DF3DBD5044CC70995F13C5B2B2DACD51C68683A49FD508382985CAC991664883
F727D2C831985B10F32FE303FEAE5FCE2A7E51F6FEB05C36588F6790F697772E
F1159DA5C9658D7CB402D63C62981D156E17488313336D6D2FF2F77668DFEED4
E990A1FB4F8EEF899E64B744D0D63C4B22BED7CDE1FE70ABDEC9542D3606B538
4A9654BB53B72381EF5834D5D59322FF6E9017704126AE792F02BDBBFB67B33A
7BE8C059EE7C1C88FE0BDDAE31F23015DAB6D5AC407614D7291BA75A9EC5DBC8
E88BEC4913FC5C0FD96CAAC37DB29EA713FC421FC843B015A06334B3489EBC3E
616A1DC6073BDFD731A6910E57FFF280C7CFBCC65B975CEFA212C6AD628F4401
9D1B27D3FE8CD584CDA967BC55770AB7BED02F1EE2C95ECC671F2B5745DD690D
97846739FB2B54E6B34F62A2947D2DB6F041AD7180C5A3BBC7FFACA3DCBA3772
2E3B8C33A24EF959CDB9513E15580103CDBF23B58ADC7FE187D8E6B2D460F433
93C5CE8667A36268A2D37AAA131F4228F6B3E7627D3397641F07438467C45D34
34FBB408B0642A43ECC4F31557ABCEB4A1E562425F80ED1A382627AF73EABDDD
018F8C2EAA43644E7DED8FBCE2736DE2BF536B024F19BF5EF936377529B48CF7
02AD108C459532B2CFEB7920E789F8D4F05DA3BF16B7175DB9AE863467FFF808
CB01ACCC8C014119512BE5961F871BD0E076365324E8B1360DA7F3CF89EF696F
2D6B7243C356CE96A195D8A75890136F6AD9BAF22B6DFE591AD63B435BEF4695
CCBD43BFB3905D41DEA5B1B76AB783CB64A58A7EA54D860A3073B2419278EC6C
4A1D8940E7C79850DE0C2649B110D62207B022CDBBD5C5BDB406D99310495BA7
F870CCBC622028208A199D060A17515EBDD273D01AA8645EAEEC3B5B36E3C562
09183915AB82C064655F83E0A0F428127706EA941E33D5207631849D0B1ECC6D
4564902C42225D8142C1AA664C985D71D86F61A721D763ED18925C66C59602E5
9C8A3C6FBE055F5335A810565D6CC5C1389AD74458D48416E72EA60596DE22B3
AD16CEB87839C95D611C70A691A9E550DA22098773B3C48ABCD52A3DB161ABE8
790097BBFBDA808045FFF7CB0E033964C4FB5F068C361A9A8579AE666238E3E9
34138FA9FC7474224789F3A2A5BF5F5B19B37EB9CB2020964A4DC09B8E958BDD
39F00D49AF33E440AEBA6D9264D010EAC709FB66957171AAFFD107F579DEF3D0
AFA255E30CA414DB37F25EB24B01982969A3F3ED3FA2BC07FD208C3B5BA54931
A6E70BD5713EC208A79AFCFE023CB22904720064DAF94822EAD2898257896204
542A80F91600C20C5FB49A25D31A50D112895F00FAE2187725278045506C25C9
6EF7B153E9805B03BCA8D3AFC519AAA1C45738316C96D7EA85B867E7D1963DDA
C534C91EAA65D53D95F01A6694C336175E9FB0E8F2F3A6FEB82BA94DE57BE1FA
0E61D11EA38E446C00C570BBC07D15DEA1CAE5184E7AE77B6762C3149B97BC92
6D8720108DF46EE01AE269331A29DC116D6DEA1599E2DBC23B9DF6577AF34998
E57E0336F4A14A1FAF05551F00669F5AB0D3F77BA9079E45230351CBB52ABF3F
A80D005644497BC6EAA22397152C4E2C6B54C7C9C2DF8E18A064169682F6FD2F
BF0711EDEE17CE7E78158CB45CC0C6F24E14A7F19CD545186374F00C28DF031E
26D48B9E5C174C4B42366641D48EC01A1AF428DCE3AED25C95042C5800604E08
35AD2F3364F775FBBFB98B6F7ADD670B34491608BB461607AD64D727F5695216
86A62A7392B28475A1344B97DDC15E704978F36BC22F7DCA9954135A334BA2D0
2E3EDAE984F68690AD8BBB60DBD388425121C430D038908F094B77795DB29491
8F3E48FCB3EA76582F80834B53F4D928F60571B1A11C7726F6E33580FF0D9701
B738E614BF6A0A39A6EBF56084CBA647091F5DCDF7D69381E00B6FEF0F7C4658
3F340CC177A0EE45C9628AE15528181A7E95FB8526287F616AE8A99D52117C96
F6E473E55BF588298B5DC402D4ABB17DF7159F51C3257E7A13E2F8E29614E4AB
711689C69CCAF35FFCB5063E5EA3501AC00F2E00ECD13DDE3EF5905FD143662F
AF923B165FEF0271F7EDA46A012344AA21E97643E5E9AE5F3E7EF9B2830AA99F
C6FB870ADEF2129EA0BFB2432A4B1A511C841508CAB72B137C0DCDB9DD94CBC2
BDD0C8186DA491FC3B3D4E49F8F50D82B21BEBBECE1E7B0D1E5624B508243D94
1985B954B182E18BAA01921F48E31D4E96F0BF07644BC3C2523603103CDB6FD8
64D7DFE24993A74FB72E40334EDE0D690A5B27A86219C86F88FB16A942CA77C0
CB73D48BEF36954E315B2EF64B91AD1FC9CE4E6BFDC51A0174030EBAFDA1FB79
F05AA3CA9503F3B61663B95D6532B8803D26FCA16B8D117E51932BC0B3804356
678644284655B5F8198C67714A5FCDC4622447E594FED8CA4F972DFB87F5E328
411C7E9D43020DA4AC3426EE11F2CAF8D18E21B3C67D8D7E01F8D8A4E0BF17B5
588045E9EE51D052016067E4750BA5080C45764388A9E4B920A543CCE6B8FE23
B40849873013B7FC4DAAFFCC8E48D2E36FF6FD4BBE88B6D7680B7B94A902C8B8
3D84058A6485A437929BDB3AC70F979BAA6B9BFDC6E378E15AE78E0FEEB0B8FE
FC2ED5ED19E8283109CAAD8941BE5B7F266D95C9349BEF3C57AA73E6C6649E52
8781A06086111EDCCCB92E13EA15243E188BA9391D0887DD219DC470203AC29F
2659E4D1A05ED99051DE755E80268A787B7FDE8876B4921D051C3DF16DC185FF
631CE466F9A11BD7FDD3AB64CAB91C5EBBA28E0A00201E15CEFCA1BC4F2D5328
8D8BB0A84785C1F6BA38ED7ABBC177DC2B32D088DA7121197BD5FE5C1EE53D3C
293E4836A03CDB53C849A94743D0C97E712DA0143144AECE80A54DB47DE35092
DEEE854D9A26D86DF1EE706755D8D57E41F7B93134814D4B733C9952172E2BA7
588A40B2EAACAA78504F0BA7BB194BE276F0C0E8DDBB9F058C491E6AFD77CB0A
2E5B70631193C460E03F2B9385FEDD69764D94FEB235BFC7A0D82F370D8584E4
E93D4BBC008B5D3DA7852BEEA5C7A14AB0A56711F82F8662531225A38C545E51
F10586C73D38F7CA14C7B0E9532BB870E0A06D7C0D43B1DB28E9C878B544131D
AE80AFA8621E76F587B2A6AA2032AB1FE963250FEC1EEF6EA42C1A1F624C31EF
56DD948935AC33D204BAA8585500402F4D7430C7E677E18F3E2AAF05AF181C4F
134074CF280756206AFB0872A143FD6C409BE4BE54F244A758D9E03140D54DBE
354C9B95A03DE74790E84D79A538C2004D6E6593988647DDA0929713FB463958
44E64DB1B824FEDEBB57FA2D9B358307C8B4205A1D57FCE1D57CCED6E624CBAE
8625A2544602924CF475592B5C9122AB6DB46514BC662B1851B340D77EB81BB1
20AD37C6BA3C7A6C11C8DA1D23750F74674996A18B4F27CABB0DBC7FF61B45A3
32FC14DB441A8F2957A164466C84AB77F7F478BE0EF0A098B1252668A982D030
49F6EDDD8B8322C2E3F3AFB5C504952347C8AAEB4AF3B5C9E520A0B755582415
7BDDF02B3638080C772B33A1C11C772EDD0D1C90BD0FEF7C61F4A8E6CF0C6BC8
2F30B2F91EB0AF92BEDE1C13D862665F1D5587C1AECED817D702B22983293592
854FF35E8ADE1D9C098182DC04B91B36EE25DC52E82D4BFDEBEB2498DEF95D74
FDE6AB12E968EC97F36494409533AB1C1052B31F041C0827F369FF9E61C93BAE
4D780AC742569FBA94E661D7C8B8D54886424301F7F3229A2299318D5E344765
323649E4498D272F3F900161CA42D5BF26A19914DAA7781AD8B3275784D86252
E5F494218F8408BEC64ADE5403F435BDB69D7AAC78C3F2C1FEC8C579CA37918B
98C9D76FF788B741307C07FEB2B1E83856BD9F6A8C06292F0B7FD94CB9CBBFF4
33FAC1C8F91344C6E448104BD4BBBF708276DBC6F67265F8B1F03D5E899F9E87
CC49C78FC19148F73E571C49554C798982BE5DBF657000765B5B7E725A45BFAE
051126EE6458C76BDBA6176637074D7FD6D714D6E7C10996671CF66D9ED36C32
83432360A8E67CEC7B846EFA401BB696E98B8565AEF53335F5B21F0EA0C3B842
4F8E43195A26E1648250351530E2EC69B009C5870981E0E0D4B07FF86FEB25B3
6E7FA7B71D8F3DFF03B61940C3CA3F421403D8D89E5A8D690C1EAC904CB1393D
2FF3B55A00F2ECC8F6A2278B540A7352D5637ED56D8AB684D041A61044E31607
99E693C930AE9CF5D6A5AADB8743263E64E73B56FFB741522728838D800EFF66
4B3F9C365C54684B53ED56A3F0F07B99807494AF53C22D99E70EECAC504650DD
D7202E1C41AB577C4D76EA4697F866A212BFFC08F9678BD3F22065F83AC7E57B
06B6C354CB08031EC7FF41446252B24555A2B01C543EC5FE79322DF383F34E58
3476276DC80D91DE195B04C53403B1125B4798F62FB82E7A896ED8F354306591
90A3B0B140583CBE1C9019524DFBF3D67ED1F81B47E955A3AB7BE11C8A280A53
151158CD88CCD405D5EF23AB1B34693B6023BD74A09754A268A9015C953DA7B8
75C971CA003A5F178FA6A535EBC9389B786CECB53EF77E143176C9F87B6B49CA
22B41753E30CCAC85D21815C8A7D0D163AEB4DC8F710D010A626E307EB9D9D8F
FDFABA77FF9FDCF2C7BCDE5EEE16576B6DAEA4FF7A4000DBE56564BD8EAA4050
B8CC8057778E054F5A8A20A8BF69433B43599C27EA3CB05E443D01257073B7FE
E8A568368AA447AB445433295ACC7B424150A9078D168A1AF6171C2FE907F248
56CAA2DBC5BFBA20471FB63942D92F612C0ED1729C1DDE372D3379493BA66202
E641D9CEB0F07B04CF24AFB73D4E41A966197CAAE8AF7AE91B9B4864FEC9F717
102402AFF9D901AC0C9E75A465BBA2482FF3AE31F399D3D9FCEE8646BAD60E92
0760CC1B1F8DD23CD93247F75BCACB06C6A75251914415941D4705C3476B5960
83FEB63DE146C19A407F6F173B731107070B33A87759D3F5DF792975762492C3
9752BEA5DBEFB3772462554A7470BA3F0AB8C1F8BC4EAFAA37089BA41CC47D53
68E8032C392D4BF9807BA1EA5EF807115865AAA6CEB4107558490988C55D777F
1DAD5E513023C7C501B2D7D7C8C999D72615B90DCA033C105D1BDF255E45D3A9
B90E9EA85BB12814D489B5B0BDE1D1D0E816D6CBB307554B10CBFE7C92C558D7
75ACF32E2B5198559D30D978457FCDA44201D1003FE12D823244AEFA08368B8D
7051AC3C9994851DC1AF07FFBDC7D86E5B05BC853A8746167317E565CBC7B79C
FF9080F574BE9E591ACCD10C442A3354BC3BCF8751FDE41FFBD196DABF81B6EF
5DECF912FDEF6B413D5EBAC0B8626ACAC40C1298778FE7584301D0178AF167A7
17D466491CC5467A4E6B5EB10EA2D09313CEF787F71A09759A14D4F00859C985
DA91736CE8F0A3426D417239E0A04DCD404287C442A963207CD5C0F580B61048
6A0D11573934551473CF674FE3C30B04322D91F42040154B7629789295D9082C
18FAC3C69681597153F07EE62FEAB94FE063E0DA56855D4AAC936A10F001B8E9
615855002369192FE6442F28C19F70C55C72C5ACC54B07A8D67BAD53C8782948
3CA032E139086DD41A6A0D4718CCA7AAEBACEE948807C3BB3DA5C1C60626C1CF
1E8292B33BA771C46B9FA049FCC4D3C40FF1ABF756FDDAE2D18B4B2E1EF2FBEF
2983C536FE3688B424258F6C263992A0E6F4BA64E50DE7D8A073F32685F53390
DEA34D58E60DDC35876A35FBF2EAC77F39C7FFA63DCB90BCFA5182C662A9DC6B
C68B52C48E768F6A1B8B28CAA1A3213DC16081B17118B56F500330FC7EF73869
2A7C8E788109F551BD757C31831D3533FB093E60B8DCA2A8A59B35232BBB435E
355F7061DAF7DE431873952C3E7F2106DE99C998E4502B0CE5F71ECE1EA6CE7A
6C58375564F472BB56C54B86A15CD54EB86070099DB3BA091DED9607769EE288
D456357C14EFAE80CABC6F9BE5B002F57C20C6AE52A19981813B4AD92D13C299
D925C7E844E369BC1D6F84F9838C7D4303F2E59AFA6169706A2C8BFE76154685
ED5E530026EB06E7A09F96AE34099B5E9F2FA96E3A14FDBD367627916B586379
E421572A97787789C7B02A18F825268F0D5C3496AD6330F291B312F62E2F107C
3CBEDEB1242D9785E89F6C8C209DB1DEEE0446F476F90DCE88181996B9E4FE20
3F442FEBE50C4A7A4074A417641B65F7993A61389BBF98A56005A1B2F798713D
F714587CDCE39E52954C2C21F7CF109473F18B331216B066465B2CBA0A97E4E1
5A782040E0F3C5798A1FDFF6DED6CD4BB4B28FAB241FE3C86B685E45C4624BCD
04DF455F8B9A726AADD7D87A655E1BACC817581287CA37A0B0B810556A7496A1
E8A8324275235A74F1F6F7D4D594F7DDCAD23806BC81F468D04FEEB0EAEF1B56
24269E003D0B19198AA471A8327CD25482CE0E6517EB0F6584F84F8CA4921B09
0340A268D696FCC6E44CA9DFA9B943B10C9AAFB0597A646AA97FAF14BC335AB8
008F539E3EDEF19420F06E01989D168BBFC9EB5FF8FE3E2BCBA8849CFC599807
98CEA2D8F62586C95E17B2E673190D2B47C1A05B0C09ADB51B4D3F4220304FBB
877CC57771C4DBD22C003492F8C0B38D097F2EB0C9DF6AE6BBCB989E72F83FA6
EE69D417E5026D4320366434B2A5D3DFBACCAA6FC7C40598E80794252513C0E6
0E3245793CF4A0C20CFDCCD909D346C789934F5321FB51CCC8F15F5292019EB9
52C6E93188DCFEC912D4409759AD5E2C7B04C715FA04AAB96FFF4E7C1E84C78E
D79B0AC287F38CA309F282FD4B804E1BC66069EECDB16C46F5C22DD4D4AEE36F
02EEC5FAAD2CFD29B4BB73BBDB936FDC02FE2B5CC283472677A775B564BB79D7
A4E1A7317473E1A7EFBA659EC2931FB790160DA081BAF4FF75F0E4B0FE57AF30
34E2A65020A6DD594DBE41B2329A4E3EE1AAA0A6416617C8C167BB32A07D3657
D8178FF46E699B4F8F69B1F0D4642ADCC2494637CEE7B3CD16A032BDE0559936
F77E924535C58AD9CC0CAB69D41330DEA74F533EE146135AE7719448CD5A4E6C
4C6249EC83339588D7050E6D176F9ACE0DEF5F3796449AFD3A9F8D2A9722CAAC
3293D4ECC8AE235D12A46AB88EB033184F061DD4C1972968DA36E487C73F7E53
5C68101BAEF31A480A436F7CD8ACCDA68CE0BE86BFC3C8938D5C51EF471A323E
0DA117A67536A5381167B37553110E678691BFDEBC3E3F98FE52BD47C4459F0A
665DB0841FBA528890BE0D875906EFCF3E01A8481F0372953B2EC07BE852F84E
A46D5D47225AEC9ED5C35FD9C0537CEE686023AE5FCF88A89F2A3A921435D759
95107F0840F3E5281754B6C1F574C5784F61933014C6683B0D1D4D7A8BE43FC0
26295DFF1D448D1C0C914B00AAA5EA0B79584821D59535514B56BBE3035AEFFB
2D7ED0E2FB35167F5DF882F2E293DDD8A8F0508DF15976A51DCE3BC88BAF2ED5
C4DFB46F7F5CFA457123B370DD2ADEDEB331EAA6FCC4ECD7B0D33BE0FF40C654
8BB9EABED11D93C92408F92BA1CFA804951C68A092098AA1C40DFBD380D1A374
3FD4F916E57D2269D08C267C995FFD9975AACB7291C458ECCC40B6FD708D53DB
CC1A9BB7DFB22CF60F9E6F70AC429F1CC9976011CF642F2F27D6A9F8677C4824
1C5C62ADF68FDF50902FDECC261EF5D27141BFECE1DD915BC42D4910B3800971
68D2DE11736004B782AA1DB02F9D7A0DD9DD30C2C57EA4DC6DF3DE38139F0C34
35BC121F09B3F9FCF1D7E0066364C7FFDFD2AACFC444826B7A84ADD263DD5FC0
6ADBF2527E6192906B25A3DB613D9ADC418F62CCBEE57B1D439E9D042BF1C414
5CF947056914C09FDBE2AD5A057DA3A18653879EB3DF85CEA67BB9937627BD97
C080D0FA806FA183ADB7AE1BF4496AE0F9884E16EFD13B3E613250BFD9F4D461
1E9EDAB56CC32231C829149731E870162E2A3AE9296699909A8D606A8E5421F7
92D1CF4F65ED457068F4178264C0DBE441F8AD1AC76BEF8D0E71D372FD32A19A
C9C6AAEFE5076E5B6810A43E3281E9232E75F3CDFFFDB8751ECF28E38A1751E1
11446A12B62494417B110BC331EC512DCF31BD7A787ECCBA769F61A0D99B052F
F530B65F2F209BFF0F44470CA3E231BDEB60651BA65E1F5F68AA337D692D6D5F
41B04871582CE7304522C70A53DB2334A98BB9385B5D61EE14280B139A0E0943
F930A2D96FA9BCC2904A17980B7EB0542A9B987B31901A416C37E8ED5D079D44
733441544FF2B1B48CA1D7225329A7C74118A3B05DB888F33C929BE754AF1BDD
954B1420D304FFC5494FBAFE11A4EA29B5DC45E334B23AA2ED1C8955F034EF99
558CBB034D5403492E1E53A6D396F7EAA959B5A6FAA753A2246057BC1326BA24
380779AC3C3265871C4227BD9D87A9B72C51B82DF14345F72594F37DD220C6FE
139C6AD4BE1C610027534576646D5E8C33FFE873A960E4AE831CBD94E91D46B2
921B9B64FB47FBCDD89E8592924468F28AE56989997D37FF305BCAF92CB7D8DF
2381FA5E9A94CEA62C4257569E581928F257A185F9AC9FC79385541F611FE427
C48EE948011C342AF10EBACB43D01536C2883DC05012A95D2E7ADDBFE5360CAF
427516C9D0484E6FBF880E087F5C9D8E1C01988F643F2C162FABA50D758C314E
882E93D63EB2B1FE9296993051D75FC7552303E76E8DB4C4547358237196B9BA
E414D4BB7E35D6F6EE56C0882A5420CF6B729668ECB226873999453C66BE9823
83238D5B7D135D245EDCF18BEF69594C90D6F4266103618E90A8157A805CD713
1109DE6AC62051F0F0D13136A214206515A42A042E1298BDF8D198B3E4D0A056
70C2F28CC480F8C1CF6DC362659434F9B4FC4857FC412E5EC7102E427811705A
BBC1793A995B7390CE7480C47FFE3684C922FC42EE4985997312995E8F0D73C0
238A2C4DAEA28364F592FCA6391EF013B9511479A3EC90D3BC9961BF9C7DA2F5
C9F873361C831B542C7213C7E494A64101625D17
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 73 /I put
dup 76 /L put
dup 80 /P put
dup 83 /S put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 120 /x put
dup 123 /endash put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F6BCC38A
2A052EC4018AE3189DC1963BA39ACDED8F0C60C83F8873FBBF0302010956C520
A7F3F8ECD0F177EDF5F4D5522C5984A3678FF32EEEB570B69C142AB89467641F
917155D646DAF3352E27BF2AA0746E062E48532256AF364EFC0F0AAE376538FE
02B2D8633D6C666D2C98A0F564870D3338C931A7952357B058783537D2C16F23
DB377E55A2193755DBE81C9873671029EDBCEDCE81002417D98CE5B808CBCDC3
24E4EB282A834F6CEA72BE497A283DA8118FB63CB51F1FC60CCC5C38E6815EEE
C28EC50088AF71BE072D176290531080B27F7EDCAA31E138FCFE0E3ABF94D00E
293B9BA6F5B8757EDEB78ED3677094ABBCB4613F4DCE1FC18441EC02EFBD9CB5
E29FA6D6EF1419EC503ADC758ECF2BAC38DCF15E5BDD4EE74C7D88637A6C7733
B3E3EFC4D6AC0417563E41ABAE9814FC96EE95100AA2382EC87FFD532208D19A
2CE022507014A9ED0B5181D0CF2037AC9D20CCBA35A9097C7C79D5C02EA80B4D
B2C5A4F91D12A44E8A38A5817C8CEF0A9A848D5F28498976048C30645FE98315
7CBBCFF6A861ABC1C8634103147FCC8D7751AB4D4F8022E40C4E2CE627FCB4C0
1B689D5651C759F0D1EDEB0A55385A3049D9739319F4171FE4DEB694A48F7404
9B58147E003F5C450294161435FDD70A0BD9B5AA8C1EC039F13828ED5A87F62E
A07247B3AD7C2FE6C3493C9C7F15C18B67A8580E08DDF7576F96359A61DEEF7B
A13872CB4C7B5513240E9D969744E897F76725AD88F35AD530AFA4D33BA45A24
ACAC52E3CB3274638BAB89021EF7E559C242B6A6E2F2CEAACB4817299904C2C7
36A2F27414F63E2C042F5B999E59A87DEB0AF61ADA071F0377983B21437B569A
85C8AB0A732023BD181B2F20747B6E4999BB3F77E3D43410F9EEB7DE07E41934
FEF6C19B948CEACBF0CEABA9263ACA274B1F085AB6CF42CC485879C57C2BA413
0D92902ECC53A4318A78AC67076DC061D9D065F94016EC8416AB26580C378F00
986F473C2AFBB4BFDB8D2CD18A9BA2D563286B151C7059ED8FE6D2DC12F3DBC6
1876DBA0E8A6AC53B567F436FC667CC38DD94E7194C19E7BB24446BD797CED46
749B23BE61147B198F784D7EAC4D1A9A38F5316A967025B6FE56EF32C90EE5EB
126F741C3973B92350E4423283CB06B8D7D48939C6D36FFD21F416D1B9E79A2A
09986F92B1AF76B7071D592DDBE98BB54942876ADE64F4435AF17C3138E8BF85
C09E4211DD1F3D490652407BEC0FAF815F648084D070C2807D0261A18BA69C9F
0BC090638E27826C5D0D7038E118BF8D4D271EF351121BDEDCA56ED4DD18FFC5
5C2C3A02A719E2A6DA91D8BFFF63C8AAB289A8C634651441CC5D4EB36CA315E5
9B8940E4D9628900FD3D57B70F5CCCF73EC7ED52EB317A4200848E1A56FD3F31
920B7F16AC9DD999D74932A55D97E832CD2501733044BB3D7FDBF3A49736A30C
D1BE7D07EBEEB666E8DCEC95A8BE581A5E37ACD7498630F5987819B2119A481A
8E3FA52FC05129236DF4551C6B926C45A5DB8A79DB842BB269FAF4352B9B40F7
6512A9B4C11D6DF05DBAAA85581396F7E1905155422EDA3E03294BEA63D2DCE5
718BA35EA19F10637545DB7990B0734421B99E3C72B4C8D048EC0D50C68DFDEF
9F2B34F992AE12DD448AB23B98541C38F051BA44B25FB812A96F65B8FC4F4DAD
A7C2F83B5365FB32E78AABEEA19B59954774D809BFF7AB7437697FBDA773A8C7
668475007D958074585C99DA044C015E84A58960CE047E436ED0058571127748
76C9382BF1A51448699E9ED7BA15E3CC33100502C5BFCEA2C3CA8221944BA994
8465734B6723E6FF7A72123AC4B0D89ADD8FFFB557B9A6B3DE78C8451DA688AF
FBE31636A4739E5EFBC47FF53A98A588FC8C35F5441B4B2FDB4E5F4F77988F9C
02317ACC7368679F50AAE5F3A5C612EB68138905B28BCC16D3C8194F7C1B2052
64CA259E052E8A5C4E92D2730861B6BDD92621F305DBD709133F1EC934872CA4
C4AFD589284487DFD7F023481421EE7314C092786762806E965F74BEE11C7500
9F0917D301FE67C41DE0595FAEEDCD7D87B238EB810345EDB4DCA0358E35CDF1
ECB343675388EF2C140924CAF951EA493B65838222C5C8F28A5787B8931AFDF2
807CE2FDD0B5368B4E01C8E54BA687D3E7285F4582B93EDE773B7ED0437B438E
A379D03EC4B7CE7ED447766151C9D01F3993AA6F67DFA49D91A3191188A0AA21
D66984E7C10649904C8EF88906944696227C71A216DCB5715BEA641508099FAE
6A4F74027CEAD22153A2F8CA56BD0B25E08F3AAF3AD7AA22F89D792BA39AB057
68275A007AF7EFED949BA9704CFF2492D944E01ABE0235E91463F4B893AE81B4
B63CE267C676DACC67898445670CD33CE9545825B26741FC659EA7A038CEFE09
BA4A9BFB3AB2703261E7E64815D824901A3572FCAFE806A6079B2424D899DE87
C535EBB8197895E2DA6BADAC30FBFA9D7E3B6E806702241CA5355EF748A0D89E
21C96C9241E3306857A6DC9BC06F77220929F2ECD46B69A630060E76A8EA3EE0
CC5F8F0BD3557ECAC48CD4392CC43AABE47255543770427DB1B5ED32D79DBDFF
AF7C392F823E7844DEFDF0EAE0D798A209D4FDAAFCF16ADF7B200996BE22979D
FD71A77616916DE3DC36B4AAC76A5B4F4A9AB6C43B1E44D1769293B617ED566D
CE62ED1672FC51098047E1E16F0FB2FB9D52E68B67F58F1B553552603A5D8384
DB31E18527F7FCC4CC502C37C1F1B60621C8E5CA3FEF5B69163F57190E81B097
0C4528BB7581F461C96574807F8579E50BC4008B4183FE2A4412DA0F0F331679
B80056966B65A4308DD26C976306101AD75EB0198E7248914C9343ADA325CAA2
60CF1278C56EDF8F0923CB94DF5D913B5D1DD9D73A6F2E04FD6884BCEA14E6B9
6CA007B707225A4B3EB4A5D4C35DCB871291BD32A7848A984AC3E4A08D051174
56D00166F31F2B736A8A486EF3AEA24CE8CD0BD950A05F9BC837150432285E92
C7F497606864D835C182CD95A6D7095D2E72A496CF55EDE0C5C01B7EAB98DDA9
8EA00785DA39E51A997414C814929C1D83C0CDFA1242456D0667FFA9E50F5BFC
7D5DF977B5799C8443742C71C79B976B4A0EBABD605161A49C101FF2BF262D67
E98EAA75C64EBF06A0FD73308B24B02D13249F1F4B2A90851F99390D1E34B28A
0F237B8D07AA4214CDA55815702CC7FBFC8536D99C5BD25DEF9B24AC20AE6792
D26CBFF27DB6D9ACC149FCACF09252021C76CE8A8B74E112198E9B3123E813DA
9B75DF687450696A84CBA4BA19E678B905900C9D64F31E6DBD65B7F116A49A75
E31F7F0678282A7744CC670053A33AB6C19CCC5060C4BE30148E2FBDF60C3BE2
06E11458B41B6856629E75F1EBB0A3E79B2061543F5581E78AF535D131F8B879
52C8054FF97921152F12A59A450D6C7C483C87D55C923552862F46FEA6D28CDB
A6E90C5B3132FD2D0292116563C83EEAC682331028AD5100623B51C3F87FA66B
575E925078462DB086C0C5D7508F3200F5F5001800E3E2D3E5EA71EF374B6811
31B2E7A78286F624BF52C4C18ACE3043D21E59EF4DD28B679FE9E12E48DC2A01
7FEC08EF3EB871F5F44CFA8D1A622593A384A1D74EC0C554D68428143B15BE87
623E569D3520B2471E1DB49FDCF3EB32621B660CF62BC21A3403C51AC2B26197
541930069B2B038DC9657D080F3BE09743F0E052F66FD8624A2F299654D57810
0DA4624389E7BCB176C6B28A5D54C4FA71D0AFF65783F6A83CDA88B1B58CFEDB
7A642A5F93038760ECC081AAB5DDE79C648B9E5A2AF3C60B3484CC1A557D7B72
126AEECEA23B4204B9146FE31436CE1EEE8C693CCE3D253508411DCC2831BF64
455F2710DB958BFF3C9B8EFE8EFEAA9940A2A94C7F5B7925470C544B8E4ECE58
8F48B59EADB0C56807542841F6FDA0333A8CB506A2037457EA19910A3491BB03
473B4ADD3009D6C0B5D724096DC2EB0A7D2D0614D949AB28ECBD663D2238A90A
B7ADC538C3D8BA5D3150646DD9177AB5FC8EE0B2A6AA0C8953017FF5B89FEB0B
1E828F38001ED8299A56DE9D055924E0261BDDBFEB1B889A32F8D393F4D9985E
1F93134F514A551F3AEFC5F6919CFBFAC2DEDD5F265EF4FDD69D2E7E8D4F0744
B6A41F660E7DC6537AE1A059E363E84A77D9ACA0FA052CCBCAC663D5CA4A4E38
C727370F14AA924CE63D1F71941313AE8B603FE364BAAFFB4B6807B147735C75
3933DB8B2F54A04D9AFAB52734C03D2C9A3F535702D5488B09C57BDD59CA493B
1DEC9E9C7C0916F390AB70FF83FC11DAB884B6E242D69D8ABD793A2193CB93B7
DB23B1A8C77BE9F5E2660576A50CD220AA400B92C6D5D4B4335E14883ADAA5F3
5D1F09AA5E2EAF1676440E7B3FA25079E46F560F9A0E57C2335460DCAE501758
394EA58097DCDE77E16866650B00EA2C603EFC7D7B9BCE68FA6D8356D4248CCA
FB360403B33919A515E99C94697AD8A2C66A51650E7CC94A9FA9BE30C07FEAEB
EB350618C4D1A3FF923FCB75014C6C7C1A2ADD1D9F40F1FD4248549AF2A101DF
1CB30D3BCF2218DE76B17A6E39D572025AE1E83BD6D7AF14BB0944713988E705
F7B180B95E503FEFADA890EDC406D17DC490E45A7923ABB8AAC42038349A379B
F2D8F9479E062DB0AFB62335FF04BCE9CD1ABB55BE1F506CC4EDF63437135F9A
F02792EAC01B548A5C97215531EDB8AA4A774E3AA2B94EE90A70FCB7AAE595EB
3CD518CC54D48D40CE4CB310A1D8693F2BD509A54F3EB4D98747ABE30AE61ED0
47E463A311123A3999D6C006D68D4056E14083AF0F2000CB42735507952B956B
BB0328C74E7AF0D157A4306CF02A591793D7D9F550C6D0ECE1966C41C2E22740
A045C810BDB1BD3063CD729CBFA8D6624965C77D0DA6B3BCE329E1F9B0932C7F
E76D0C387F2796882F03E7D1457007A5534689F4128F2A0F5AD5E1E811A31879
65613A4D6AC63F699691333759DB54AC1B8329B5BE674576768CDAD7FB00E8E3
50E5AE21A6A2D09AEAA2ED7481F617DD079CBEF9DFC1AE2B0D28E1574BD137F8
252CAA6C7B8F6A4AB607F9DD5531FCAEABC3C9335AB87ECCFAA12B2D3914A238
59A24ACB7B9FA7178D8CA5D5389E37B2E08A53EB17732F134CAF3410179B627E
19776324152E95F81AA4D963F7F1A9AF77C2B9B502DA75DC54896D552C909431
C706D67716B4E17557080832D3F634730E4532E8F1AA8DE3D1F009B3F0A8DD3D
F665067717C00F9E325F2AFA60E198AE239D9D7DADE504173622C0F0195C129D
84A1BDC3C0C32EE32CE65AE1AE7A02919B7DB8538F78A24BCFAC7AA9F7ACB6DC
D92DCF5643E9452BB772BA625E867F44D0AF740695AEDCE5DFC565AA23D5D230
6121A118DD4788961BB16CC756FCA7130856DE946A57B07762145A74EC866538
26E9718E695D5ADD5E2F64DD7771CC71BA577F126F4841CBD69012540C2471DC
4619D8DB3723F9CCA36596BB63B0B5B016D826C5AEDF115D002C164F0E09B943
7C623D783DDF30DF31C563D58720F45A15806E048C71D6A7A2FFC22338DEB2CF
526530AF6DE0BBD102CF0FAD8FAE6E2BB30998485A1C3A33B3715FA8AF62DB0B
4456BF9C05909E44B31E505FB49B75ECC866C8E9176BAE12661CDC52314DAA83
D8FE219549BDEF42488ED7BEED6EF638FC3935578852CC2889AA19A767EC7EF8
9DC8406F2BB8BD53C92CB78E04FF1FA745F91A540C9F430350F0748E017677E0
0467AAFB2E352840F2B5472B919C2750686CC6315342686E47723BF679C7C442
81884B43C4DF708E894C899B763DCF9CF41DB265CB7A031A144E8BE4532BDCAC
036107EE711FE4EE91EC273E2A250A2EFEFB005C8B77826D355CC5067EE990B3
51300008961D90B16DC7A59987C918D6BE0723B4103E63565048DECEABCC1CAF
B23C185D0DFE872F6641F9F1924C6D21D545659794F92E2B836C1A449FE71783
51879ED3E39885361201001AF4137FFE958E8B84553C62488BD9952B4FD09A42
AD272B49D06E34A76E1074F10F9A6963D0031D073FFB8BE70B73FF5E69411EBF
5A3159CF8B11B855BA7D5D5CE6628D16B6FA62C8E8AF0457CCB04D91FA4FE919
59BF1C9C622B0A081C7117D58D3C09909BED1AF12812E0522871A4FF883655C0
B0E84A41E9F71C9E08C244D7AC4EB34EFCF0C7BF28B0862C2323A169252F8528
CD4FEFB6EE5022A3A3CD301992FC1FABF4166C51016F16CA5EA96AD9A3E5D9D6
BA31C0A9476F66AF1D437836C34F5E2126D873E618B2D07D91CFB7D0F3CF57CF
C4BD826525FFC63870A82F76C82323FFB3F018C64CBE4A762BF3A81C20DFFFCD
7DA1904B1DBA4E116288712A368C240016F1C089441CAF24C2E4E3425CEA3A8F
2EA0B5B6F44B0D2372E57690D78C5C69C82F71F1A218DE2EED3D3A1D20015C15
67C906D55D75855F6610C59DC7105C54430C7CF6ADBD98DF71363A8F1FFFD2F5
65D9AD12D71AE3190A0CBC5F87387C438C4E3D3A396C16BF8112FE1E56E68FE5
809C04271CFFA420F41357EA4BC569E95D18CE70D904B22C32B8D415BF82AF3E
000A7483FBEA52D43A0FF3BA365C102C8234FBDE2053F49DEED11DD0D8A226E0
11CB0DEE81226F8B35704FD301BE7BB02D1A137F16C43F4A7D3564F928395FA2
1946C10B79EFC20ACC8F5388D6374F8A3B87B733078B34DC0116379D23E191E8
65F904847417F52333674AF482C2A17F009DF2BBE169B4C595CA0AFE47DFDABC
1A05B4EFC9B23660F9BA31A4741E346C45B4085E8902E3DD431691D4B6107352
0953631C9C524AD5294385638E819DF779C6230C4F8D64EF5E99A512A50264CC
AD385D6B9A31812CBFC8D6618AF9765631308F0AA337C41D0618A473A100C4CF
FD7E9F40FA777C53179DA480D1CE46CE4CB1B26ED734F3C7870FD81F64C81E78
FB92A8830BB2FB28B3C6B7A7537ECFDFDF6029D67B52E88D027F5CBC62BBEA74
3B95084F5CD8C45231323139893CE8585C2318C90E9491AE998C7C7CD5D37665
251689D7A9E4445F644E050144645F9D7B157F4320E0B49B0F0418F6D4FCAD51
815E351CEB00D480CC24E74C4DB8457D1411288D32247A8155F056BCB172E97C
5FDDAD5E0717F52D7DC8FFBB9ACB1D3127FAB047B411472A7872B2116EA8F23B
C4EA63F7E0C7402CA89B3509B2721979931BCB7ED93046C9B792930E89149B41
37F3AE7BF7971BE8A2202EEF725FCB3BC01BE7CAF5D6AB6805863F0BDA794B24
4A8584DE4669481DF2DC8B10714E51DA167EBE446F22D469E9DD9EB0091D3694
D8692D87960ED7FAE09BF0B2A0F309FDEEF52D25C571720C9CCFE00B0701371E
6314FF6E7CC5EAB5337793FAEC7C6EBB53D807642E4D3F778166075A028EC150
1C46B85BDCBAFF51FCE9E7665F8F48292CB73F98B770DE1737D0C768EA4C14DA
81F42901EDE0816B7CA60288013371ACB9580580A32D0DFFAEFF6F8C330982B4
313B227F6AD476CC821A030C09D3C6466A366AFB59A5521104301D3B000FACAC
F3F346EBF362E6B6FB760229FC99EE006E648FB920D9BB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /minus put
dup 15 /bullet put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC57036431151EC603C8BCFE359BBD953AD
5F3D9983B036D9202C8FCC4FA88AF960E1E49914EC809263862931DB14B61EEE
6D37A389B488D0B64CFB7DA527AAED80494F79A073D895AA287BB47BD5246090
A76CE91680C1F37E6597E5E218364221B1905B9A039AC299F630788E5BF4FB76
0B085608F3775AFF14697B68F221B3ACCF1F1D22AC1B36CB0097C1D107687140
7ADD3D30FD8024497E249E45A48D4963235ED0352CC111C1FAAE249EC9582BA2
3953C6C05294F5BFA481FDEFE541223EEDDDC45BB0F787D9958700AD538C045F
71EC9ADF07C3DA6F0CDB1BD600B7F4EEF95A88A5A611CBF47A59F8539AF2927E
832CB63AC57101AD75A7E49EE625CFFC9DD948910ACAEE750C58D8B43A233916
FB3E7945B8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 14 /ffi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 58 /colon put
dup 61 /equal put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 81 /Q put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 88 /X put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F966977BD8C8D07FDBD
F4D058444E7D7D91788DEA997CBE0545902E67194B7BA3CD0BF454FCA60B9A20
3E6BB526D2D5B5321EE18DD2A0B15E53BCB8E3E01067B30ED2DD2CB9B06D3122
A737435305D42DE9C6B614926BFD44DF10D14402EBEDFF0B144B1C9BD22D7379
5262FEEAFE31C8A721C2D46AA00C10681BA9970D09F1EA4FA1566B96E221864A
45A24ADAEC63F61C9FD18376D3984449A1F998C318A8FE36D0D5020E18A49625
0F3BB603BA1F3E66FF412F6A32433FF8BD2968D79CE4273AD0E0CDDA5153C2BF
F8A46A2244F9394A49D339F763F5A7411A3C29336B21CCB01723705AF589B078
3763035411FE36AB5D744E81379106890688CB5BC41184548B7FEBA08DE7288E
E6570FEA20C51FACE8E8F824BB61A4A038AB817C47B87391611B77928B2565A9
3B27A573C05D36ED01D8F27CB2C793370FA9B90021B5696280A55F2CB6117B64
293EAE0EA5A243F56FD007773CA35DF71B3D28643C25210CCE25F37A5095D6E5
9CAFD99DD1DB0D7EAD454C13464DF6FF5DD423397E74A1FCD21E5789A95CD7C2
B2DD6A02320C91A24CB9EEAEEBB91C50FD3E2EE0E437297DB82A1C7F8E4A8620
DEE4ED9081E6041BB845849DB8FC14A401B050E7A5C48F8D9BC91948C133510D
001B507F8356AC4375C0170BCE6C57D68E167B32C7F545E2D619C7E635662A16
A5A5A7F509AEAB544BC6118F8437D0FAD3B909E5D9463CA6890A643CEBFAAE4F
0AFCC6BE517AEFCCE566C0B6A9776F25BD62A6353A61B5B3BC8322A9E7A19308
E83F0FA487B7233DC677AD402B32E799CA82D4A2F5947D613D1A64B9FD623BD6
E17473883401BE1169BFDF6694570C0036D413CD408DEDC152A189F6D7F36B1F
D84F13E1422FD0F0DE01B736B37C85B6349ECE5C801385E2CD5DFFDB78B388D2
7A6DEC10E0F69716EF3AAA4F12A3905FAAB46169F0F1E54F8D0E1B9DE564BD76
2B09081FBC8392B8940C458A6314529FD078C2C2870944B1B6A6D3DA686F629A
AE5C705DF890D76AF50D5204AB69BA768310F537D0B4AD435E523A5943A96A40
71D77BACC3197DA883556B916264CFF173266777F46790247DFAF366B982B1E7
9D68BB2B4A5A6DCD8624525AB8EFC3489349286B9BAB7B08FE376F76D4E38DED
2AC8374CF31C90D61484E30EC75707255A4772EDE5F4DB018440C5B5503E1503
F6BBB9A0579A4443B9834AAC2A80D5684C5223D1555D34B9E6432001D2A0E678
218EA4D2F4CC536DA2A040E4C7F530A153076928F9867BDE894E0F8338BF416E
8F4C586628790F25699B84D34E39B8404DCAFABE30342A8C76E4521EF63CBC13
B0037C927F3D36BBE81D1702513FD7EDB66ED530EBEAC3769B5C80968EF2AB97
5F04A6CB59D7D85684405E2DF00AEE29B0218A0BDF7BCBD6AA2377E9166C8FA9
4E06FE9FCA288DC767537CFC73F8D4ADC558DC0863853E05262B5E71463727A8
486261AF465BF334D7B337E3CF5CB04E435263C1CFC443D24E7C126913399FBF
7E25B441FB5DE289E705270223C743B746D0EA5D704CE7A61180AAA5FC55978A
0033E8BED21A263E178F641A72DFB1216EA88B654DFA11035EB426DE0B15393E
0CE25CE65A7DCFB98449D976AC871E938E0E98354A5D68605A6A8192B9057C3A
B9A3092240F50361F2EDAA0B7FA4F5A8A2227C1F212AF129D7E120A0E822B681
0C5C147F1295AD92B79359A710AF4F306153CB652306C45B86327E64C31D2986
C92EE5D620042ACE719261A21F7D2F779BF503EF2005E07ACEBF47D3A335D9D3
14D6BCF064F4C3BBDAC7520B7E73106E1A77093CD58CC92D21B955AE08958F8B
0A67B1F60210F8BD37D677D8123E2CC8C501D0695EACAD7B97A09FFAEFCC7AF9
310ABBB1C584DB50725839B64823A8F7A9DD7370D196BF49AA2825B9E264A982
37707432292EE9A086D5FD11CD2E35894676D189AE17FC1E42807598AF24EF85
36DD88BD727A9391DE67ADE25CBE80194D1EC4645CA5B49234D1588F64F293C3
3FE0A487ECDDB807C5A17C8711A03DD64A449F0258727D1CC6AFB1E32592AEAD
78BCE9D5F28B4A809A7A22CC993D17CBE9074394244F20497BC283B8942ABBCB
328906CF3ABA7B537D57877932259CF66D0ECDF39B89F354DFE5696495C7F1E8
42C1585EF866AD229D3D7954DFFE54D367ACC4B9F1547A275E409A4A4F78CAF2
28E2B2CE347CA33F7384815764722EFA61A80E3BC302B77E752A3BF6CE24DA80
5C6F9EDEAC029F79515B7F24B0D709D67B0EF2543C7B5DBD91B6AE2455267876
3F9DE9F47CD26FB24480B98D5B9BAC7F7B103D129E48F0C1062742966F481BB2
28BDAC01C614C72A0E31A948CFE3042E358DAB3DD5317168158C05B6604D90C2
CB05BC3AB73CEAABEA4EC35BA73D40E54EECB6E115B0F582B91F299AC80B767E
A308C3B36B778E9043E50792D114EB1F7DB50A8E1F632FB083AC38A0D657942D
F11073A821022B319C53F1968412B519649151BFFA0E08E9073B2B36A28CC233
80B4E563C536193AE2710FCE73DD7E984DFAACA02165EEE63B6727A97BC48D53
587AE791540BE70E7FEF57CA733F8C76A39DAC29DC2DE557E4F4620C440DE5A8
6A254D91A4310B8B48BCD1A1D050ABFB56E4C293CD3C1B8D3C45B46D5FB4739C
654D56C7FA4E8823A2B81AD00B30589D8486528DCF9B0DAE9B24F4B87418C821
65251E16E98D8FD7CF26C9E0EB8FBDD3D3FE1E55BA99C6FAB5C7C38EEB15CA6F
9B9679A4FFB7228E26887AA44F5C080AFC2EB9C591BB3CA462C0D4932460B2AB
4CEACE97394D9A5872CA230C85B968AD46EEEDB391F787E28EABE537CC6CC24A
AA0FA6A196CE73A3AF8BA9B3B3B9A0B288CDADA2F38EDFB386D5E19E9F2FFA17
C6A0DF8204886B51A9E9DF67E74A04A52445CE59BE17B90A1758F286F2D957B7
72453BB7161A47CB3BE7AD1E880CC8E387924A702722ABA7F9697D95651F48C0
0AFA273CFD3EF383372CEA4864A5D6CBB1B0F1D927757EED46E493F7B950888E
EB6990A48FDB8694CB8DBE5FAB97AA96FE5259BAA8FC602FA84724667CA819B6
681B473CBE8EE894F6C174F6C77D9EFA8A480EF38D1379730CDDD1A6BE6BA2A9
382D0FA858A534E53FC7DA66017DC51A5BDA10C773B170750C3F1263BDF30E76
3D0C04FC9C8640BBF70C58B0D58324078C21160461F7C8B82A2BEBBF95AC6896
DFD378BEC83B5DA5E5088246CAB7A8AE7AE67DA053CEE4EDBCA83117B446B7D7
771DF8921A59CDA1289B24CE393C94BFD8CCD04D86BCFCB80027E9502DE9FEFC
768C3359DA807B8B02A1B043505EBB4E92653235C9DDFCD502F6B5A791052270
0B352C6A64A0D96CE6BB499C3B3ECADFBE9840CB2F953C7DD63874AE92B80681
DFACD6FB80460D11B0CB7D53DE53CD7A2E275E11D7BED1064D562F1AAD910E56
CB6820D1126683B6A3933959C4B0EF382818406FB79649CFC03A2BFB610AE6D2
C771FBFB8583762FC7B74CDBD2AD3B8EB96ADC554085F3E6DC31C930CF63E646
EA5CA577E4DDF35033BEF148C60C72F768F2090778AFA61DF4C76631107A9FA3
9516C97B5574026453493AC6F584A2795B1A4A29A05EAF8654DF4D8FFF4875A9
0463DA3476CC8CC8E3A8CCC539CC8F5B5447D9BE8630782F0CBB8195B096CCE6
D6AA98516B8BDB541F50B2E83EA4E23C4DA33D5EA1AF968C56607E472890D0D1
4CA5FBA7F691B63B67E8DE742356559D5DC48C32AA50FA0F25EF17B9CCF68165
B956952A21A87086EA7FA9C928C9FA239EE8C9A5FC5DD39CFE6FDC636A50A624
A111D89253C20CBC14FCBF6704690B48E3F2FA96D4896AC79BA23405265E31BA
3FA87595210D65AD02FD714CDA49BF8AE8CC1EBF90BFF74C8C22B7C5467EB128
4AEEFEF6EFCC1F4098533F6C961C141D0150B69F635C2535E911CDB90FA2BAFE
890086F8FBE599CE728D9D55B3F492818AA8EC8A19D1DA8EBED10DECD8F6E935
8DB105B16C447AF3BA88345D29BB920E8BA713CE8B8D2D11B95E7736B4662B9C
6534CC42A52580D5A1BED9F4EF0A1DBEF586C6BA543CE677819F9F29631D5EB0
097EEA1212DEB3BEC57D1790E30BA855A28120BE64536CA6AD445F18FD7B9EB5
32037911FD5AFCFAE8C4DA841E9E29C79B51A858BBBA2688DC24299905EF3EA5
381AABF938B51A26679A90C505DD4B5B56D7C12FA9FCA35C20151CFB9F9E43A4
8E362FBD1555AA3E55B98000F323B781D3B26786112192F732122E82B89B2211
9A43662EAAFFF96A8975F2AE284FFA5D2535BE0A76A1D761C6F12B1C632D0919
AE432D134C1FEAFA5C93428AF87CA1F0CE46D7A8FA5BD38282E03A9D863B198A
8876C5D0AED3B35110BB05A93E5C775AC1EE0ADAD9F4BDEF45F99DAE4782649F
17FE3D09532C20F73E92177FC5D83B8ADC92211DAD975F269B7B5370E650C4D7
C5B50FF427AA3D5D300BC418C0D9E926D0EBB54F544BBBFD54EA750F92AA3B3E
3C57D2E979F67FA3165459AE08CA995B4A868EF50297975C9080D783DE198348
617A8353E52D527395FE5F2A40CF66D59F70F556BE51CE1587C14262D31D7D1D
3EF1546217CB8812281A740A636C6FC1211268B14BDDB3E37A2A89ACC1A44A46
0361DE4F5D1E31C907716D36094E19ECE6BA9CCC1AE9FCBC711B0A0291C6739F
DB3BE31C9939CDC52D05F4215253244EE5D28FE0E21C3D0DA434F3530D811935
64C3C2791F5B0D6A034729E6A8CCAC73914FD3532B27249CB29E39890688DA4D
F36975494803DF0BEB759C10D3208B1BCA1C929B1A9F671486504CA4FF58EEF0
0761FB60711AAC67B1B4D5645AE27C667985FDB70CA4B0BA40AAABA8915B2543
6C95077654C547F32DDAEE223711D3F61443F3995D048FB9A057A37236C5F987
36716F295C44EAD012A52F57A4EC14D61413D45C99BF0CA5D51BAFD92B09DBA5
4C95AEB6D8A99705E74BFFC93C728FBFBB0EAA0E89411333ADD9F8186A8CD87B
FAC527396B5216FB52EAA722C29516D808000094DC046F7BD9C1C5FE61A3FF68
290B0A81D3501F7BE85676C9C0D0C21D1DF53DC6C61A6D17C3106D4101B307A4
94B10524F6370BD3EE6CC5361C87CB83C1423A82AEC9C2A7226B36368FEEFF56
BFCDFFE2E50A61FED348B93ECDC04465F3A3B0E16F63767F2D687ED90E438CB5
C8782DFB7ADC276DFE0D0C2C40528E9069844FC363A6E1FCE1366E83E320004D
CF340B16C698F9AEAF57AC7D10D5E946050CCB3A0AD3B6F3323303AE076D852F
B6748B614A809EEEA7B1679612EF28AA252FAE530B0EA94915F49B7C99D70E63
47B9E252B27C69FDD252728CA5D4E2F114586CEE882F07002FD7E489410A206F
6B0364632F71BF8F9995031621CFEFCA0A2E25E1A49942C8388089A321498D5A
57141612D57FD768BA190D8DE9044E531F05C6249F16FDE02195AD3B06C6FF17
8592D5EFD97240959DF1B2A1D111B37070D93CA9190BC75A57B0E6CCA4F25776
A4F6FAD46B8F1CD5FA7B22F6D6C97A02D8E51493558F548DB11D9D189C4FDE39
3F65004BEAF5D5ABF96701E19511834F29C6264A8FD5262220264090AE1E9A6E
513BA2D2241DD2101BD0E2C9DFC05FF9ABA9F8C55B752E5BDDE38502D03CB442
C95990C28A68858ACF99F8ED01083EB14AE824E4F2721B5DEF18CC9935D1EA98
D2F5D04B560605D3A7980F2A6A89080893270F1698110F395256E3430FBED49A
22626C197B2EC07CAFD5A25C5916F6D526072074585537AD4EDC6440EDB29DF7
D2FDA614EE05202B2CA3AB4BC87731C853A58365E522A2B1805BD37669A251E1
FC0D9E55F3904C08F821C70CE58FCABB970CBE97123621262EACDE94D95B290C
2BBBE3D97AC59240986A834E4674759D4091BCB7C7EF9E03AEFD26ABE179ECE7
86712B1C7D9AAA553D4BFB7F96BF761DDE63C6C1A66C1B76894E82CA09875AD1
48DA35FE1D9B8BE3F629897CCD88E4A44C6EC07C581B52B84E29E69E04283193
DECCF908F9EE0119F97B1A44DB039360E7931027DE01D6B655486FFF8DC72448
7191118F68DE7BD64C1898CC7E52D194C02725210A4031830522B3125396B359
880CB56F621C7170D5DC8AA6FC43CF7C3A2BD38847C4062D1AAE57FCFF06E4BB
E25BF5877EA3F4E3CF9BCDA730A1F0DBF925D9C77EED151799775A3627287931
B4671CB4949D37ABFC2441F29841ADADB68EA2813255B5C16A814304BD434189
FB731D51D35E2B18A74E5D2680B25D873018CC0B1C6E9A70A6C33A02B9B2ECF3
646B982BD71EC318A25771F56277BEB22B19EC52C5F07545669BD6399AB66A91
01D675658895CE3BD9275E4033C30B4DE8C477B0B8340CA19A99F04DB792CE43
3A09E8F05DD18464CF99E591A85A6A6D1EE2F3BE7A12A6E278CE044A3A781C07
8D7493D9612E99300D2B4F2551499C1E2D5C35A7B6189DD28112E20D6277FFE9
00EF958AC27AD0D0C4314CAD5C77A6191F056AF23AE0A5C8DA6FB326CF7F7E27
8D6C2C2C17AB75E224DB1C92EC925BE9E8B6EE42E542F1FC791C01C992A81F72
25C644A4C70404A947D3B701415F18EDF223250CE9CB9935B352090A50518335
B586137217F1D27CBE633E1B56B30B8E112AC64D080DAE9B229399018AAE42B2
13A2879552D43D6C47D963B26C87939ADB1E14CB7BD643E601212017DB51CE19
759BEEE68B781820A8F5DF7BC66CEB8310971795C6BCE7D4D9A3ADFC3D8F4A04
F420BEEC4762A92969DBFEB66E881C071671218F7CFB7CF7E69AB098988AD415
55FC6F9ECBBDCA29F2D367A87249301F1CF6FF4D09A6C4AE317268A6ECA83F15
C02DD5C42CF7825E9FFAD36991564553730D908B38A01FF50268D614DB0D4523
3E9E6818C08A2818F3B1CA28A221A1E3BE87FEFA993D2A1A7969FAC15C550979
1C71815DCBB5CBB399B47A1472CAB72E90BC2D281EBF841E45907596E55DBA1A
8D648D60334AA2B2B54B7D6F36AD312B9A873316F8D3F1F0A4D384139A05B3DB
FD85F46FA7974191F20909F7A29FB5B53ED8296BF534CD2791607D3BBFE0C34B
C0ECEF19A23F996906154282F548D05633A308012E8E3D177D2891C2B0C82E60
AD68D8B3C2EF7AFA2578515E8563229E75BA305717E84CC0B307BEDA0255295F
3A5FC43BDDF712784B5875F70D3A9C487E4F53813912C141F91332D816A6D007
4852842C22F92BA19FF085004050E7E77B4DB7CDDC9F5DCBA0F90090EE7A7620
25568FA8FA6B2CC7ADFAF05F80B6C72D15074E408D3A9BF7442156AC80FE695F
693ED34F6BA27AFD429A7445F54EAD0E40CAF212BE1B8D0BB76B01229925003B
DCB55C305224DD3C7D26CC0FF1050D2436977ABC44A76CD00554C9D9CCE0CA8C
27C23745633F29D74642FE964A5B50CD7005C0D1F0D17E7366F8A06DEEC04C5A
6239DD799B991CC55EA354A2A49BCC7CBDAC0B666B5FBAAD33FF7BA21BB0E180
9E8F5F8CAAB909A615858CF30A0DC00EC0A5F7D4461DAED5C4FF81748A029AB9
7335360B88B0CFF754370111DE4271271CA12FC1D32E8BA8F22E330CCD6894CC
D4A1DDB8E6B675CC5ABEAC97E4B0640A73F4A1112188A934D4F234E5FD94C9E9
C6184D5923674D45895AEB91EE05E3D28A58344761FABFDE250D004D67A010DC
E75E476AA30B9CCA1DCC0D0AF72F21E06F23854388E2ED68F6602F3BAAB4E105
5B994F5D4AC7FBE72D039ACFE7D37999037E3C5B044E81DFFC771547C3E55CFC
EA6D98F04078AA8EC27D9A5C79AF92CCDDDED90FA3C9CAF288ABFE25980A84CA
39D922A3CD3C3AADFE97649A1C2B468A5252FAD8A420BAE78B28941471D566C4
F41E91C854DC09C33E3EDF972CCA500D1A6F475AB1210FC897F0DD4FBE81C15D
B19BCCA9F146D8BBE699766E32B92527F3CB42093BB9D902EC345AB5912F1F57
FC78E73494FFC83B69383A9FD0021F949E036018B37D6FA5684BC6E68AE150B2
FC65093E76EB46BF9CF921945F130118BC38D05E8969B7DCA147E7AA1A2969B3
1301D870B4037653C88CD240FBB404851D72D981DC04B952EFA8AFDC16B3C1AD
1D9B587841AAABDF29F5CFD64668054911B6DE75581AC120A00D5CA613647B6C
C356B3D75C6B2145151D483983A9F8025598D2AB3007521701DC7740ACBE88BA
EE093DC1E86CC9D3F0ED9B77B64792C3E49E128D98D42D92945084DCBA4C7F9C
5E8BC8CA3EE395E2620A2DAC57FA787A524CACD553ADEA1F4A5D73B9DA64F565
761DA9C8F36F2FA5BD8CFFF637520AE838F4E1B40F14271E2A24CD1A5705859E
121172B8FA87EE099514B3518BC2BA03017BE46229F84524B58C99E2C47474F1
9F23B733B534A9609DA213441D4E6D0AD78111D4DE4C13E956DCBDAEE8151E53
6E51421D3B0D9F8C9A47E6E6FB71A0C14EF6C555AE024078C8AA598579465B25
3A06A6C5D7A559F7DA0F493461F5ED012192445ECDE4AFEEE8A133DCF5E8A50C
F173F861F4F569C63358B97A4780C9A96B511A3F3078B53A729BC6532C6FA962
A2B1FA0D1B4D63A18FF1281B751F88C4CA6E319018DF9F5C9B43804F88C906A5
75024EECF2341ED709A14F940836D9F374A0D159C2AB728D3E92EE02AA80D539
3675157D3F84423E5EE1395D4980B214286DBB60D930D6A5AE42D9371D398909
FF99F963FDC5DAFD6C9F79A09686AEF5C6C7199DB00A9FBE46CE4DA8DBD3C4EB
6AA24328D427ECD80A7407790E684C10537613943BBF5990CCAFCCC7A15484EA
AA5C1D6EC9DEE0AAF236F485C19C554A9EA80C3CFECBECF91369CD0FC5C893B4
B518EDFF52322328A1634C88B40539351B3F0F41F714E28B6C46A056A75C02B4
EB9FC9044AF5D872184847172B7FF59617ACB6BCEEF705DE65B89516A8B2C6EE
DF3BC0AC9B3043AE70059CC38BFA330F810CB4F86BFB908347F591C46EF54662
2863A9BA9DD15977461C08219AA3B6DFFC000AD1A47C766F7CEE697AD6C02BB0
DA3D890601BCFD39C173718B46CDBBAE90A2A286B6FDE820FA6E20BBBC646DDE
761412C8137E8F7D065DFF2213114E8C66863C522B3E643E61741CE9D867D3B9
1751C74FCC12C8721AF95B4814C2AE15559C321E8F5AED30FDE7CB42F35B9086
B84BD06E0B9E6E9461D5C8E10FEF315504450958CBAA06F799B0776A7AD758D8
035F8BE9BCD48DE17A85AA2D9694B4FA1CF87AD206BD872631880E22C212A8B6
1293CAB1747D4E7210FB15A0DCD85D0FE9B73F9C0C3F78557C5F1F0A02B15F64
335678C03522A6CB11B03C8BB3427B6EAB14506973EF99DC8605E79A56E51A6A
F96D95189CE14A4D874A723D4846032E1C61FBC7F62FB68644B6F87FA6E52D72
1E93E372C29233EF8430C3599FACB14131752F2842E0590B762F5FEF452CCCB8
0F28D328F001C93B886AC06BD70CB638FC48142BA68CBED674E65DBF4BC5D0EC
792EFA5E5E95289920EEE6FC5C0EF3F4B9ED5D232A8A5DA038E72AF772B6EAC8
82E47C75D26C189EF686BB21406FA3852BE9E934F7EF616148E3CAA72AFCD23C
F8185C82CEE24A39CC8F24DA28C866075AD508EACB341E44C5F8C5D5FDBD79B5
19A1B1417482950DA4159ADE094C4BB6D4201D4505B1F177BDF5C8BFD108A05C
4968E7C4FCDFC10888B3FBD83073E964B85EF00B81EAD78870ED97890B98A157
DA5AD40E981BBB6B7920508F5B6DA8F651BA9DB47C08B9910D9C993C427DB341
4B1D0826D1631CE04BFC15473AE0AB2B4EC0FE9E9E63323A66D827A0C206A8D5
C67B52C06A2DE58AA120D14D74E2D923CEA925C6B518FCA70C8BB12D07D122FB
B98FFE0200007AAD94D41730349F960082A89112B3FE7901B0E5FCE002F57600
481E1C8940EC5E0298CBD0C9E4979DFB0549B260D0BCCE6340912B15FA7D1F62
1D2FFA36181A03538823FA31DE03D4EA782A6A34A557C651E05EE6730542DC43
B6F37BECFBB62E43B7CEEA2B6F5C51122BC3147925126E5E832D199C12249973
11597E6517DC9DE9401F4414ABDCAB97FF39E5A18A372350349486ED5E90922C
91BED0FA9D550F3EFC20C5616FF8B3AF03076D86879BCDC01A5CFD6C83D3500B
28C42E361828195CE788B3B206BDB45AFBF560DB7EF81921CB3AA6498559B5D8
5057B0B4240B52A36BEC3B6B02FEBA42D5357693C93F24BA0784582586ECD371
4648AA499043EE6C95328114CAE43370E07828E9F997CDA8A44FD93DC19BB6F8
883DC9B0E6C1BCAFA14C0BC6A9F74C9E34A1E04A6A05EE98C90EEF8739057FEA
845C656AE44224991B5E46F0444076BC4F9722CFCAAC8B7EE0A706F621E7F0C7
F43323D433B7C5A41DA93825DE649EA78A8C0EEE009DCE77608C5C132364F34B
3841A253FDA8981D9DF64327D17120ED89B6466492528ABCD1501021F13DB092
42314A0C7598F14E00CC48EAC6A97D17D29B7E4CF7BD7C15D3F444C2692D072A
97244B6957C88DD5A670EE6C8BE70E3A8EAA89860B847D32AAB5FD4F29280A3F
AD53CC1FA9591F471CDAA983357393CBF4EBACEB1F399B1A3A3BE4F69CDE3F9F
C0CE8D9E151FC3CBBA3DF76123CF03C17B43374D7FC39D1B48B0C6FD7E91C080
51B3F3DDFDC4AF125ADED191666E100A78EFA194FDCAE4EDFE58A1AB38A20408
13E3A1DF6BBC5981EC73E690307FE70544B5036D012BA7FE10DEBF4FE7C507E1
7F5DC316BC8C93667CC607DF240552FB7EE3EFBDCC1CFA2CE8C31F35306A3C9C
9E7D1632EDE1365A5D9E48F2AB5F82997D375E0EF7110C915BBE86BB0BACC59F
7A949BC74C383A1386400583BB134BD55A841F16C33DE8D9EAE09A8D1DC9EF50
38FE8E8A84CADECB8719119580C753D1AC636E0947A23C3EE924C4C66DDE46E5
63B4C8F98C0A748CCA9E20392F5CA87D28EA50B816CD7CD424D69061BF7ED546
4134AFBEAF8F8C7E1502AC2E1A262F431CE325008D5B19E528A451F8C5E85C09
29758A1013C732D65C660CD9542F634B01BD68E11D79A7D6DA9F94F2226F6507
081888BA7911A4F3B79B9E104F7F87791CA80A2B72AFE21304A2EC3AB96CF62A
04749404F3FDC65AC889DACB95D203594B79FB7F31ACA1F506101D4FD6D59E52
D78F91A7207DBDC75FDA1B4E1EB0CBF08B044969A158EF1E37EBD4AC4EA6EC87
0F8D34938507C8F12EEB9CEFFEEA3540102935AD0C71817333EB716C239B9278
9599676D3D163447083AF8E1192D9D6E721247A5385F41A66FE0DA8DD2284DE6
90BE6592BBB37B22EB34866974F27AA777F4679B29627D269381E58B6B866313
258CF4F9B07AEA255958A91206868EAF9B135F6E85C434CABAF6FF274B0FA3B3
823EC04ED5F8EB74B184CBCB09434DE95807647BDFF17F1499583E11890FF7C0
912B7B16A1A627E807961C2DC762282D52EA60B0ECEF2A4A3CA8A7AFACD1E5DC
1910876681C4794F6D3E332038796ED2C19392DD3DE33FFAC65C8D32E70ABE7C
23256422C49507C283894D99D7A1F4F9F59B5222B504C66D495C1C83C9B8779B
DBE9264DB672DBFAA4D7F4374E5F745700E0E07D63240AA9DB9EC9577CDBB30A
F1A7DD16C3DE8E3AE56F02C7EF36615C38FBB0B97FEA68D50A0880E83D8C6E3E
FF6FFFF9D7D3C46CCFE1206E570F39FB150626D38431331992411B8F21271F83
ADFE8A5E4F055C7602F20B8737E72423FBB2C6093CEF9C27A170AFD0C005CD4E
4253F0BEF2A8C972B3F822DEEB9D4EB8F6C12B4E6D3C7BBF833754CAA1B6B8FB
3465ABBE5BC4155842EEA74A34CB542EBFFC621BAB8F3B123304CCDA5431574D
F6A9B930986D45AD1A40B664B79C656F9E15BF294072132E84CEF4244FDB6295
F9F79E740B9183AC6067E97AD5AE6D9A512AA252F13F14DC8BAD14B36592CFB0
8D2332C9A5E84019FFF8D37554B2E30464B82980E467D3F37892528FF4E6DF35
542C72EA2B815023EC19D9F5EB96FD58E1C059015FAB9A39E48A5B1B109D5AF7
61655EC2B517EDE673DD81F1319FFD6BD4BEFCD8FFD17E311DFB4A15AC3BF041
3B15BA7D3F1AF7C76E16B26967ECE8C1F3087EA9DDB11CF8D0E1A44150E19E20
4AA26085A5C87917FF5AE9387E5B6E3BB826BA68E9CB1A9CE64633DAD2D0CF85
49E8E0724D8FD4E88A6A79489BC5FFF83279193CAD5B67C2692BD292885539DE
850CAC720132BA8CB5DC892810E6CEE49EE9F63FCA92E026D63F36C29E70A2E6
7C416FF66CBA4ED1E248CDD91AB52E681DE2C9344C2AD2BC21FCF47EB5935500
6AB3B417C5E2027F9FD349B85251D9D339EBB1FE4D0B7B49B87A3005329CDB26
BDA32CBF648EB9866C929C41AA899C07181E3258AFA5DEB8ED2768BC7418C205
1ABFDE2C03CB5FC44FEBB60251D525BDFA53E7DE91E49A6F079892831913E57B
720C1BE20EBA73B03F7BB0330AD392C54F0A244FC0267C163D4340824EF7F2F6
677DCA5F1D8957BFDE0D9CD2283144F3EF91096D6C0289C19B25E67EE8F3F3E4
95A4B1BB39F682BD892B029C1F2EEE0748E1FE1E3D48AAEC6E1422F393EABB06
1C13895AB1F4D564129D3ECCA2E5FD76FA03B76C690CB92F8BFDE2F0324E8DD4
CC4F3E65BAF70008C6639F50DDCC9F22A201105E1B3020B6FCFEA0CCE7FFDA36
18A8C40231CB2439CBC44A8E7A60991D3FC73B494F605ADA4CA9C13500F6ED75
B51A4893EF85189671A695C452E59A0B0A01070D62D5CAD7FB97B247E33085F1
751C9EA19BFA94A9D2D502BF9B7230E81EB8693414378A7DC95427FBF269DAA9
3DE88F0802517BC0E87126C89EA7D09C7A83C0EB062E63606E4956B97A701478
DB4132450E77BB80146EEA058530AA9353D4C21B6DC8A2C761D6C821FB541098
554B2D8F74C5B180D3F032C03F86A6DF5CD53A3D430B59B3FC75BDF586C36640
85DEBD78162AABBE00DA0CD29ADD625671D94F903DE55A9C6D78A6BBE5117EC3
82AB11918CC4F81D9FF2A767665F20001E84B5FD59FBEDC5B5D1BF9231973214
6DE67E4E0BA58691EB10B21E7A86244DE3F304B287516E582E3D22565056D0A1
FB7D781153285C5011E1F66FA0E474DF0E6A4568305AC01F1B96BADF41188539
EBACA55B46528B0D5EA9CA0132A54D8FB93AC07254EC337CA9F8B9ED74179CFE
40A5BD9E3F2C99C8DB78BF7BE9F02C8D2454977641E7B1D5F2FDD4CF29183DCD
6FEDD549D6E638316858092C12662E56D136B769DB5E065FEB4FB34FBFE6CA6A
547CF63DD26F9DAD5B2F7AD0679A8683E260AC57D2AFC4904D7A38C9285E6A7F
B167A3CCD53C055F9EC1845A631CDA89D31636DDD4833E62F9E5FA6318C440F4
622B4D739A114606A22F63185F3F3CB00A280DC0E2E82D68596B049261EE2587
F6A1D9DF3FF48B9368E8278B62D795F5095C209610C7CA0490940EA3D2BAEAB4
AD0A253A4D3FAE8DE92FADCB19019886B1F94C20D4F2A2E977B92423D304DD45
A87EB264975400301D51EF6F544ACC5741D7798950C2C93A8B6611D8DF9EB54B
177FBBF1FA7DBD7A376CC51DBDD1BE461522545AA98149046AC01CE809F5BD90
5AC3C4DFA1BFD77D15955847442DD1861B68CC82196AE44E2F2DB78ECE985346
5FAD5955E0E89D66D7BC3F67C7E4B48E1211E8C7566E1D1F72D068B99450D377
AD8502E4322B44EB3120476C21A2E7F547F035EB166AC8581F1388C1F1F253B9
378A47C7614BC204ACFF358C08936E2DD002F789E426BDB15B872C27368D5E45
8603100B76897F93BC5B9DCB4E7A5034437C9EB878B5EC126C3834E859A72D8F
392FD8A9F3E059AF46CAF133BC3EC32C126539DA1F1839F29A030DD6490E4B4D
3CEC1731BEA684A523F49015307A0132CEC5783CA1C1B620DF87452D87936F9D
7B7143FD14E4925B3722CC5D1DA5A7FB367D9B77D456E911F90B80870831230C
DE954C4B9ED2A8F06943912EA80B6E75076B163928C332AE84C7CB234C0D9837
A76013E4E0CDAE47D5A22F9A79CB0B4419F7D3F6C3489A62104A285A13DCD1C9
350E463158E48F7454AFBA04144E000AF11AF58DDD8359044B23B3D5DD4EBDD0
262ED0A2E84FD405191D0824AA225ADA3DF015D4E7F3C6028325988A56485346
A296E7236510993C976E9A13AD011396A42C34D50BB812F8B34F0445B6397B40
3EB5388801400EF727601ECA54B27F919C006208C062D423D83FE25DB38F87F6
694075B6BEFF630011C441CC53EC8BD82BB27FB279FD0347FE456EA9C6E89336
1EA8B33416674BD0EF79C4CE41ED4EA4269B1723E19AE45217C031EEAE45680D
93913CF5C73B61800784DDE9BF316F7AA3B8E8EEEF591FEFFAB6F69503D59099
525BE622BA28AD611BA15B2BA63443D01ADC3A6AE69AB6E5039BE5ECA34A706E
838FD3C852A587D4A5E54709141BA2A6F1CDC2FAC10B037B99FEE51D40F1E696
5E2E8BE0897FD956366E8EB75CA21EFDDB01A0A9A49E466AB5CCE18B3CF1760D
4F9A8D387951C3396C8FD925DCB7A2FCF2F597D87FB2EF222D4A6D6D63E2FEAB
E597058C4ADD03DEF2F2E76568CC0E7D78F1979166DB9AAC71E353279B7CCDDF
85B0B97D8AEE170DB3F5B660F4C5E31D286172D1C470D82657E5F3B938FA6D10
D4C8FC34FAF0F0C519A448103BFF47E5D8C87F6EC3C0A49FBF4E0292E800F128
F2A48281603E863073415BA01D894CEC0EA6042F28E33A36B6CF6D87FDD7C797
57F8D8BB7EA2A5348B49BFBDDBF03F0FB272A522C77388847CABEC7222C706C2
1AB7FFDFE4754B99FD43235557EEA288A24A37E9B606B3587610F6596B7845F5
50DF4658B83EF9B4440CEA78CB2B00B5E10010BFA425055E93163DDC0C58A5B5
AD816CC9FDB8EDA1D1659F69F23EEB5B13A37A09F4732E2065EC3FFEA8479C1F
B02B11F819B1E220C675757ADF9DB5E199FCFD05DBCC10842970A8DAED0A55DF
4AF2D1362FE094FFD60F40D187BDA95AD34BC60946AB94450AB116E51A91821A
7050CC6B2C84103D702E73CF098708CEC7FBA95276826726E695469DF9057F73
EF73E570DC2459218BE622E5913152A7EF7430FE4BA84B6F4ADF6FB403AE8FC9
CCA3BE5CD6923F2B670C19DE455B056D3BA192BD278CA9AD4D83909580F035C0
CAD429536D6F54DA88263209EB6C9B75268A41D56BC719ADFEE87CBD15851DFF
2BC9933BFDFD734C3900AC7800F66FBEABBF7A6BEBA27E8A7AFE1A69990CC00D
195A12E2D2BCDBD116F281386988DF4A4EEC00FDD3C4893292A93C9B79EC72B0
DC0FAEF3E2FB78FEB25DC4DBB92B0C0CCA9A381C5A671B12E802BA619AA5E424
D8D10BD0E8864075C02CB3F601D27ACF98ADF1D5998C94D791AB6D9524D3E40C
BAA428E51CBAEB7831C6100392F12A1E18FC2DC2F6E18D3AADDE406364122188
B68375D4F89AAACCF1C09ED16AA2F1687C18E72F0E51749BCD82C90A9C38766F
7B88939EA5C3AC57308FA3559E971C31DAE33B405FE191E1F11B801CC587BAD8
44102AC0334617D058F812E27488124A3294EAB21CFDCD517A0C498F04FDBC99
10EC3C7F01B8702614C300B8C89B99C159D9B31CBD4AAFB4B643A762D008682C
CA047684DA5142B1DD0FD15B479500793EA1B90AD28B37217FB82F1EDF9D518D
928FDFDEAA9961D0F540C07D1D1B9D63FC905551D1FB10221F0436724EAAE958
2E0DC75C53C0A94258C77CB4CEE21D65C1763E9FD54FB0ED117D60D15607F564
8088A226C76ECF3BC12583775BABD36C1258CD05F5AF46363014BDE1BCA77E3B
2A4C1D1E54365EDE0F0E1CBB9FA4AD03CF403B2548908406A9A6EE525155CEA9
F9A71FF3F42D05D8F9F557E604066644C78844203D29FD22072C90AD7923F736
0BEE593F015578721926DBC12198A4770C36F42BCC40795DEE158C62E33CB40A
E9099504D6795DA4826D07F6B187F16980365E2AD6DD6215A2078BF3097F4634
4B3A205E87BFE67D2B1BF09FF2CF0E6C4931BA36F86EACEDD2AA4E1546B256AC
2ABB8ECFB298394DFE36408FA89322EF8892C5BA8F5F4C45FCD2F7C5E47D051E
51B8DA35598177076B7FD2AA8AC871DE022AC2C2241ED178A250847F27C9E409
9DC86DE9C7ADEB7CC9F9F2061D723C81D612A451E9AAC078A96B90844BE833A7
5BB2768F55B9CF696A1622E60F310E7D35AD657952EA9B24DD1520CF8A72BEF3
CEE6EE70727F5F0FD987CDD3D014913E55896062C46A26B48E78EF0DC97C8F4B
08DFFFBCCCB02FC995E5E9F52D2A7BF2B94F00174470D6AD3E0F62D72A1BB07B
B2D4B0E6D150F64C3786D196F8B8C8A50B4844B0042D89CF74AF8891BE576883
2278A5E9946CBD1A4F606988B747173DE7867B07B9E70BBDA9B5C0CB3602CC48
708ED0155E6FCA3FED2C2F7E582504FC069811B009BF9D87B8A75D1E41C2C441
255174AD256B0604E612116D611ECC2A9391BE7E31A18845AE8696D3F937B091
3DD27C064A6075D391A66440F17C32C12914E091447CA1FC5504D4B6FAC4DF9B
A922EFB601041B2F19B49D20FC47F1BA156B345DE0D8CF04C78F14BD04CA4F8C
E1D09CA68519F8EAC3E630426F25D706A97C844EA3D24C157CC1A28A8E798873
0D6A9A3C50319E7222FCFE0DB787AA4741B6058ABFBF8CFC29E3759BE23DF982
CB9D74032DAE35C51DE634ACE85F6C134AC736C009EE64CC05F37F6A08ED2C06
8DC289D749F9941D7BEEBE101E9BD1BBF5C5C0FA6528190F0F9346B49A25D3C1
1FA2242A8A9DFDA330D38A38C20C00ED1DB46B4064E6AF7E00184D3D467CF4B7
A0811BD0D6C8FFAE0374DC922FFF5AE2FBC52636641593A3F1C928FB8592199F
C0ACB73D4DF82AEAC499B90E6A6016A36715C9911E215CE82E8661D57CE42812
A9C2451470362C89964E19B06E2FFCAC73FC331B5F2D6F9718949D943125B0CF
5913B4CFFD336C65E3B014B444E51972D251064466D404F6005F7E995A8E294E
B776C1748547A965E0B5F95054E06631F9C57B863407197B12719BF22EF5D841
9536DBF9CABE7B34BF17894B7947EC8264003EB8C7E8DCB8323C8707A778A094
BDD524A5F6D8D1D2B92E7C9FD2A2B75D1079B5A26EA844C9E3CBABF3BF284508
A737F267B264FFF78B23573607C6F0EECCF9D417FAFCFA3C8E78F52C6043806B
F604B9391CC20161F019BE19558C021A6444C5BBC0502696A1404BEC691CFA03
E9C53F7D6072085C5FC16B0B4673EA98FB143A5C0A2F21664D7571C237201917
813C7261D33579D60C2C238DDC390F8CB8B46706042909042EC21F6BD64A2339
57998D9B1EC7EECDB4E1D39C229C4FBFF3A7145E12D250E424D370F2D3768024
3A7A618FDA6C7A2C0F4A218FCCEC536BE9482794E7FD3B2212E8BD2343A47F53
CC7EBD48AAC8614443597C4F06526B35D88DD0AF3B1577C210C8AE7BC95C20EE
44AD5C530BEFA1CD91D8919CDBB4E20E949AF21EE4F4D92912C316520EDCC408
2AC171D6366509A8DDD9843E73147DBF3FD784FE1E056AD684DE6CDA6D1A708C
BE0AE82B1599C4EDF28885CD783ED24371BDE7C9F12540C2869007BD9BFA1FBA
E370E1F493FE053F628F82B97F4281AE01825C30F15D4676E417566232429597
9A9D0DEFAC8B8CB89FDA467352DCED5344E1661F678F70E492276903CAF40FD2
48CE1B1691191DA1844D768EA9F7E8DB31019F26A81B27D361D7874E5BB320D0
E169371AA4691A4F9FFDD1D01322A7C9F268D8B0E1E97B2AB64DCC429FD2FC02
62B7E423129EC579B76230E7C2AAA51C64DCC5932081AC2B7D0309B9779694B1
559A3AD983ED97E2525E1D3D6E8584541CEE5D24C188BAB00F8E764FAFF47DC9
C172FA888CCFD925799E65BBEF15763E11D5FF23B5CBD761CD66D2CC691706C0
10A209B4CA2193ED7D028368592DA7AD3D0FCF4462A1C4C312AB6D3F3E6997A1
48BD84E56D57B545805A6FF079112A62DD98D7935EB69EBC1B1DCBA86DF42D15
D65B07071589B1D9B6FDFEF44ED502146A43B3AEF5543646509D5D2EA1F7A04A
935BFAB20DC552514DC2888DBF2DC8451A526D5E006FB9EEC0A08E3D4790A72D
69EB395781C6D4F11B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 72 /H put
dup 75 /K put
dup 76 /L put
dup 81 /Q put
dup 86 /V put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D5C30D20FD1358CBB61AA05EF45403C3B8019EC
6350ECB240F696BCDDD1A9F0465CB43B824457852CEE14CCD14FA21C2C5A8871
CB6408B49543B723973CF311DB5552D86419B3564CE7B91F8300B5BF8D4BE409
ACC25EAA4EA92318EF052D0394C18D3AABA554C33B106AD7AE02AA5AA6382253
CB2BA6EBCCFBC26B35BC9AD9F520066CB6F41C2E2C7E30CB250783923C87880B
F338FB71E7ABE6EFEB2A6172CBB0FB50132566DA2A0271FAFC82D1B92301C766
42B8BDAE01E31EC3E06D4C2F10A49D15ADBD2E729F41BA88727A808696251645
CD26F58D77125D7021F5BCB4A613D04E1A9C5C782A80AD600FF61DA763D3EFE7
F6EA9377730189C0D43455112CFAE733A147FB044CEBD17FF703DEFCE8B86C78
9C052F9DAB5A9F4C12FC1CC6271EB7B2024D2F7AE7C99D81B3C536A332100E1A
64DCFCD48D1F3A14FC6F3DA75A28E21CC55F60101378CC2850D82D33BADEAD48
2F2E48CFEAEF6AB7D441DBDBB9F02332DB0C7C362A0F10B55067FDAD8F61DBFE
68DDB61B2D4B9DB8C4A56AC51841B3F18E67BE1D03773DAAC960C2DCD2055726
007CD25BD5BAD9BD809C3AD0F81A6BDBF0E73FB3C4CCD8482EB585D547669146
373C75CCF20F614C75C5073CD7F2EDB4BC5837513F9543B023BD957C4C8051FE
ACE2AE27DD3DCAB49534A03B80B689FC29C5D73743FA71B3AC9FD111AB7DCCC2
F21F1D5B046478BF725FB229FAC5B047E4B98C7EC16450E06B2838255B027E0B
673BF49CDC8A9D7BB1912B73934717DA01938637D1DDF0F7255E15FCA67A6456
7C9DA0FA7BB52BA8EAFC0F419DF2DA80D00A09DD03D988F2A4AA9EF432736C20
22FCDE304C5A1C3582DE486B6EE1581EB4C6CE6DA5448199D22C28E6C3A0F3B6
AEE9364475D40A38ED45BA5DD0C1451610AA956E22BCD5AB67777E28EEF2F78D
6635B3A7D6C45C42CB90C6BC033E1485E51D0AAD46E78E08669828B153CD1B97
676042C995A2BE18799C71DB7C93444DD0694174F7F14A14BDF4A7DBC3EFBACF
7459BED79B9B3EACA8B280556BF48C5C5AB20B1BDEF8ABD0367B3CC90EB53E61
C949936EBD78D3026F1988C9C9DEDD8E07A1BA597F75759C244DA9FE285DDDF7
C5FDD0852760E49409DAAD378B85D94063947DF40A825FD1F9F4DDE88FCF29AD
A3198D568B017CE66EE6ACE4EF1706CD0FCE4BF4D86875ACA5FBF20E624B1C45
6866F11E759D843A14AA163FB39D4BFB02206919D7EF7E0247F004BC73970F1D
7169080C488DD9E5A9F4AC7D8C9DA2C55B1C0263BEEDC824CCA83EE20291FB6B
0BE3310698551AFF3A8BEAD488610CAABCE22371180BE1206C0E0E8884A1E284
ED7E34DCCD70CCD61739B89BA6DB21AEC460E3DC2EBEFFD4F59B04597BB2A7AC
E2566CF2C6A629751B8C48CD66A65DF1D0996925989EC3AF6168D29616665541
FABE9D655EE92AEABDC92485757717C7D73B2397243ACDBF9129A503EBD92064
9DC96FA984B0F7C0EFA1C55E4C673D9EC76729D53BFC7D82E18F95824EE4939E
E4051715B4B277DA89F5B40F53A27CAD4252A50B24CC2438266D8A0381BD4CC6
6887014D13589E20DD40DC73039FCC9D138052BADE0FE10D038D0292C1C34473
45B134068E9EDCA812991F6B8783B64ED3B014C2C050CDF3C1528C889E42B759
7C8AEF88C7B035BEDF6FEE95A5D7C0A140CF0614F22E7675E03184171D8AA027
6A0FAB1291EA1407150EF46DCA7E78A827ACAA83A83DD3C29AD9CDDD7012F202
D8323C348CFB495A681F0981B9228D4568A99F390A04E85FA217797075913BD6
DB3F9FF15277BE74D643EF0BB291CE5107CD648B872583D746055F6A93D140CF
3FF076FA53848312DE2C80A2FBAEC5EAA15B25E76C253C6601ED626079774B26
9FF81444B02D9BB900EA46304F34DECD522B9B73BB0FDECDAEE48CC9DF500AE9
C5559EC22174506C8E56CDF6DB3D6CEF24D8C2878C3D1A08A05B9F29701EC49E
EAECF4246FF0E5E998C88B594C8CAF466CDB64DDE6A5B605E31E07CFC9BA9D2A
6B05E1B032BE36C1EF95036869FA90070B652D40D6464D97E5546E8DB39B828C
61D714FA7AD3B21047D0931AF336051F93B20AE3050B3200C8B0280A9CD6CA61
C39FB46BB036BE4F4D988C7D4BD9C8CD7574B52663F36885A229C37B515963CB
41E489418C3E2269CD7673BF52C88DDB1A37208A9CA857AAF27B05C503456643
48344338B974449AAE8C314FB0B43E2CAFE777423563EFE2B32279E14C50C986
E5214104E4EE0C67240D4352E4E4E47E1C2481932FC0D946514A8AC9C6E0DEA9
4999F42475E710A8522D31472FEC9C05F29C7E1A0E7609B1FB73D8C62728E2D8
1CE341E8A083D1D14F4C00B2A5D48015B262B3FAECEBCBBB5A761D5B0CA1EB47
3E19B79485A9C482D96BA50142B259247E8D4F3E92FCA499056C54BA0C6C7164
EC1D1F8892AE63CD506690B8DB4D8E9E94ADCEB781C86FB7E5138228847E8C20
323F1BB14E23BF82F663F4DBAA8FEA4B38E5937F24B7C314A81D2E407E03DD24
353907D0898540D483E7D47D47DFFD2CE3E01F8F31CFDDB0CCCD49D580D14211
F6DC0E52A1B9DE0EF77A9DB708EEEB4C4B72777FC07DF049FC624D2EDEAB6F2C
46FF20F07709DEC48DAFDB252EFC75DCC9E74B8302A30861A371151ADB974ABB
93E8EAD94591A47766E9555429F7A3D96044EF19F514F60F85F4F665F42DA7DD
EBF15C34B391E4C2970C796E4C126B087CFAE80CA0AF61EA6FB3A290C7012AFF
68968B1B0FD6CD6E2C66F90474986BF814FEF05EE2223C70E787EFD84A65E923
56CB0B012AA96E06D64B8415D86C2ECCCF93FE6A6F9A8A506223E5CA7159D0BF
2DD6FFB92B3CEC3025E601B76051FFE08A3CAA6A9A7747AFC33A40A8991F6953
AB4FB5346B5E7304B0E36D5768897F204F70F3DAFDC7D97D18AE428A93AFA0EC
37CC0552BDBCF9A79C9A9BEB1E4C486CC1B5B3B6B76374A59F211E35FDA97586
6CA8AABE32824CCA39305D3D1BEE6ABF29E70EB20FF92530BB05C1EFF60601A6
C3F3AB336CA424AF99A3ACB826880F2C1D2E5D99081AD09EC319877059131519
DCB16136E7FFE881C8444FE87EA7FA33B1F56828675573BA96D090AAE4D9511E
E8F18076AFB7829D9858AED17879446B27B84520CA5B5CBF6DFF11FEFF6F8E48
FD7D09B9A7A71FCD5E755ECED9F2C215E201815669559286EDEA439A51FA4FA4
1B59FA3FED4BF9F754BB5322AE69EC9BCA5BD9467197B93AECC0B6B50CF6D860
5401A18470A9153ED92068FECC631707E3BAE72010D03FE578193405E8DF5C3C
CA043D8AB26648E3783BA317056044EE810125A14CE7638910D6A090B86DD4A3
6CCF1E0553CF07914F24A5F7FDD8EC9A4C4A8A5CBE99D5A799117300954178BA
36036C83632223967003D6EE167AA8228685EE0BC36939D64136D5EB46E0C42E
86B91F07CF3A84F9F2D526FAE37CA02FEEC6C960B42B61F93574AD2387A38BAA
2D772C216597E4196B209D93D7B214A00B74105FABB86233D61AFC9B5F3BBEC9
00F5868A4F16CEF52FE39908B99638E4FF9C4EFA05D5217AC8013AF081D0A6E5
3E51F0EA41A125AA0FC427A7DEFEF94DD99641611C74C8B94DB19347D45354D8
5FF61073514832C081CD8DE720E2F78C8E96BC24A0441A52D69BAF08CFC2A0D6
6807C6EDE17F7A3A4CE0D6A3FBA50CEBA052B844F1554DD9F39308A48B0B04F6
397F28AE11C0B9DD64E369B566B519FBA032AEAA13F52DDDE50E04825514E0BD
14D09DDD8E6A390FEEEBBEEEFDBCF595C152EE6E8C1B95BB2E2762E4649A2B30
2A2CB6E7FCE6ED226253812AC6FF8C08C34F3CF92ED7283E58440C43FCA80A49
41C6128EC98C9C6C1975DFD474C523764CBD486DDCAACFC39EABE4E7B4536CED
BCFF67A19C27B13786FDE88EF7AC5C7D3208E626A9C5314D6CF5DAE99509753E
374D34C4E0391B1DB0776E3BC396D0F42D8D1C39ED7E2B00B8FCC74A78500A8F
271CCE1D4CE0AAE0EAB6C02DAFE4863E6F075F0EE46B4E6AA9A577D22935CAA5
48AD956EF07E3A9DEB8FDA352D88B2203F0634FC0F759E860A0410BBF3DA51F0
55B376627487CC140407546F1F7572BCDDD4BC68FF73FDD624883757FA072C6E
79A634AEDE1D6E851686B47E5137E9D495C291BFB8CA9374C93965D3B59F8118
056A625745472D092812AC61B0E2CD027C7B277E05ABC563318D47DAB03BDDCE
A585F5F52CE931A9BBCE30A52E45A1EB6274D1D40A4704B925B5A6E1106B77E2
C4A08D1233D828939160137494A7062EDF3A23C54F7E49B91E6C16773BD6C026
699A75D8F4D3BEF92BD2B7F08142D84DE2ABE12C50E2842128323BEE67434AA5
DF8CA7B37F1A07705B9BABDE49264179E4016FD3DE3F81E5C9EE4ED583772F8F
28EB6F699F1732B3267CA2D0F62080DF43C4D94BB2D10DD53A0E8E6032862FE9
DECD5D4A4BF99BCDC30A2761584D6657DD5BE7EEE5C8792F63EBDC61D5F4E7CA
6412AD77A693CF00FD3799B4F16F4EEF7F7EF92C0D29905237B6960C06FA1575
D50699FA124E3C90893297E9C65D6CB56B10E7A02442C844F2D40B569CADDB10
6E18446C7F67E2B9E1B9D507862D14CA99C8FF6F39148297B10A93FF9AF60A36
2F8A2BFB978BCC85E3BE22A94D8DC4A2B1D6D4EECCDD9EA89DE6E9FFA6766ED5
80ECD30FEBECCF7DCB1F52808753D250FD26B86D6EF09C52679D72134B494513
032F1DA9A986A1921E539BFD59C74234026077B62E60802D8712FFC409DD1F75
7B8CB3B05850AAE2C66B59072ED6E3D7E65E112784FA722B4E3DDFD50EF058FB
66EA601D32E9DCBB9016F1E81DB9E90F2AC2BEBB0A5D268FC6C16E4F0AF4BAC8
9F815F22686FA9C5E431B6E6379C55FB552CCFFE45512F2B97C2D20974A16D42
FE9DD2DC6F0A9B864337E7A275FAD0934927753A6B8ECA23BC94A3A66E47474C
5566EBFF0E207B2490C91A2379B191EE15C296C75662FCFA00A6E6304C0A01CC
AE7B07A88FFC73EF1590A9B6CC4A1175DCA9B45A36D6B0812E0257654C774C31
F63CA4305FDF674BE2D5ADBFA799A7C107978F7C268379F2A2F01749922B0D0E
B4851B29B7C96E9F46B7EC00ED07B357C9635C42E7F54B9A51A3BF234F0B4651
E052CB43CDB60FD29AC778A3D093976086BB2927183072C46EDE0714BBBF04EC
98F4DC3F06E5221980A38F8D37AE1D00FD344F9B5DBA335BA125C6FDD7A77D2F
EDBF63E3698F9AE90ED35A63AAB3C20D04DB67AB0F06A7BD6D0D37F3D96E7F34
56BE54814C2AA9F71E5BA8AB52A43D308B4AC8AB712BB7FE5E3E851D78F1799E
511C80708ADFB5904CD45A3946BCC0282EED9A69780F8F452C793033DE002372
8A0ED8D832367BB167ED90FCCB8CF1EDB2F9799EC6CF5926D9EF38DDBDF1896F
6BF9AEE7424D4ABBAD39EEF27D588AA2791BF1CA128EB87B9A79AD6067FC19C3
1B64A6D9C6808D5E9313131C472FF8E1F05E6AFD20D2740E9ED0BA208B904949
B69D95148CFDF3DB7B7FD61D6EAE01B2B845BBDA707A6136E93584485559658A
ED51249F9D46189A1F41CE72D878643DA4620663E37AC9D3D6D68B7B29E2870E
0CF04BF8C08411BABB581D90B2A8075CF4AEE37C96C496D5F6E25BC9FD36AB23
01A1601745E98CF82B2F4700CC7395E4BA74A2CCC4C903026FA667BA9F064FE5
E8D4239F56E5B62C070FE9C9C5DC729D4415FB90C4E06FABA8398FD03684958A
1589CA0761944392415CE3C347E9D04AFA9ECC8AD58D19DDAAA9786C5CA1C2A7
8A7259B358DA378B2F1FDFBA5E0AA521B788A882860ACC943BB8E7ECB58A632F
E449CE296FEC2076E9E10B844034E4CF2B8CF0F10B0BC8DB965A12110FDC9E70
1B6F3ABC3679C7367803B619EA9889011A23A6871954370FE0F87C22BEE4C78E
B26CFAF03A64BF643D4C8E46C6985903991803BB627998F567C9C33958EA3D01
2FCFABCFA71A740A995E42BA1E0252791CC1E715923B15052C955B333745F1E1
3EC4A76D897F091A0EA5F1BF51542B9A97BCD7A7FAE6B83844BB54B9A1654582
1BF64F811DB15F6F1DF5655EAE3B5C26C3B166677587E4DF20E39BEC66137582
2BEF566F4B1254C363100BE9EC94E84BF68EC512BE99BC3B9D792C3B00CF171B
2D8852C395B1B65D43B499A8659835F7F4CAD50FF121EDD5417CEFA248908332
E68196C7286C2694717203CDA0653C0D45ED192BAAA6E4923194F03CE80F0228
F41765A6D8F9D65A56F35AD46F8C2FF4F1782FCC4D7A60A84707DB0E15BE6A9D
AACF13BBDD5DEDF89C5AFF02F24D22FD353417323EDFAD5BEB36D75BD4AE3BD5
6EC62EB6D3CB6877E11C83A52230627B94B7E563DF5A5934AD20C8A724A88DC5
7A342E565B20A41541AB7E043C018D9CA2908D79CFE36117641012E1C2783E48
5CEFABF5B7BDAFFA3E26DF8F1B61CFA43ED42245F8F0CBB8ECCAA22EDC4A9D06
16711B7F8B5ECF620587DD1331477D55E2E0D0CF3D8E14BE94F3BE5D8E8D0ED0
3F029F5B479FD6B64B94174A1D3F6127F08348D0A93DA8FEE69870B14EA001D2
B93847B4D17E9E110BB3B6257600ABC85BF045B82FADA96872C81D15182FC790
AF2D12B4DC3161BA936FA75BF0823432C263D2462C3ED2C7492AD8B4D909E33C
2A1CAF2A0E3009AFBD4A631FC8A4008FFA9C3B9384CE5E1277DCF5D2AB647EAD
E8DAC50B70D514914D2171D1C018EDBEBF546D9E2D55DBA6E08565E51B25FF46
983DD5056323BD71FD95B1ABAE9BF46F8F575C10182CC2808EEFAF50A349A8BC
C8B05FB3E285D9D47241FCB5FB69FBCF7ACCC6104134020C001E9A1E7CF8B644
2B520CE9BFB89F1AB1CEE752C1BFB968D6E46066CE75A8C976046E3365818B8B
049922F9B776E4A22F8A076BD536A6D841A300C0ABFC3C24EFDEBCC086142050
B0089C6AB07B0802C77025005D3281D16755803249A29FC96B889990708A81D4
0AAA0EE098E43E0B795368B053E151F068567DCE8C4F4ED7D2A913CF80CFA8F8
C263EB636875534238669678E57786110679EC502193109E0CAB090301286B26
832763F2733BAD1D0125EDE0418F65DB438FCF56B11D924BAAC4A27E5F6CC742
425585C4D03ED0A4A4EA5B70907737A9349210491F5BAB7277DEE38940FF69F3
9E80BA40F81691156A19063B33C0F947D7C5628184447BC33450BA791F0F94F2
B15D349A3BE26FCA81644966E4A124D7D18AB724947EB7F409EC34AA9C712078
4865E0DE3AABA1C1AA7D8DB13A4DB38548E85DCABA5E22EE16F8BBF68D86DAF9
0256D423C371CA1833DFF403F1DAA1CE8DB838B92C737C2C73DC035E0B17BDB6
D490BC64DE3FA194A07F5CB036DF4F9749957556DCEAA815528569E63E88B256
81E22764EFAE42326F972AE18E95B6F52154669E57F9542FBC7E6C6A28E3EA32
985B9D35658DE2CC099084A83957B9B3DBEFC9F9536C6F74EAF88CECB8874BCD
FC9C27688A55F7E7898405A1E6CCE3313B04C75B98501145B9B21BC9EE22C55F
4EE89965CFE2D14DD17BEEEE35BB2701C3B4C3240B9CBBD28A1E29E0350ACD55
1C8A98A11BA0E053EC7BB59E1D2FE389C3A6DBF787325A51A81771188830C1CD
DD61E1185D6AE71109AB3A0A431AE79CED0CD3274BE971D6C23EEE193C7EC836
78300F8DBB9A0596446FC700E86AB361BC6EDA24BA02CFBCB2ED87D824E94D97
50E1EE1F4FAD108358B0CD487D159BDADA04864FA2FB1E59E5AA2EFEAF8654AC
EF781E988E67E5FB99FC3F08B363365461872D87B3366CB479433F2F7F7EDE46
D880E8B53332258A1EE148E0ED5A5D7116F3969D83F0246D86E1BF5F31686C28
BB3A1F7AE2F7F288457AB6B8AA7BE7E937F6FAEFCFDA2FAB12B2383F4E667EF1
23AC8ED288FD67712A204E57AA79E6EB25DD20D93F7782B4C84E7F0527992BD4
28D2471632AD04F56E58ED740EB459A220F21C35959AFAE189D2673052635ACF
14A88BD20B49BCB7760F2DE9C92FF4D96B186D124BD99F1D8514EE00C3EF5D73
C8E0F1E9CB51F593CAA798DBF9B7CA689CA7AACCAA51A94BC4A24966083FE603
4A1F71BE04038128BDD81F3606830C62D45F0BEC9D1A2A8380E76361A85386F1
08B6721CDD960D880F1DC955B953D9E0EBB62D09AAFDEF52B583A814F7C6F71F
78F8AF2E40F036A480872F75A25933F9E25C992B0FDAF1E2859A2D426F2EDAD5
D903B78EAAA4072FA0C459E86E0E9B5434C8A23916DFCA3C4097D910B73ADC63
C9468A422865E31302BC82AB58CDDB92E8604E9FD09CE460DCDAF9D61B12170A
C15F7748DB859FC993CF7C1C3FD24AD71D80C8C3168388AB5A7421BF0E76139F
1AED474CEC060180762F084BB7AC3DB3520A583A4D2051B87351643447B3198E
9B3D3B626F66B32883FFE5BEEFF269927CC74A1E6B5B611E453171E1835BE41A
91A399559C45222F1ECBE7B5D3C92A58D1D41CF50D59C0C69D7606E3DF5A541A
6117F348E6027D7FF5819F582245F72C7DE1C7F66B89FC984FF15CFED47A9F1E
7266C54049B9B9EE2F17E2B2BD1016226F408ADF01E8CC3836E86048357A2E6F
C70BF43B1394FB265513287D864164E61DABC26C582D17A3627460ADAD6DE5DE
77DC6A690C4B9DB44EE9EAA4CD119B3B520FD2E44A5AC848CD744E4E2155CD32
C8A0D97CA5ECBBB39B1DCC6EC57C444FD0374DADCA0E1D7644D606ECF990DA3D
224A568B3F8FD2F4EFCC769A44DB08CE0FF261A2F69AEB2CBC8AB8810AA50819
2AA7F13923DA53C487727DEDF130A271718A0483688AEFD3700327D6512E5C98
6741D9D5C4818F74B6FCA640B3DFEA99C2D586192084B247764420AF7EFCF531
8ED6ED47ECC08F81B80DC56A72302FF66B180271DE4795B7AC8F8734ABF9D4F1
1A195A1C5FE94CB96BA0AEEEBFA768E0A4A321F25697DC5D8D4B166F8F17A840
39C40417AED0FB25797A736FFE9677D23FBA8E8A62AC3ED2C11F22B53DE2A21E
037C6CD8A810072A060F6D02CD5D05FDDADB9563F980613EEBE2AEC2CA551214
ACBB326C8CD745BA5D63368B3EB00AAF7FE627A2F58DFB5DFA3C9134BDE5CD6E
00ABA5AB7F0D9AC090BBD81C77E198BFD9D761D52E095DE8AC45BD546933CAF0
DBE262BB2F2ED35EFCC01FAB14E37B066A6823FE456C27BF644BFFC3808FFCFB
92C958ED742AB4C53921E1DAE173A5E01648C847439F3CED0633DEB2933C457D
FC1F612CA1F4C5796F31F43261647C62E3D95F9B18184C844DF6BC876E7A0C64
7FC1AAD68B5D4FD575112DF50B22C6B205F44A65007A8C51687460F297536EF3
14785DCC0A525F54B8CEA63EAF250890D39AB7ACA54006F0B875DADF498275F6
C445DF0402A4DFD098BFF987AF2C7DD69C22A4C2F5425FFC1EDF12C6DF51EA02
572D861C53F145348E82286BC92E7F1C17AE076FA723DC473D005E10B4A09B14
BE0887A8CADF4A21B800CCAB8DE896F59B9856DECD164EA4835E013E8E905B98
BEF0C8E14D9C6593D4A24213876B9574CE0D4D57F06CA7FCFAB9B40546C9D133
5BEE51F276D65C746839042E1D13E16C61CA2F02E0E1969E9FDC7242EC7A1546
45DA075B1CE7EFF4EB1BE950ABB287F3F15AE543384A996AD43634262281BB8A
E260673A705682D29DEE7194634CDE2CD7D1993C405DF1E7D9944EFA314C42DA
EFBB328ABB5D024D5376CE5C1AA3B80E7FE432D080F57C571932B2ACA44947F9
D1E199F9D82C8DC02B50992ABCB125C0C004EFD9FA6447BD8A8015B0004DE702
5E2986A833C8C70B4957751519BA771E05134ACC3FCEF22B8CEC76DB6AC5C629
6B98507946DB80ECDB4C8437ABFF11B63CDF1FCE0506F79F0C964233D1EBB999
A0DB368DC83DA17E3ADCFDDB6FD7F7E002F57628F45407160C2EEC54E406E90E
9EFE69C5AED5560B6DD146836A7D3D0102EB2DC3E6EC5D25A90463B451ED1192
0C373BAACC131AED116CD1E2D520EEBA07339D560C369234C1F87D97682DCB21
D9CB5BEB66BC657BA766F7F53BFC23C234F6969693261EE775B366FA501D3295
53B77EA52EC688CE0217ED1EF8ECDB6B80DD9BBAB80CBD84131A765379641D85
8E3467D525B55BFFD2556F71459B2FAEAC45D7A33F2A89749E5591EEB071F9E8
FAAC99E8B1CA8A809689269A4F84CDA38267B2E50DB27B6B189ECFE22D721E97
4CE6D713F455EDA5EEBC681148F09481051CE98B3F4E5A956D4671679498ADE0
EA2ADB69A9942B84584A9D6C5115C6E4C1AC2B9F9B3FED1981BC4E257356E48C
02EE88BCEFBA40C1DF26AB23D93E08112B59E843ADD66A4956A33AA46C027774
AE0ED86C6DC94753E761ACEC01849043EF7DC2800E23F75566C4EC6E82066229
B52619666B0A4B443477BF39CD46C68655B417A98156DECFBB6612BB8FD5F7A3
054E9F9D1B92D9743A80C835CD2BA243E092684114FCC63BC0F7ABED0799C40A
02AB0310B8BB673E9E09F02CABB33065CC59619DCCBD472E4AB6F9CBD3B8D95C
56F9FB402FF9CA85E0ECC8A5D7B7C4FE9EA1EB0E9677C1FBE713C41756A722B9
6DAF9A5D2DB2B01821FF386F0C4614BA57D35D948C1F6711166A1E39E242E2E0
8CE0BC27B48AC01F1B4FCABD7D47E40A8FB745468EAE39C1AD42E48D388D9BBC
5F67FEA8C7455EF2BA17CFE83B1A4FE69E8B53DF96D748DC5312EFA83FE3885A
06E1CA8D2FB0BED120195100FF71D1C257575C9B63FB463CE9D658A49E4A57A1
A1D1C7C677D61D73665B7AE193A81E5D18E9651A61993D875D2D74BD22EF6CEC
228F8C1ED4A01EA5CE376425F8E95607D9BAFDBCA402D3BA279727E783CE3A82
97D24A48498883840D295F983BF73F68D014CF0B3DD779586B0D60F8DA944F32
1022F6F80F862379AFF092B25A3FD039A9BB59854BADF0A8D3594D66E0BF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_Writeup1.dvi)
@start /Fa 136[81 1[62 44 44 46 1[62 56 62 93 31 2[31
62 56 34 51 62 50 62 54 9[116 6[77 2[106 3[42 3[74 16[56
56 56 56 2[31 46[{}29 99.6264 /CMBX12 rf /Fb 132[42 2[39
1[38 45 28 34 35 1[42 42 47 68 21 38 1[25 42 38 25 38
42 38 38 42 13[47 2[56 3[52 2[32 27[30 45[{}27 83.022
/CMTI10 rf /Fc 240[42 14[65{}2 83.022 /CMSY10 rf /Fd
134[71 2[71 75 52 53 55 2[67 75 112 37 71 1[37 75 67
41 61 75 60 1[65 7[102 1[139 102 4[101 4[81 105 2[105
1[85 2[97 96 11[67 67 67 67 67 67 49[{}35 119.552 /CMBX12
rf /Fe 133[37 44 44 60 44 46 32 33 33 44 46 42 46 69
23 44 25 23 46 42 25 37 46 37 46 42 7[62 62 85 62 62
60 46 1[65 57 65 1[76 52 65 1[30 1[65 54 57 63 60 59
62 1[39 1[65 2[23 1[42 42 42 42 42 42 42 42 42 42 23
28 23 2[32 1[23 4[42 19[69 46 46 48 11[{}70 83.022 /CMR10
rf /Ff 134[50 50 2[53 37 38 39 1[53 48 53 80 27 50 1[27
53 48 29 44 53 42 53 46 7[72 1[99 72 4[72 4[57 75 2[75
1[60 1[73 69 68 72 10[48 48 48 48 48 48 7[37 37 28[56
11[{}42 83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 1) /Subject (CS 444 Writeup 1) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Log of Commands to Build Yocto Kernel) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (Log of Commands to Load Qemu) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.3) cvn /Title (Flags in the listed Qemu command line) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -4 /Dest (section.4) cvn /Title (Concurrency) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (subsection.4.1) cvn /Title (Main point of assignment) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.2) cvn /Title (Personal approach to problem) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.3) cvn /Title (Ensuring solution was correct) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.4) cvn /Title (What I learned) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.5) cvn /Title (Version control log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.6) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150
0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150
0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0 TeXcolorgray 0 TeXcolorgray 1738
1009 a Ff(W)-8 b(riteup)32 b(1)1707 1227 y(Alex)g(Ho\013er)1821
1516 y Fe(CS)c(444)1735 1615 y(Spring)g(2017)1767 1951
y Ff(Abstract)260 2169 y Fe(This)f(\014rst)h(write)f(up)h(describ)r(es)
f(imp)r(ortan)n(t)g(details)h(from)f(the)h(completion)f(of)h(Pro)5
b(ject)26 b(1)h(for)g(D.)i(Kevin)184 2269 y(McGrath's)e(Op)r(erating)f
(Systems)i(I)r(I)g(class.)36 b(T)-7 b(opics)27 b(from)g(Pro)5
b(ject)26 b(1)h(that)h(are)f(to)g(b)r(e)h(co)n(v)n(ered)e(in)i(this)g
(w)n(ork)187 2368 y(include)g(the)g(building)g(of)g(the)g(Lin)n(ux)f(Y)
-7 b(o)r(cto)28 b(k)n(ernel)e(on)i(Oregon)d(State's)j(engineering)e
(serv)n(er,)g(usage)h(of)g(the)159 2468 y(qem)n(u)h(virtual)f(mac)n
(hine,)g(and)h(a)f(solution)g(of)g(the)h(Pro)r(ducer-Consumer)d
(concurrency)h(problem)h(using)h(the)g(C)895 2567 y(programming)d
(language's)h(POSIX)h(threads)g(execution)g(mo)r(del.)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fd(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Ff(1)77 b(Log)31
b(of)h(Commands)f(to)g(Build)g(Y)-8 b(o)s(cto)32 b(Kernel)1997
266 y
SDict begin 12 H.L end
 1997 266 a 1997 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1997 266 a 0 TeXcolorgray
1705 w Ff(2)p 0 TeXcolorgray 150 448 a
SDict begin H.S end
 150 448 a Ff(2)77
b(Log)31 b(of)h(Commands)f(to)g(Load)i(Qem)m(u)1665 448
y
SDict begin 12 H.L end
 1665 448 a 1665 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1665 448 a 0 TeXcolorgray 2037
w Ff(2)p 0 TeXcolorgray 150 631 a
SDict begin H.S end
 150 631 a Ff(3)77 b(Flags)31
b(in)g(the)h(listed)e(Qem)m(u)i(command)f(line)1920 631
y
SDict begin 12 H.L end
 1920 631 a 1920 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1920 631 a 0 TeXcolorgray 1782
w Ff(2)p 0 TeXcolorgray 150 814 a
SDict begin H.S end
 150 814 a Ff(4)77 b(Concurrency)807
814 y
SDict begin 12 H.L end
 807 814 a 807 814 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 807 814 a 0 TeXcolorgray 2895
w Ff(2)p 0 TeXcolorgray 275 913 a
SDict begin H.S end
 275 913 a Fe(4.1)83
b(Main)28 b(p)r(oin)n(t)g(of)f(assignmen)n(t)1392 913
y
SDict begin 12 H.L end
 1392 913 a 1392 913 a
SDict begin [ /Subtype /Link /Dest (subsection.4.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1392 913 a 0 TeXcolorgray 70
w Fe(.)42 b(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
275 1013 a
SDict begin H.S end
 275 1013 a Fe(4.2)83 b(P)n(ersonal)26 b(approac)n(h)f(to)j
(problem)1557 1013 y
SDict begin 12 H.L end
 1557 1013 a 1557 1013 a
SDict begin [ /Subtype /Link /Dest (subsection.4.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1557 1013
a 0 TeXcolorgray 34 w Fe(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
275 1112 a
SDict begin H.S end
 275 1112 a Fe(4.3)83 b(Ensuring)27 b(solution)g(w)n(as)g
(correct)1543 1112 y
SDict begin 12 H.L end
 1543 1112 a 1543 1112 a
SDict begin [ /Subtype /Link /Dest (subsection.4.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1543 1112
a 0 TeXcolorgray 48 w Fe(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
275 1212 a
SDict begin H.S end
 275 1212 a Fe(4.4)83 b(What)28 b(I)g(learned)1020
1212 y
SDict begin 12 H.L end
 1020 1212 a 1020 1212 a
SDict begin [ /Subtype /Link /Dest (subsection.4.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1020 1212 a 0 TeXcolorgray
55 w Fe(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0
TeXcolorgray 0 TeXcolorgray 150 1395 a
SDict begin H.S end
 150 1395 a Ff(5)77
b(V)-8 b(ersion)31 b(con)m(trol)h(log)1065 1395 y
SDict begin 12 H.L end
 1065
1395 a 1065 1395 a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 1395 a 0 TeXcolorgray 2637 w
Ff(4)p 0 TeXcolorgray 150 1577 a
SDict begin H.S end
 150 1577 a Ff(6)77 b(W)-8
b(ork)32 b(log)658 1577 y
SDict begin 12 H.L end
 658 1577 a 658 1577 a
SDict begin [ /Subtype /Link /Dest (section.6) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658 1577
a 0 TeXcolorgray 3044 w Ff(4)p 0 TeXcolorgray 1929 5349
a Fe(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fd(1)135 b(Log)45 b(of)g(Commands)g(to)h
(Build)e(Y)-11 b(o)t(cto)45 b(Kernel)150 226 y
SDict begin H.S end
 150 226
a 150 226 a
SDict begin 12 H.A end
 150 226 a 150 226 a
SDict begin [ /View [/XYZ H.V] /Dest (lstlisting.-1) cvn H.B /DEST pdfmark end
 150 226 a 150 302 a
SDict begin H.S end
 150
302 a 150 302 a
SDict begin 12 H.A end
 150 302 a 150 302 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-1.1) cvn H.B /DEST pdfmark end
 150 302 a 6 w Fe(p)6
b(u)g(t)65 b(c)8 b(o)g(d)g(e)65 b(h)9 b(e)g(r)g(e)p 0
TeXcolorgray 0 TeXcolorgray 150 369 a
SDict begin H.S end
 150 369 a 150 369
a
SDict begin 12 H.A end
 150 369 a 150 369 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 369 a 120 x Fd(2)135 b(Log)45
b(of)g(Commands)g(to)h(Load)f(Qem)l(u)150 594 y
SDict begin H.S end
 150 594
a 150 594 a
SDict begin 12 H.A end
 150 594 a 150 594 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 594 a 126 x Fd(3)135
b(Flags)45 b(in)g(the)g(listed)h(Qem)l(u)g(command)e(line)150
902 y Fe(The)28 b(listed)g(Qem)n(u)f(command)g(line)h(is:)150
955 y
SDict begin H.S end
 150 955 a 150 955 a
SDict begin 12 H.A end
 150 955 a 150 955 a
SDict begin [ /View [/XYZ H.V] /Dest (lstlisting.-2) cvn H.B /DEST pdfmark end
 150 955
a 150 1039 a
SDict begin H.S end
 150 1039 a 150 1039 a
SDict begin 12 H.A end
 150 1039 a 150 1039
a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-2.1) cvn H.B /DEST pdfmark end
 150 1039 a 1 w Fe(q)q(e)q(m)q(u)-8 b Fc(\000)n Fe(s)6
b(y)g(s)g(t)g(e)g(m)i Fc(\000)r Fe(i)i(3)g(8)g(6)50 b
Fc(\000)o Fe(g)t(d)t(b)61 b(t)9 b(c)g(p)22 b(:)14 b(:)g(?)g(?)g(?)g(?)
53 b Fc(\000)m Fe(S)42 b Fc(\000)t Fe(n)9 b(o)g(g)g(r)g(a)g(p)g(h)g(i)g
(c)50 b Fc(\000)6 b Fe(k)11 b(e)g(r)g(n)g(e)g(l)67 b(b)5
b(z)g(I)g(m)g(a)g(g)g(e)s Fc(\000)l Fe(q)s(e)s(m)s(u)s(x)s(8)s(6)17
b(.)k(b)9 b(i)g(n)p 0 TeXcolorgray 0 TeXcolorgray 150
1143 a
SDict begin H.S end
 150 1143 a 150 1143 a
SDict begin 12 H.A end
 150 1143 a 150 1143 a
SDict begin [ /View [/XYZ H.V] /Dest (lstlisting.-3) cvn H.B /DEST pdfmark end
 150
1143 a 150 1213 a
SDict begin H.S end
 150 1213 a 150 1213 a
SDict begin 12 H.A end
 150 1213 a 150
1213 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-3.1) cvn H.B /DEST pdfmark end
 150 1213 a -10 w Fc(\000)d Fe(d)11 b(r)g(i)g(v)g(e)79
b(f)18 b(i)h(l)f(e)11 b(=c)e(o)g(r)g(e)f Fc(\000)m Fe(i)d(m)g(a)g(g)g
(e)t Fc(\000)q Fe(l)10 b(s)g(b)h Fc(\000)m Fe(s)5 b(d)g(k)t
Fc(\000)-5 b Fe(q)s(e)s(m)s(u)s(x)s(8)s(6)17 b(.)k(e)7
b(x)g(t)g(3)29 b(,)i(i)17 b(f)10 b(=)d(v)14 b(i)h(r)f(t)h(i)g(o)54
b Fc(\000)s Fe(e)9 b(n)g(a)g(b)g(l)g(e)e Fc(\000)-9 b
Fe(k)n(v)n(m)p 0 TeXcolorgray 0 TeXcolorgray 150 1317
a
SDict begin H.S end
 150 1317 a 150 1317 a
SDict begin 12 H.A end
 150 1317 a 150 1317 a
SDict begin [ /View [/XYZ H.V] /Dest (lstlisting.-4) cvn H.B /DEST pdfmark end
 150 1317
a 150 1387 a
SDict begin H.S end
 150 1387 a 150 1387 a
SDict begin 12 H.A end
 150 1387 a 150 1387
a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-4.1) cvn H.B /DEST pdfmark end
 150 1387 a -10 w Fc(\000)s Fe(n)9 b(e)g(t)64 b(n)6
b(o)g(n)g(e)44 b Fc(\000)q Fe(u)6 b(s)g(b)46 b Fc(\000)7
b Fe(l)12 b(o)g(c)g(a)g(l)g(t)g(i)g(m)g(e)50 b Fc(\000)-12
b(\000)m Fe(n)s(o)n Fc(\000)r Fe(r)10 b(e)g(b)g(o)g(o)g(t)45
b Fc(\000)-12 b(\000)o Fe(a)5 b(p)g(p)g(e)g(n)g(d)p 0
TeXcolorgray 0 TeXcolorgray 150 1491 a
SDict begin H.S end
 150 1491 a 150
1491 a
SDict begin 12 H.A end
 150 1491 a 150 1491 a
SDict begin [ /View [/XYZ H.V] /Dest (lstlisting.-5) cvn H.B /DEST pdfmark end
 150 1491 a 150 1561 a
SDict begin H.S end
 150
1561 a 150 1561 a
SDict begin 12 H.A end
 150 1561 a 150 1561 a
SDict begin [ /View [/XYZ H.V] /Dest (lstnumber.-5.1) cvn H.B /DEST pdfmark end
 150 1561 a 4
w Fe(")14 b(r)c(o)g(o)g(t)e(=)n(/)r(d)e(e)g(v)j(/)f(v)t(d)t(a)58
b(r)r(w)63 b(c)11 b(o)g(n)g(s)g(o)g(l)g(e)t(=)q(t)e(t)g(y)g(S)g(0)63
b(d)5 b(e)g(b)g(u)g(g)19 b(")12 b(.)p 0 TeXcolorgray
0 TeXcolorgray 150 1698 a(The)28 b(follo)n(wing)e(list)i(describ)r(es)f
(eac)n(h)g(\015ag:)p 0 TeXcolorgray 275 1838 a Fc(\017)p
0 TeXcolorgray 41 w Fb(-gdb)h Fe(tells)22 b(the)h(system)f(to)h(w)n
(ait)f(to)g(connect)g(to)g(gdb)h(on)f(the)g(device)h(tcp::????,)h(this)
f(device)f(b)r(eing)h(passed)358 1938 y(in)k(as)g(an)h(argumen)n(t.)p
0 TeXcolorgray 275 2091 a Fc(\017)p 0 TeXcolorgray 41
w Fb(-S)37 b Fe(is)27 b(a)g(\015ag)g(that)h(tells)g(the)g(system)f(to)g
(w)n(ait)h(for)f(a)g(gdb)g(connection.)p 0 TeXcolorgray
275 2245 a Fc(\017)p 0 TeXcolorgray 41 w Fb(-no)l(gr)l(aphic)33
b Fe(is)28 b(a)f(visualization)g(option)g(that)h(turns)f(o\013)h
(graphical)e(output.)p 0 TeXcolorgray 275 2398 a Fc(\017)p
0 TeXcolorgray 41 w Fb(-kernel)39 b Fe(is)31 b(a)g(\015ag)f(that)h(sa)n
(v)n(es)e(time)i(and)g(resources)e(b)n(y)h(gran)n(ting)g(the)h(system)g
(a)f(Lin)n(ux)h(k)n(ernel)f(image,)358 2498 y(rather)c(than)i
(requiring)e(a)h(full)i(b)r(o)r(ot.)p 0 TeXcolorgray
275 2651 a Fc(\017)p 0 TeXcolorgray 41 w Fb(-drive)40
b Fe(handles)34 b(disk)f(options)g(and)h(tak)n(es)e(1)h(to)h(n)g(n)n
(um)n(b)r(er)f(of)g(argumen)n(ts)g(to)g(sp)r(ecify)h(these)g(options,)
358 2751 y(in)f(the)g(case)f(of)h(this)h(command)e(the)i(\014le)f(w)n
(e)g(passed)f(to)h(this)g(\015ag)f(is)h(parsed)f(according)f(to)i(the)h
(virtio)358 2850 y(in)n(terface.)p 0 TeXcolorgray 275
3004 a Fc(\017)p 0 TeXcolorgray 41 w Fb(-enable-kvm)e
Fe(is)26 b(a)g(\015ag)f(that)h(enables)f(KVM)h(virtualization)f(supp)r
(ort)h(without)g(an)n(y)f(setting)h(turned)g(o\013.)p
0 TeXcolorgray 275 3157 a Fc(\017)p 0 TeXcolorgray 41
w Fb(-net)34 b Fe(is)28 b(a)f(\015ag)g(that)h(sets)f(net)n(w)n(ork)f
(options.)p 0 TeXcolorgray 275 3311 a Fc(\017)p 0 TeXcolorgray
41 w Fb(-usb)32 b Fe(is)27 b(a)h(\015ag)e(that)i(turns)g(on)f(the)h
(USB)g(driv)n(er.)p 0 TeXcolorgray 275 3464 a Fc(\017)p
0 TeXcolorgray 41 w Fb(-lo)l(c)l(altime)34 b Fe(is)28
b(a)f(\015ag)g(that)h(tells)f(the)h(system)g(to)f(use)h(lo)r(cal)f
(time.)p 0 TeXcolorgray 275 3617 a Fc(\017)p 0 TeXcolorgray
41 w Fb({no-r)l(eb)l(o)l(ot)35 b Fe(tells)28 b(the)g(system)g(to)f
(exit,)h(not)f(reb)r(o)r(ot,)h(when)f(reb)r(o)r(oting)g(is)h(an)f
(option.)p 0 TeXcolorgray 275 3771 a Fc(\017)p 0 TeXcolorgray
41 w Fb({app)l(end)38 b Fe(is)27 b(a)g(\015ag)g(that)h(represen)n(ts)e
(the)i(command)f(line)h(necessary)e(to)h(in)n(teract)g(with)h(the)g(k)n
(ernel.)150 3907 y
SDict begin H.S end
 150 3907 a 150 3907 a
SDict begin 12 H.A end
 150 3907 a 150
3907 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 3907 a 133 x Fd(4)135 b(Concurrency)150 4222
y Fe(The)36 b(follo)n(wing)e(subsections)h(answ)n(er)f(the)i(four)f
(questions)g(as)g(outlined)h(on)f(the)h(Pro)5 b(ject)34
b(1)i(page)e(on)i(Kevin)150 4321 y(McGrath's)27 b(course)f(w)n(ebsite.)
150 4432 y
SDict begin H.S end
 150 4432 a 150 4432 a
SDict begin 12 H.A end
 150 4432 a 150 4432
a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.1) cvn H.B /DEST pdfmark end
 150 4432 a 116 x Fa(4.1)112 b(Main)39 b(p)s(oin)m(t)f(of)f(assignmen)
m(t)150 4701 y Fe(There)30 b(w)n(ere)g(sev)n(eral)g(reasons)f(for)h
(the)h(assignmen)n(t.)46 b(One,)32 b(I)f(think,)h(w)n(as)e(to)h
(re-familiarize)e(us)i(with)h(POSIX)150 4801 y(Threads,)21
b(whic)n(h)e(w)n(e)h(learned)f(ab)r(out)h(in)g(CS344)f(but)i(lik)n(ely)
e(forgot)g(ab)r(out)h(b)r(efore)g(w)n(e)f(got)h(to)g(this)g(class.)33
b(Second,)150 4901 y(I)24 b(think)h(that)f(it)g(w)n(as)f(to)h(teac)n(h)
g(us)g(ab)r(out)f(the)i(Pro)r(ducer-Consumer)c(problem,)j(whic)n(h)g
(is)g(a)g(canonical)f(example)150 5000 y(of)j(concurrency)-7
b(.)34 b(Third,)26 b(it)h(w)n(as)d(to)i(force)f(us)g(to)h(use)g(inline)
g(assem)n(bly)e(language)g(in)i(our)f(programs)f(to)h(help)h(us)150
5100 y(learn)h(ho)n(w)g(to)g(implemen)n(t)h(ASM)h(in)e(C.)p
0 TeXcolorgray 1929 5349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.2) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fa(4.2)112 b(P)m(ersonal)38
b(approac)m(h)h(to)e(problem)150 236 y Fe(My)j(approac)n(h)f(for)h(the)
g(use)h(of)f(threads)g(came)g(from)g(guidelines)g(to)g(the)h(canonical)
e(Pro)r(ducer-Consumer)150 336 y(problem)j(that)g(I)g(found)g(in)h(the)
f Fb(Linux)h(Pr)l(o)l(gr)l(amming)g(Interfac)l(e)49 b
Fe(text.)81 b(F)-7 b(or)41 b(example,)46 b(statemen)n(ts)41
b(lik)n(e)150 436 y(pthread)p 437 436 25 4 v 29 w(create,)j(pthread)p
1033 436 V 30 w(join,)g(pthread)p 1548 436 V 30 w(t,)h(pthread)p
1960 436 V 29 w(m)n(utex)p 2215 436 V 30 w(t,)g(and)c(pthread)p
2802 436 V 29 w(cond)p 3002 436 V 30 w(t)g(w)n(ere)g(all)f(found)i(in)
150 535 y(that)27 b(b)r(o)r(ok)e(and)i(that)f(b)r(o)r(ok)g(instructed)g
(me)h(on)f(ho)n(w)f(to)h(use)h(them.)37 b(I)26 b(used)g(these)g(static)
g(pthread)g(statemen)n(ts)150 635 y(rather)k(than)h(dynamic)f(ones)h(b)
r(ecause)f(frankly)-7 b(,)31 b(I)g(could)g(not)f(think)i(of)f(a)f
(reason)f(wh)n(y)i(dynamic)f(ones)h(w)n(ould)150 734
y(b)r(e)i(necessary)e(for)h(the)h(purp)r(oses)f(of)g(this)h(assignmen)n
(t.)51 b(My)32 b(approac)n(h)f(for)h(the)h(bu\013er)g(and)f(the)h(item)
g(to)g(b)r(e)150 834 y(held)27 b(in)h(the)f(bu\013er)g(w)n(as)f(just)i
(to)f(use)f(a)h(struct)g(to)g(represen)n(t)f(the)h(bu\013er)g(and)g(a)g
(struct)g(to)f(represen)n(t)g(the)i(item)150 934 y(and)g(ha)n(v)n(e)g
(the)h(bu\013er)g(hold)f(a)g(statically)g(allo)r(cated)g(arra)n(y)e(of)
j(p)r(oin)n(ters)f(to)g(items)h(and)g(for)f(eac)n(h)g(item)h(to)f(ha)n
(v)n(e)150 1033 y(t)n(w)n(o)f(data)h(\014elds:)38 b(a)27
b(random)g(n)n(um)n(b)r(er)h(and)g(a)g(random)f(w)n(aiting)g(p)r(erio)r
(d,)h(b)r(oth)h(that)f(had)g(to)g(b)r(e)g(implemen)n(ted)150
1133 y(in)h(ASM.)h(Giv)n(en)f(the)g(statemen)n(ts)g(necessary)e(to)i
(con)n(trol)e(threads)i(and)f(m)n(utexes)h(and)g(the)g(structs)g
(necessary)150 1233 y(to)h(store)f(data,)i(I)f(solv)n(ed)f(the)i
(problem)f(b)n(y)g(creating)f(a)h(thread)f(to)i(corresp)r(ond)d(to)i(a)
g(Pro)r(ducer,)g(ha)n(ving)f(that)150 1332 y(Pro)r(ducer)d(thread)i(lo)
r(c)n(k)f(all)h(of)g(the)h(shared)e(data)g(using)h(a)f(m)n(utex)h(and)g
(then)h(pro)r(duce)e(a)h(random)f(item.)39 b(After)150
1432 y(unlo)r(c)n(king)34 b(the)h(shared)f(data)g(within)i(the)f(Pro)r
(ducer)e(thread,)j(I)f(created)f(a)h(Consumer)f(thread)g(that)h(lo)r(c)
n(k)n(ed)150 1531 y(the)30 b(data)f(again,)g(consumed)g(the)h(\014rst)f
(non-n)n(ull)g(index)h(in)f(the)h(bu\013er,)g(and)g(then)g(unlo)r(c)n
(k)n(ed)e(the)i(data)f(again.)150 1631 y(I)k(con)n(tained)g(these)g
(Pro)r(ducer)f(and)h(Consumer)f(thread)h(creation)f(statemen)n(ts)h(in)
h(a)f(for)f(lo)r(op)h(that)h(runs)f(the)150 1731 y(n)n(um)n(b)r(er)e
(of)g(times)h(the)f(user)g(indicates)g(in)g(a)g(command)g(line)g
(argumen)n(t)f(so)h(that)g(when)g(the)h(program)d(is)i(run)150
1830 y(it)j(creates)e(the)i(corresp)r(onding)d(pro)r(ducer)h(and)h
(consumer)g(threads)f(and)i(pro)r(duces)e(and)h(consumes)g(random)150
1930 y(data.)150 2046 y
SDict begin H.S end
 150 2046 a 150 2046 a
SDict begin 12 H.A end
 150 2046
a 150 2046 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.3) cvn H.B /DEST pdfmark end
 150 2046 a 116 x Fa(4.3)112 b(Ensuring)38
b(solution)g(w)m(as)g(correct)150 2316 y Fe(T)-7 b(o)21
b(ensure)f(that)h(the)h(bu\013er)f(w)n(as)f(prop)r(erly)g(b)r(eing)h
(added/remo)n(v)n(ed)e(to)i(and)g(to)g(ensure)f(that)h(b)r(oth)h
(threads)e(w)n(ere)150 2415 y(prop)r(erly)29 b(lo)r(c)n(king)f(and)i
(unlo)r(c)n(king,)f(I)h(added)f(prin)n(t)h(statemen)n(ts)f(in)h(imp)r
(ortan)n(t)g(functions)g(suc)n(h)f(as)g(when)h(the)150
2515 y(global)19 b(m)n(utex)i(w)n(as)e(lo)r(c)n(k)n(ed)h(and)g(unlo)r
(c)n(k)n(ed)g(in)g(order)f(to)i(kno)n(w)e(whether)h(these)h(calls)f(w)n
(ere)f(actually)h(b)r(eing)g(made.)150 2614 y(It)k(is)g(easy)f(to)g(v)n
(erify)h(that)g(the)g(threads)f(are)g(switc)n(hing)g(bac)n(k)g(and)h
(forth)g(b)r(ecause)f(b)r(oth)h(threads)f(ha)n(v)n(e)g(di\013eren)n(t)
150 2714 y(prin)n(t)34 b(statemen)n(ts)g(that)g(are)f(only)h(accessed)f
(within)i(their)f(sp)r(eci\014c)g(thread)g(is)g(running.)56
b(It)34 b(is)g(also)f(easy)g(to)150 2814 y(realize)25
b(that)h(the)h(bu\013er)f(is)g(only)f(sequen)n(tially)g(b)r(eing)h
(accessed)f(b)n(y)h(the)g(t)n(w)n(o)f(di\013eren)n(t)i(threads)e(in)h
(accordance)150 2913 y(with)h(the)h(m)n(utex)f(lo)r(c)n(king)f(and)g
(unlo)r(c)n(king)g(b)r(ecause)h(otherwise)f(b)r(oth)h(threads)f(w)n
(ould)h(b)r(e)g(accessing)e(the)j(same)150 3013 y(resource)c(and)i
(either)g(a)g(memory)f(read/write)g(issue)g(w)n(ould)h(o)r(ccur)g(or)f
(b)r(oth)h(threads)g(w)n(ould)f(b)r(e)i(dep)r(ending)f(on)150
3113 y(eac)n(h)d(other)g(for)g(an)g(inordinate)g(amoun)n(t)g(of)h
(time,)h(resulting)e(in)h Fb(de)l(ad)t(lo)l(ck)p Fe(.)38
b(Ob)n(viously)-7 b(,)23 b(m)n(y)g(use)h(of)f(the)h(pthread)150
3212 y(condition)k(functionalit)n(y)g(allo)n(w)n(ed)f(b)r(oth)h
(threads)g(to)g(w)n(ait)f(un)n(til)i(resources)d(w)n(ere)h(a)n(v)-5
b(ailable,)27 b(th)n(us)h(prev)n(en)n(ting)150 3312 y(deadlo)r(c)n(k.)
44 b(Finally)-7 b(,)31 b(to)f(ensure)g(that)g(the)h(en)n(tire)f(in)n
(tegrated)f(soft)n(w)n(are)g(w)n(ork)n(ed)f(prop)r(erly)-7
b(,)30 b(I)h(used)f(a)g(mak)n(e\014le)150 3411 y(to)h(generate)e(an)i
(executable)g(of)f(the)i(co)r(de)e(that)i(accepts)e(1)g(argumen)n(t)g
(that)h(corresp)r(onds)e(to)i(the)g(n)n(um)n(b)r(er)g(of)150
3511 y(times)c(a)g(lo)r(op)f(that)h(creates)f(the)i(threads)e(shall)g
(o)r(ccur.)36 b(T)-7 b(o)27 b(ensure)f(the)i(executable)e(ac)n(hiev)n
(ed)g(what)h(I)g(w)n(an)n(ted)150 3611 y(it)c(to,)h(I)e(ran)g(the)h
(soft)n(w)n(are)e(with)i(command)g(line)g(argumen)n(ts)e(of)i(1,)g(2,)g
(3,)g(4,)h(and)e(5.)35 b(The)23 b(corresp)r(onding)e(output)150
3710 y(for)30 b(these)h(argumen)n(ts)f(prop)r(erly)g(demonstrated)g
(that)h(the)g(di\013eren)n(t)g(threads)g(w)n(ere)f(called)g(1,)i(2,)f
(3,)g(4,)h(and)e(5)150 3810 y(times,)e(resp)r(ectiv)n(ely)-7
b(,)27 b(whic)n(h)g(is)h(correct)e(b)r(eha)n(vior.)150
3942 y
SDict begin H.S end
 150 3942 a 150 3942 a
SDict begin 12 H.A end
 150 3942 a 150 3942 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.4) cvn H.B /DEST pdfmark end
 150
3942 a 100 x Fa(4.4)112 b(What)38 b(I)f(learned)150 4196
y Fe(I)28 b(learned)e(more)h(ab)r(out)h(POSIX)f(thread)g(functions,)h
(suc)n(h)f(as)g(initializing)g(them,)h(the)g(act)g(of)f("joining")f
(them,)150 4295 y(and)k(lo)r(c)n(king)e(resources)g(do)n(wn)h(using)h
(a)f(m)n(utex)h(to)f(prev)n(en)n(t)g(threads)g(from)h(accessing)e(the)i
(same)f(data)g(sim)n(ul-)150 4395 y(taneously)-7 b(.)37
b(I)28 b(also)f(learned)g(more)g(ab)r(out)h(implemen)n(ting)g(in-line)g
(ASM)h(in)n(to)f(the)g(C)g(programming)e(language,)150
4494 y(a)i(skill)h(that)g(could)g(p)r(ose)g(useful)g(for)f(soft)n(w)n
(are)g(pro)5 b(jects)28 b(that)h(require)f(maximized)g(e\016ciency)h
(in)g(the)g(con)n(text)150 4594 y(of)d(lo)n(w-lev)n(el)f(programming.)
34 b(I)27 b(found)g(the)f(in-line)h(ASM)g(to)f(b)r(e)h(complex)f(and)g
(confusing,)g(mainly)g(b)r(ecause)g(of)150 4694 y(a\))h(the)h(o)r(dd)g
(syn)n(tax)f(and)g(b\))h(ho)n(w)f(it)h(required)e(m)n(y)i(brain)f(to)g
(b)r(e)h(thinking)g(in)f(b)r(oth)h(ASM)g(and)g(C)f(at)h(the)g(same)150
4793 y(time.)p 0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray
eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fd(5)135 b(V)-11 b(ersion)45
b(con)l(trol)g(log)150 315 y(History)h(of)f(v)l(ersions)150
420 y
SDict begin H.S end
 150 420 a 150 420 a
SDict begin 12 H.A end
 150 420 a 150 420 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150 420
a 150 420 a
SDict begin H.S end
 150 420 a 150 420 a
SDict begin 12 H.A end
 150 420 a 150 420 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark end
 150
420 a 200 590 a Ff(V)-8 b(ersion)99 b(Date)236 b(Author\(s\))324
b(Changes)200 725 y Fe(1.0)305 b(4.18.2017)96 b(Alex)572
b(table)150 854 y
SDict begin H.S end
 150 854 a 150 854 a
SDict begin 12 H.A end
 150 854 a 150 854
a
SDict begin [ /View [/XYZ H.V] /Dest (section.6) cvn H.B /DEST pdfmark end
 150 854 a 127 x Fd(6)135 b(W)-11 b(ork)44 b(log)p 0
TeXcolorgray 1929 5349 a Fe(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
