%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writeup4.dvi
%%CreationDate: Mon May 29 23:31:32 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMTI10 CMBX12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writeup4.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.29:2331
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 45 /hyphen put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 77 /M put
dup 79 /O put
dup 81 /Q put
dup 85 /U put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7B00AD58FAF645
1297991B5D01701E82228D0313FC7C66B263BC79ACDDF9AAC48A3CBF42B96E38
583E1D059953076D68148DC8B6C9527B3A74CE7DEF788A11531F44120BDF0F61
0B2F3ED94EEBCDE4ACD23834C242AA4314B9EF98E4BE72DB76EBDD0A028CEA9D
B4C38C1F2D24B8FDE686832FE96204552C820E45B6BAF0C3308742AE2E064C03
13C2E5064E4FB036548B136509EAD0C04A594063FBA595F296555F5D156E50C6
1D617B33080C0E47AF352C1C7FC94844B7F1377249009D2D580F94670F712EBF
BB73FDB78A1433ECE1919743D6EAD77F73D0E7E96A5B1A0999FC9F66362DBF8E
C5744C5E9D4F762F22E574D98CB128A41E79FE7016361FC2B96FBE72B0808990
0A76E6B4D1B65C08F196875945EFEC46EB42B942EB41440095D3969EFD0EB610
000BC56D07A76A1B5BF4614BBE12907B38CF060CD965AE8E243E2978227E467A
5E7388CC3449187B9C7323B99CC1739E2E1F1DC0A0F77CC4013B7A315042CC43
3B52B89AEDDF0E8BFF5C9DBA24A0C4DA916C97CE933033FF0110524C73D0BF5A
CCDB6A894F22066533C903205C4C64FD6DDEF0049C2F0450E61177D87A290C9F
B97DF258F6029826EF5D0FDF9D3F56334554034125BB18E51FDC7809055FFBB2
6E0FB8A82E66904F09618751CF668AF2C8A673BDFBD689C356F77E850B7A6FFD
E0F0F5E6CF099974552E830B19DDF9B867A36EE90C7C5BD059EBC38855B8DD39
DF19E2391A9789F0A4F382ACA7BE53BE7437B82402CE0194AC44C5BFE70D7DBD
D088965E172526B18079BA67531079A9AB8E99D7B9BE1B2C75F6C18842909EE5
B9EC66380D42867AFBB8D2F23F47C156296497CB87249FA124CC8CFE800FE0FF
A8BEACBEFBD29832A76E6BA0885BBDC47D7862055B9C28383045E49209CEC6EF
6748909DDB1A4EACC32CE65783DE6B527BD1A2F05F2095D8B59E1C466E09FA14
134304593361765F99931037AA610401949DBCE0DC85F648ED026E00233A72E0
14DAB97003588555CE497253FE60F1152566C86C7DB640ED93B11CB5B45683AB
FC81CF2647ABB7EA801DEE315EFB8E8EFC8E9C5870E829B52669EC72E24E6D5B
95653D4983494E70B07AB01C67D1E48DF7DEA0F5A7CE988D4E593F630C20D28E
B4DBF10D3AE79E2F88002B8B2D1B18FD88B38D54FD86410AD6935A3B4E7D0218
70DC8F88D200D9CE05D50F11FAC3BBA86ACEB3C916734EF9609837274A08FFCC
C13AAB59C5A78586CCF2F9E272115085DC85DC1CBDA59D5AADCA0C084DC23325
33C07E2CD584A9B113BCEF58729F481919F8C6776F0BAA4FF807C330BC2FBE54
53D55F2BA86C50980E79C5F706FFC4A5148929CCF0EF06264C8FC86F1C199AE1
5F45E19E78480894E3330405A84B7478953D391D429765E1722108A2E28E4399
3C2D46CF583C101B5BB167BB94B0F4E7EA7F7C5AC75B7B06EC6A4627A6BE3050
E3CCB06D27F6B60CA4D764318D0671C599985A6C23FA4F6574540AF80D5D64C8
5A649A28E8F371FCFA953FE195F9B774678E059BA21791B0191562C0F8828FDC
B7FBCF2FDD2D89313256693652AD3955921A3F2B5A160825A807048997AB2541
B204DF49566D4724A0431515ACD5806AB8833CD065F7734D48E3CBB6AB90572B
FE95BD9D91FAB806A706C436747BBE45323C25FA6960DD957BB788BA413766DD
8050CED1A0BBBD95ACDEC4DC5AEC4A90C26BA1785222D55704659C8DB50547A9
DAC63D897139CB92D686752CCFB9E35E90E88F7FF4642C6815F66CCBB7CB7DDC
E0763DEA2A599BA4F313667D5BCEBFFB5DCA72EFE509B48078DBC4B2D6EA1CF0
C914F04C1AAB4B9633665AD14207B617BFBDB1E900CE6D276EE0EF4624916319
305C261FD2DA2FB75B8C5D2BFAE7408318E7B5E7364AD87795439B76D869D3D8
6A240EF3E0ED4154788DA686FF1A233997407966EBB0DEF556A97EB4F1866DA0
0A8C844B4DDD5202CCDED208AD364ADA8B32A8846FA999D94295E796E7CEACBF
67BA7388F3D6C8B44E9EE02F278C80A891354ADF7775498BD8262E3D575CA5A1
240B1333CDF86B5170FD903112923EA29C51E743F888E9988DF75BC435740E5C
C2682FB39E3C8CA002360CB86E7522C4434244A17829056509BCF40B7DFFA0E6
E24C56740FDEDF9DDC70C7236137BC4B15EB426964BFBE255379A0ABB6208A90
3FB1C76B7380F2A837401F98624835D1909211C20B0C697F3114AFD18A5DD3F8
27D0E708218FE9B2B94AA6A3AF246BFB153EBAABFC24ACE7CCDCD8B4001553BB
C5A062848C131E38F2533F9E6DF66268F5788877A31A832282FEFA98D573D1F7
347A0D7C74AF2E1C00D4C2943E4DAA3A95B6503EA643D8214E7077DDA706CC38
ABC309B5BBAF1A716BCE6EBDE6600D081973D3B220E92041F4ADF460650A6C4A
EE9C54D2E4A4CB0D9B9E993287B556A01FA35FDA8DA3C2DAE6346E894D3FB463
29838666549C7B462901E064D57549202C7BAC9E9CA9194E91E0269A746AD2BA
5A203FE60AC808C3DA15AFE30E2DFB160A06BB6270F5ECEC44FD9F0EFC088F7B
571A6B4A50810B57C4BD70D24D9EED3BC782F545EA28CA78CEC7009698293E48
F841B48AD0588BF60C94CA00691030B24B7877D0AA6D33C35E87D9772530051D
92D96B7FFC7CC432E57D82DBD36B61C6591BA6F8700D89FD9BDEA1944AEE28E1
E67E7BB0F467ECE654A8B82E8C3AB212FEB741B7ADCCE8B9DEAC94C08277C1E1
93DB1150D7F6C2CB30F1318EAB42561BB384DC2E0474A43D8C0D9CBD5394E488
A1ABDF52A3796AE8B33465CB1D1AD96B320947990691721E2AA6360866354191
457706ABDA4FDCDA9C0C2BBB8BA21A858848741E4E37BD3DB4E0B25C6CF19854
8B6F00E23AB7BD45CC49000F89BA3BF5A2DB7D6FC69B05120BD12FA019AC3D9E
7DF33D6FD52AA08ACAB9EC97F2CC186314134B4A0CBE50670717CB35E6EE1A38
FB8F8B984E57A56E18D197D5652D50152CF1EB519F6756FD37E6B732600BCEB7
48CB59E4D708ABAA2C27D5798AE34CEF1AD2EF862E66FDCE6C0C2474B18DAD1C
9C39E285F597E0423597D713001EB53D3743AC769FE234720E6A5428BC79A966
3ED4A407265DB1F3100EDD3A4643C3019B96E40B6A10B3914DB62DEE74F2AB69
ABADA33ADBF41163D4047432F0B7BAE85B62D34101842AE0EE53F4BE6FB5155E
F8A006DD04B2B325C6CE54F0684ABB44BAB1D4174615D99206F9BC375E3C8F88
94DE1C99C42235F82F83CB4073CFA7EA8E7F27440E4EE83154A838AABDE0F6D8
F2649CAA1C4676CFABED61DB9C141906D673418E162041A7AAD50CC903F074D6
C75FBC54BAC99CA8DECB50C7048BD634578527A10AD8DAF7479E2A62D1BD20B4
E178CC0FF4E098F783572408D2D98AC3D54C426D7F1A8729F24CA507CC25F307
0A401FF55770A04297B88639056D89E6DB15F167B29D294790E249132AD8E4DF
9A7D893DDD5A7DFD151C5FBA9AD2446E540E428D3BA82B314F594904968ABDC6
20979BCC1036C5B5443639B75B4D05939E6FF2E6867A8E99ABA55A11A0366DCB
0B3DE42652B1A249E65F6911F079EEEC26825CF6084959B4141A07147C2AE534
851A7B5DD433FADE252E131A855B690535E6933A5B0C04596AADC2E5AAC0FB96
DF300C819F48B43FD51AD65954A6BC4E4A05B146C2FF35BDB6BB629500EF5EA3
8A1BD7ED47062F57E086190AF13BDFE1DC89614664B70F4609F77C4BEF3A598D
E8F915F62E897D83ABD5AB66D190B812355390A810395E6F7755463EF6CF3D86
1F1DC7BE76F367736CC97DA58379C81D2EA78C02A47B94632F967F6D6C8DA522
073C8B5196C50C0E483C6AD06353F8C2C599AF15800FEB36F6F0AB000F8C0591
125F292D0628A057B8C1B7099AFE15ABFA1B3CC4B03B9587E6657D2F0EA66819
DF54EA5F429EEC190CF64806F54B0415BE9E14B38427DB8EEEBA50C7EB4D7568
70F8C8822676D73F3909B7FE997E39D0906B0A80AD283D3F58655E170610AC19
82B59BA56EE3DFC1853FBE02E19AE6BB58A90245B9D4166DEE2B9FBAD3592DF9
D0AC430A3DABE7D9E46E144C6EE975C1A5B095A3D37DC4438E21E0F7E953A068
3AA3DE373B53331B93B27A7BE7C9E520D47E011B420B445A43111D41358089D7
CA74904F67A57C18B7FDB904A2D57E4F59B00B867F0D10C6B541E9B35B0D68D9
3EB46538D1ABB4BAE26430D3623A15C3234DC10BB1D947BF593FA06504F1E360
46B9775D67437C4F34349913DDD7ABA9BD209C7504D2935B5C884DB49017E4AC
8E3806297F2EC822F6DEDAB399AE232D3DD8ECBCB323E8E20F5019F612A0B08D
C8C3A12A9072CE85F0D4F1BB0B99B8E216ECA101458971284F0E689BAD987682
883752A776B8DF3718E960F43263F7E468924F3749963F609283A89DC018CB76
EF2F400DD683BBDD588CAF3F7BEF252993593C0F3AE513A24BF9FC0BB87618BE
D22F8ED38659CC87F7708C3E572A15EA52325B3597979AEEEC9310C44B4BB2A5
6738DBF309662346C746B4FDC35E85FADF8C5CA86CCBE1134712E163D1C6894D
251BA7631406ACCCE76E6C9581A6CBDB1E4C2B8EC5C450484EA3CAE969941C6A
CAA83C8B7487AF971406B04B6069F967C08D9E53A87FCCAE8B00637446B4F479
56F5E20FFA8229901AC63B1AB40C8A666FC58BC7544C78E656939F92067112DE
B64E76369C4E273415B59EA37EB7629D6101C16C09606E4EB9014E03FEF24539
507EB2F5E2F155A6CF7E93242A2FB16EA07A31649833025FCED1157099828FB8
9C63ED0BDB861FBC5D6BD6605CB3D760DDD28AC2922B2974735FDFFDC2A3F680
64752A2D59507E3C4E2BBF715A0D4B80C2586BF16CA75D0F7FCCE441FEB130D2
E832D0F526361CA6F66DD955BC7BBEF05371066E9E67565B52B01A0033EB73E5
8161B4CB60547A48CB043980321963A229925702FA1755B3A182CE7800CB6446
8504BF2D9064D87A5C1F3989F6322D0F8EE413F23028211928D8080723E41443
E058AAE0D666B0BB5801849968CF5A5BABA32C7AEB25159E35A4B05EBE0CABF8
271557ED7F6B3A418E3DE53741A93AAA956C921F613EEE2559B18350BC4B9A99
8D06A88EBCF22CA89CFDF3CBE2F64005FC4D53DF63C941080C0F0C4DA0B16402
0FE40FB3EC0FB5FF8C5A5DEF5C684F73BCEA794E3574F1587A44FC8FEF1BE14C
186208DA244DFEAD6E645A53F48162EE45021EB7A4F34C21ABE32E6E9B781230
B6195BC1E0CA86170689D59DF84717A99E3403B01F5FB9EA7BEEF100F86BCDB0
27BF2537A2FF011FDB1661B44BE7A1019ECB601590B643E201051E0771CFF414
F39FA11F9D6ADB624281D01DFBAC54347F60AEE5412BAE13F076400906DA8476
0284DEA8A65E8BEE88F8D0D8D4B5B1E5D01DCA13FFE9C070681AD88DDD9C966E
CDF8645569DC71DAD954B801E59FECABDEF0A038FDE189A8345ABBD3E34865F3
EE650D341FE394266CDD5C6E2FF554E85FF74C491CD972FD840F3CB99F32BDE9
CA21B81EFC92890A49EDCB1682382C6CDFAF50513791FD72347FB7A851603FF6
6730242C06C561C1AA6DCF0D08775458097385A051B3A7FC52F605E0C85BA2F0
8AC768906E2C821EA3B75A87A7A73FC6C01DBCC238807131E25C17F7E6842CC9
D4701A9A8CE08DBEC8C67E6CF155F6E2422B287ECD23230B4EF88107B66AB8BA
41FB01187D1E3F52FE74EAA0F5CCCAC1B559CB7186A3B58383D990DE59DEAD90
3ACC228D56459699FAF385B0F1B71B9390BD64E20979DD72AA3C860F36EB1438
D1419AB4C81710089319958C895C00DBC068023929478E6CC30D8DA36B7DF802
FC78B50F3C3A6F6F3A3FF1F672F8C1BF417BEC7D036B346B78503B25E4A955B1
693BAEFDC0BFC598C11C74333A1B3CB1D2B7E947ECBF0EDF65EDBFE278DD3D17
739F5C9AE831B7ADCB6E084F5283A067C6E8F7D4FE6A06960B4978402943CEB7
E9473DCBD44214819186B9B682A405918D7390DCD2FB67D51D4CE0A17386ABCC
C2F7905646EAEB2175818668FFFE9435C6C3627B325290D4D05015AFC4913F9F
FD77B519389E63E9FB6086D74FC3E33FD04D5BD76DAB84CFC39BAD0E2618D62E
127650252CAAE148955390B0676821898E13A4C96E8628D8D4CCFB1AB0BD4304
92D741CE912D2A8C835E9C4702BCBB049F50C54A7162FA64AA4416E964A18C66
713C354870F59E8D5D2516F6E43036FE8DCF37F09FD381107E8A2F3ACDB1C476
24DE3CBC4127299898E894C6E681DAF598DDC291A5681FD8279D2C1C78E169CA
28D1360D9294FBCE67220B747E318808559C080E023C1E5B31761B371EE840E1
E7BA821A320A47C7E7D3F8310E1AAE84D86C7E95E82F67A8BE13C0896E0EF3C3
BDEBDFC097DB3BDD79721625F57E6205CD0C473E32818B913A6E55ED7C4C7D2E
6EA7155F0964063CE0E62DFBB3EA1CBDCCE0ED122AC115D53C1EB25A6D0311D4
3E1CABFD69B08C31D157887C0FC245170A74ABC5A3AC5073F3E13BCC172300B3
735E9313C5CFA3CB6E6C1D0CB4FB3523EAFA2BDBF21F2C4A7FD4AFE52D228227
25503C93156F4C9EC0215CDF669E40DA5166879D8902D91CF30157AAC7FD88EC
8F3980FC5040197387D3EE5A1345E14FF5D9872D8CE8ABA983FDE83094F076B1
66D4F71F6C001FCAADF742501A5CADDCC625663C3F8DF2171B6C629385EDE7EE
F6C10526CA775ABDFAA89ECEB3EA5D8CF47CB44A21D452F23BFE7ACA2A61F1AE
27E4D201946B045F3D6C74CDEE3FA39E0BE72B466171513D72BF26C37F521625
7E4D72EA17C7F50F78DBFD8CF85CFD0248A00467986A1FCD6492D4F072194BFB
21FDD8E55D72CBE2738F791A736B3965C9012061B7CE1221FC5FAF757A8AF28C
7C53A54164E463AC5D3D5DE41FED19A42C454C5BAC0434AD5BCDA3EC6F8B748D
59CD659E98E4AFDC05FBB939EC9AF8E82814954F6AB9E7700F243600AB25D1FB
0ECCFFD79228877CB0BA80CF28BAA8C63CCA52F67BDD0C1DBE428A75954A81AB
0CE3AC5DC5D54B839A5C70DFCC5B2B86ADA7DDFE2587943D9387E8A752E31B7A
48D6DBD459A2757C4D000D706C0C5CFF40F5975FA5406826946DD056658B5728
A717DF77160158C772305EA094EC3640A20E1AB0A597C061939AE0B0F2FAD736
38002C95F7BA88F2787CFC7569AFBC37EB9951A67C39FAE9C605370BCC4C381F
DDE224B19966E7A1F608173E85B324A139244F7A004827E0E819506DFBF6F87E
24EB8588D0E9B9A86D5D17D4ED96AA8B9330E4837D93552D009DBF1D17EA39BD
83918AE79EFEC17837C78699C7CED4C1C6857FDCAA1ED1B8CCCAC0A20E213CEF
95B9E37D2EDB33D44E2857DACD6EC52ED36EE9D72B506B09FBC710B4AECA40E9
2F3C30B16E28A0B17665A1330E657BDBBE1B5F77344043605E0716B13DD52A95
E14F67A7208B4E65FB3936E6F655AE26DE4709109D3FAC2EE313A9E7ED27A57F
8D98452C9B3797F98D315F93B553998AFFBC74F28B65C520943D869EBD4E34C6
7B02F82E89464BA9F368EC67FF812FD925D365589CE45AE2BD723198FEC45D27
7769DB1E7EC5081B3BD0EBA9CD30CD0DCF25AD427F6AF0C400576F732F21259C
933E94CE68652803D98419433CDD0F658FC5722CF7C2E2F39E05BE5CAC9CA8F2
D3398565A1A5D1DF43B74C32DC64C9103F930922C323280F727952196E8C0087
A2346F0ADBB7F359E2F654D31A46B94C0F27D593D8DAEFE11C07E54F85FF468F
6CBF75FF022DAC0C4B4F9A5B54892493A733D45EF3B380030B717CFFAD60C10A
B606FB17764F2C61156B81BC655110592818971E4A39856FF15A6E871EF633A9
27CCA5AE3D7451F7FD0A996D21216B6CE139F74C2AF9EFC33E5A6CBE240A4079
9340F44DB606E7FC30F59FEF5E671513AB6B2B9E4771F11509AF49BACAFF19A0
5E2D7FCEC145970F00C7B0723EE75DECD058FC6C6AB32EA447093AD0C8A30807
0006156CE0E90A97F1CD3B3360AF23DDD9D04EB1159D5DB4EB8C5AD94B97D3BE
D8AD3EF65DD63AE0DC24D32BA0F93DD642191E21C036D138B055D07E87AE388F
1A67DBBA12DFD33E5E5F8AA735DC2A2C7DD679BCE9128447B01C1A6BA651ADB5
C2DD650E1ACFDD26BB2B65518B2F1A52716559814A8A51A02E458BD49F949D2B
000D94DB9026DBB730BD38A34BC6990212380873293A29BA1D69B422D8E66E98
1F486DDD33946D08BCDC03C6F62C0D7E418899E152AA163C34CCEF1E21BE0085
059C567ACB19EB2DD82384DFD722A42C7D013054657307C7B71684113500AC26
BC9FA80507EF02764BCBBB06B1C8F635D80DE26AE970F78859B64B4FB4E42ADE
F2E5E2C1A6166A17E98CE483C99EE991923BD1D9FA1C74FB878116690CE57F44
9CA95B758F29701A6AC107F3DF5A9531882FC3D7AF921795514D4C69A3797D05
8E5BDB94DEC9FDBAEEE5A784FDD1B3CF3158A473F54EF44A5EAB86885D5B96B8
718853C57C520BBF474FCE33419A15813A8B2590AA659ECD4168F7C69E1FD355
612F266AE49A644D0E2B88C336FFE536A0921F7A917FF8B4B70436A7668D50E1
6DD886CD6A796D536BA5BA6B816D17B370B205469C146F42132B95738B4004B3
B22D18D91F894977417F82F05EE93C4421AD91BF880AE109CF27A1F2F4E73178
0CA4E94C90CA654ADE1A66FC0B2AD975B466FBF15A333637B6411C87318B7196
593FF981C5576FC0FCB0DBA5EB7EBE444F3EDD92ACA8762BCDDBA701586C3A92
280AE4A2167423C8AEB97199D25B139FCB2FE58396B61EBCF9E2CB39417F78F3
EB88761097C250BD33C63D971364352E488720EC343C0AAC926576EFCB8FEDE2
05341AFC2DFE30440F26ED9A359F319D5D0E5ECBC8E132A8CE957D1E54583497
01462D36AF6417EED36F0796E7E8DB052A786BA892818D6A6C4F8CECFFC22A2B
3DEED21D77023A614412AD287494018B997AF19D1FCBD293D57228478F517C43
6F9C9271F0793E08E41B587BC38FFB119BAB87EEB1ACAA7267D6D066F6401B5F
438AB873A1F307318E930EC967F49986FB1030680061F14E986255A8632AE7AF
9FEA025ED14A66EC21DEF6BEF624E490206CA53EA4632020A58EBEE2AD7A3AA9
F540011D181B9E3DEC31971DEA25BBA65E04DF8FD6C46569A07FEEA5866D8DDA
516D4813AEA0A370781368EBE5A8E44BDB93E53B3F9862D48778E47E1E0890CF
BFEC7A1C35FB69AB2A604B25B885C1C0947B04478F7F4EE665393358AACA36
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2D80B2772B05DA60F3DC15A815A6BAFEDC399C7956E75
3851CB3588E22936FBFB63A58300298B11C45D82385C083D07AF133BB1BC941A
FDD9F34D5E0B8087EF2A58C54D8AB7580EE3ED58AEB83B72CB9028F472ADBF11
05A77651F118824F6CD00209EFB60C1D32D46A78E8C8DCB8B0E742828E3B7D17
DF5200D68189C91FB8489CDEE8BC223C4281DDCA5F7DA80BD5C2D66A13AB49D2
3BBBA5D38653AAC7B813F29F450710ABE135CA3AE2ED2112731C8152ECE13039
132650336D906EC4B1E471C17C132E7A1B8DAA02A55E2DC4124A2929C3989106
57C35047F319DF546D864BA17C5A1F360D570FE860C5C364D00B68778B5BCC31
A6853DE483B1F456B72FAD584CA518CF445C5FAA7A8C67A1170A20528761B662
509A633D41B7E72C38A3297320BE66C267CA45BA117CB72553561B3E40395789
E185481513F00DEF001C0E960732D3A7A66A92D427EEA9F8F0003E12FC03B4CD
D58E018A9FF5F602ECE6D8017F15B0575DE19610F17233144645E6135420792F
40A8EC4DFAF3DDE4FC6BEEE8AD6C959B0C6E4DC5BE2056DC2CA0D4AB61103319
674A8F7288FBA9B47745551BCA88EF97C56B8CFAD2437A544681A5ADA2E53C74
A62194A07B19CCB3FDFD57E2295318970E148C1F75619342160284781A46FF04
D7A2A86443B4A553E298F4AB4BF071CEBF3BBFDF2568C0B0121C024075D4A073
C7B7C3B8A244A8C6A235FE694D64A2E9A23A059E876FE4F1BC6BA0F46C016213
4CCB9A67F7859B8A68E99C7A91AB99CD7DAAA8E7FFD3D2F9364FB370A0167F56
7B787A5E2AB0F0CE2A579017391483E0774A68DEB6EF2CE4F9D4EEF798EA4D48
0BC12E4C999C5AF04DD50254D06B57F81E148E301ACB6C9FBD0BF6B0904B0642
BF61B2699561FC87F1AC69DAF1DD7A8F699E0CB82674D0A96226AFCCDDFA5FA8
5F9540B9F0458B12CC0C93ACB467E0188D55FCB9A3D1C3EA5DC54DD5E04BB930
B2B5F8F2E91E0E2FE2A86B6FFC977D4676A24785318A3BBF45594EC78BA1DEBC
BD7CBB0DA5AEFCA3FCB7FB411A2E5965FE32F73D11356C09B7CA4026357EE574
13E8F1C59EAED276457CA4702849F2552BC89C4742C39922B0579BC886842F52
D6D368B2F9275E15B7987A0CBF179473DEA8E25A4D17799E8A38581FB2AA3166
31A94FF2CB9D96604564BAF46DA6DFEFBD27C9BB521FCCCA1F652E749FA441CA
D04B973808B7EA2095871961E47A2BB52EE43FD076A072AFBB7B46AA8023B11F
D781CCE2102F310714042B1E6C0A049D00529DA9C5EF7F5FB4143D3E99804BF9
E83F1EF5DD4385DDB09FF2FD76948BD93C7691BC55324E2D289B9538B187CB92
F5376B73F8C26CAD34A4803817788EC302997E0F5793240FCF1CD048DDEC6C85
12CD582BA59673148BB1CA26096897551D9A285BD66DA9874D4B5E070637319D
3082A4A0D2ACE345B92D3A77834FBAB88B731A4BC5F9319CAC7E9FA404058F50
77C2526325E277F7495B7F588AC6E7D22C996908ADB62F5C62EC238304F8B0F1
BEF27BCCFAC789B413456966297C1461F51EBA1E524E7CE6012ABD81E4116602
1CC547706CBFE9B53422A2A5D03E179DAAD93F30BA5E9649F1618BACFC0CCD6D
0B935C88529C179A30179AECBBF5D331A55FE1DD4F275CB59C8AE87C49333137
200A09C1855F6C1E593CA81DAD13E82E8E77477A3CE9D033627D0C85FBE338A0
9459830CAD674EBF2507025BC81B91DDC45DE56942CDEDC657BF67429D872EE3
0F359C33DE4B90F2247CFA2D9D4FE03E0795E3C661E38B8048C7191C5C3DA2F1
DD2C39164D40F39E8D1DAB7A08DB2CBD2300BC476DFCEE87D9B6C6DC60129161
3ACF547B4E34F37E25C834B865781FA761DE357AA0335DDA834EABB41E896C6E
3E7425D1CD1F7983893D0573244509A02A9C0BD42A5E7F477D70CBBEA9E5A4D7
157CC2DC2723C7DD1A335DFB9BD32C871E1D10552B66B5AAB4B5EA8E2DDCE471
B6EC4150AA63CE4ED9E36305CDDDB8C57E8C402380CD3B876D76A2F8A6191BEB
85E717EE5BBC31B9A352EF69B13C061E0C5196E2750A13464E7DC2DA6322633B
E86D47C2C91BE5C3F2AD2D9432C28095D266464A8C5EF684F656169A9FA7C1B8
C2019EEA37D0691E73F88699B765C13D289EA7067BE7C2E3AFBFC18CEBA7E1A7
2F5DE3EDCB7381A992822D1D065FC10278B96E9CFA214E2A202D4116BF7C1B59
DBA8FF313F30CEBAE846DD4866EB5851E2647AE12EC32585FA3E699914A0C3B5
53D6FB8A94A7CBE0C85693DC17491F065DAC83B16ACFED5E16E2D8FB23CEA3E7
D1C6B54C3292AD1A471C92962AFEEBFC781C80D4549240AE02FCE883CDDA4958
C8B35DC685D8F589241FB8DC1B477E41AECF9DB53C785880802A580C28F99942
E7EBCFC19CDBAAEBAFDE393033F850979059E1EE54398719D916A6EF6F334442
E36AB83E6102FF583CB0625165BEE3AE17544C7DAF8153443AEC8F07C6B6AACF
A3BD1E66F0D1B944EA178CB82F7D629A0AA4876474CDD8AFB4EC99D62A801483
3395F2E9A59893483B04BD94F904601D97EF8B8313DEF86BE4BE6B40B5F920AC
000734953C7F9B0FFC8B4FF21908CE45037D5F8747A3C9E80ECD40695E434A78
24D2CA0C8BC15DC3A36C8E422902535C83880B1770F04B615F89B77F51BC4A11
7FC01D77EF48B48918214292E7316C91AE2A7EEA9F221BCFFF7182B6D7F9B15D
3619B36B3C47E6445673C1563AC1C9E62AA9F28AEE417EF149B36E6697A59229
2ED044783B09A11E58D4F06E0472DC739863DA32A02A6BC29E091D275860EAE1
722749612425E76EF6280BED6F91F17E9AFC9E6125F61DA562A0470E5DCB1A42
7AD356CABE21A517A6EB73FB7F9B7E934A028624FF072DED6E8E5A77D91FAF70
BA493BF323762EE218F834A9C4C5E76D531B8CA48A8BB0595ED6912031E09803
889EABA594E562B3569BB722B0DB7EC9EAED6A994F5D009F32E7EEFB6C0FA74E
6961C62CBB79378A8275B2969800A84A1B070C2F3485695B9F331F69778BF0DF
829C4EC760E6A4BFD0DDE95F9E559546903FD8A34BFAA930C25B6C6406EF9799
E22E47756B3C3BDF70C59A9A326D158811D220BD78A84D799BF1058856B3BC46
251B81E1134A4D01256E87946EB908FE999AE6CD6FF6068D6218B2245E4D96D5
778EC277AFE4DEDE00DBA14741A679A5ED13FD6C286ACFC3FD856876EA457CDD
2D849C63152B07652329F55FB61457244968862A3CD98E8AA6A58AB951C5CBD6
82E5AF3381C1AA07E6B916740652E5C0FE96DCA6BF7F1ABE68B7054C057925DA
AEE261D5511072A541242E9AC9DB9A1E6F7131867B7E1B9FA785CEF900F894B2
C04EA847F7A87200C43F79F474DA85C260A9458A381FC4A67F0D4754A3C7C052
67C08F052832D372FFDD217AC38820CECCA12493C70392E88C115354E5C62E00
BFFD6D4CBEE5FD7B0D569AFF1045344401A616E4B01F481C1A46A6466323A1F3
09608DA5F1E5BF06860587A3B8A12717D60AEE94B71F24892CECA680BB254403
CAE905BD27572E18F9D325BCA3300E810CC5FA0825537428F687D08C1660AF94
DA8F469B87F1C33F0CF8C07A32BCBA347B49FF02CBC24CB249CD94621CF6794D
C1AA0B2244BA42FE5AC9164C21D6A35318F303461CE56031EEBC289784027139
AD926D1732C85ED224C60F912DEB2B42795D32BDFCC075A72897C2C3F2C9DE28
23508730A85A9CE46311CF8E215BEFAFD2E26D3005E736E2ECCEE3F2B23A0591
01816A41F7F1307DD69CBB0EAC76592E6C304A5A58AD6CDD7C881D88E5C724A7
6B7963CF4A18D7989C695D60CCDFCE63A4D2113B2E9388F58A7D0DC96F24D840
ADBE787F24F20A3568CC6D9B33D23430C510D943674AD56AA53FAF6FD0D273E9
F05A09F56C3DC57D19278495F34CA0010247CC28E5A7DEFE4F2B69F29F8B3BCE
6482B90C89E3A3C7840C36C8BEC7619A5D3E72C1F10CB46FAEBAC12B654F2099
5570834E79B2027C7188ECA5704BB036BFEE19B70CC6EE34F04119E64E9F0346
761ABFADE6B7FA4F28B148D29B9B592DAF4B00FD16565B9EEA81A193728C046B
C5430C94911422A9A12E01615DFCB8B6A1C3E95EAFC26475BCD68958CDDC4ABC
CA18B3C5AE46D3C83F6F896EB90B07D32CDD271CF4D2963A4AF2FB73079DC3F7
18D4EE4EDABCA047E4FA45248619209038CC31C141555440BD9E816579652AC2
8691911C7DA0FE6C9CC0F4E62005BB3E3094A1553CE5941B36D77A8F91437941
B15B829581ED047E18B91381C598E1DB6DE84DAE8A450600ACC65733BF6DB8F6
EBC4499D3C69CF60D82A52280FC104C7664630E3EE86DEB3EC018FF782B9A663
121938C7668B34344CB2EF93BCAC70893150BDA27B92050FCABC3DF96D6D3606
A752F81EF84DFD240C0E53F360BE61D0D5D4069E0748BE6C5A7AC82F50252437
E624CC104B692B44B49A1BDA64D6694056724E57AF59EC0D6CC9DDD59404F26F
09A6A05C5D468EEBA3AB300C64C997BCD2B1A084B89FD7CDBB4DE6A00A9F68B6
35CF99AE7208C1C4954A580F8D28533665B6386BE83B9701
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 13 /fl put
dup 33 /exclam put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 89 /Y put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E5DF0434D2C607FC82C9EBD4D8902EE4
0A7617C3AEACCB7CCE00319D0677AA6DB7E0250B51908F90A32C4175B6BFB279
024EAE1B04D721A6C54FD62484F8949B2CE9B87D9CEE04DFF82BF14931B3CA03
AA5F701B6F80BBCDF2C427C40A51597F0B1BFA25EDD7CE0EAF2EC676BF0059B7
15DD5462BA30DE78A08DD533DC0E8D85F9DAFC5FD842F417265427E0F1B71834
D2BF6EFAC3CCC40D3EF3B2E2080F148441BA45E5D0C0F7D8416730AF4BE4FC93
1E965594E0364F0D4F1EC48004CEBDDAFB1F0EE0A8222358EAC0F62E6BFA3C9F
46875EB4C999219B91E6147A49A668505667030CDF3495682B79C0F614AAEE68
D976EFCDCB04127C0D7325A2211E49CD316935A0B472D1F9FFC68F7FBEBC7582
036CB393016193A9783DD08D647E89C5BA4EFC8701BCCB6A5C027C4FA8644C06
251B9E33FFEBB1B84AC4D4B148205C8CA7AF5EF97F2788EFB0B71473AD0F5EB4
FC43F46602C53E53F5A6D1E445439F65967C51EAB636178FA377DB2DDE5FEF41
9E91F3BEBCFBD3B4EBB510A0DF7F4D19C6552BC98F10E25612B1396020D7836F
A3D3C865661DB276E428F09F048A916B4F07D8FD01AC1942A3CA342B0E531BF2
3E9A7AF265ACE1585E331A8F8B5AE06FF085C1F349215581FC7D6EF6869A9A97
1731BCADE111C50AB7FBB87D6B3CE93501772326E7B49A2AE46D4E512B988DB6
40B072A8E2493D8C103A2619F600427C646BF94ECF300C8CED0F38B9B74C66EF
CDCA539B2D73AAB32F6CC0FE765F2AFDBAF56CF48D70FB98C3ED83F7C2ADB01C
926F1F6CD0AFD311B1422C44EFC191009697138B9170D8C568BDBC99AD7918D8
6054FC4CC55665CC7AFF7560E71A6EBD63AB3FB1FBAA0915E7D640105F39CB3B
F9BF905440E0A7D8F51A9BB705831F3B55E9A68C4D1110EB63FD00B7095BDAC4
10F4CD001DFBF19130C01AB94B021CB5F5A52C7762AC426653FB30E5F89C9A16
FC5CC0CF108690C675DA0163EAE43D6AAA4BBD9A1DD88F330488284E50267231
49BD55C5BC9E8CCA0E308127AED7E5861EA417C9538B65CCB6E8BCFD8FD80AD9
A63468F7FBE46D7C735E74038D4330A936E173C4107FB5EC37C9AA459DF6E04C
EC34579D9E18D1E0A10F064F8814AFD70D4961EC07A14C87C2C26767A709E0B9
A1901F1DD8D316B5BC7684724C649823AC1D348016344F755217F708BE49C769
42D0724F064E7ED97E93A01BEA8D11037E4624E369FE2D7618C620C49AB7A239
96AFE93BA3C02019885886F2B176065E3D8C67373BFE44AA05CE3BCA949E690D
C70A569DC0D53B3C247E9CDE87D30413F07F8E95C1C3F5F3B0BEF04F9A119094
9B4B6A3297CEF56BBE5D0CE59CFDE68173E9BA58BB685A80225CF2D9DF8D758D
36AEBBCCC6D8A52B15B471F275FD32CBFD3BE97D9FD776E8BD0C85430AD13990
FFCDB566C4B7790E89A9B721D44638465B505E80ECA6A0875A45785AA0050FD7
3307E9D91134BD4DEAD7D3CB905ED852DF31B4C943C7A55EF9F7E0E209B853BC
9BB4170F697E088ACB6FAAE84AF3F0A923AF232878C28B0BB5F03E10C49414E6
FDA1164B159E90EA972C925F1191A56A16603DCBE0DA27BA4D322A0F7CE1065F
08DD5C9EDDA876ADB0EA9BE1E3E6500FF93305352A3D81402FEB8126BEDF2695
9B9E6C8DA8EDC7B4EF3575B7F9BEC8A1017BDE15EC9CEFDE0D54552170648CC5
19ABAB422C30F367DC5287381811841B33F6552A63A543DC7EE0B8BC66596077
82D85F7F21303B5E0CE9E2B6A7A95ED963A18F0A02FB531C4AB4BE96CAF534D4
C2B1108E1AEF6E41A6B162975817497E6078C082B8888148C6F648B99F40BED0
FDF991209A4901159723386F6AF537BD3DE159942AEEB0BD3263063F7030CD5B
82E6F9F3C4FFF979EF3EAB8ECFC3398564C2808DCF11184313E9A91D46B17E6D
E9139FD27AABAED74BFFF5BCE85873439B65C26A70A33D4C0157766E556EAF1F
12D17A63B4499FE2F70AC392750E452E76333E2CF7A4120CA7B0E8FE4740A584
99789FDD6F3E44C24801C6E640DA343E88C0A2C4E4528981611E17B26336F82F
513C62A46E6282D8E287F7D38E850594B054AEC3DA54B64225BC9D0F5E031732
108E90F96D2B0DC964C82F9BC937F6BF1D7DBD1235694C66DFE255CB16A4CB5D
08B75C1BE48B987FFA95B0168868CEA01FF6CF3FE6D247E97E5C6403D0854688
DCADE3A6B10E5CCF7809055A8B4278E111EBFFEF7CF8C27B4662F53B9695239F
67D28172DA6D331489FDE0773A4CEE27D921C8874E2876D6E82FDC5F21D5A248
B7529C9100C5D2AB7B62AB1F539BAEBF8C652191F0A7788C99CDE8708BE2F798
3CEE73B23DD956B3919543F0908A69E827EEDDE92667BBC85FC78D9ABBCB77EB
3E785A4BD3D6188B13979460DEBFDBBFA6262B971D26FA86E3D5B67475E183AB
C9286106C7374F4B840C60891CCA711107AFFDD7CA2F1F1E19FBCBD91B50BAE1
22BF6848E7416CCE45F491805C75736E004648734EDD96F43EDBA15BF5E5EAC7
9671A4152A5C29584348FC824828870491665071C4596B4FAD40C408073A1E2B
FBEA08BE206983F77678D370367BD3E00903926916BBC0003B827CA4788C131B
16881E8DFF69850665DE8B8A13A2E00C94E991A5C339135FD30648433D82800B
16967D57137B938893B4AF5D7495BD1C0E5102CC1818C9671BDFB97B03234C4E
11485BB8225A29655FC0AEEBA77622287AF3F1BEB1071674136F0A681D85E2FE
2BC5591FD182D200BB60158E3DFE93FF35581E4E8219FF3418A433C7EDF581E7
E9F6142629BC1DC8487E1ACECDA26F2DBD76EB83167573011BADFB75950A64A3
C6200EE7496978B244939DDDFE44156FEA32AB1C85ABA7D67D09B21E2EC952A8
1126D5750559A6D1F648C62D7DF7D70053112A2D3D6813E04A8C2B091E0A0A2A
A8A041447E6C00C6C71491E0807526061D1B1B01DBFB636C93CB100FDB35A6B6
4E878E9845B4251518909B1F738797EB0470A63C7183FAB526243B8C13EE8591
9C89DDAB89714B7730D36931817C3E97F4DA563137155F01A2B8F03E6E3C1AAB
A3627C76070C8D838BD873A48848984901F0D50DB89C251DD2E2AF711FAAC8B2
F50ADCFFC42F4039C71EB3412F35FC2C72F08EE43B2232C2593570C68EBBFA12
DCE2F6E2F8FFFE2762807C44EB4BDDF466F2905AC6CFAA63E11878F3F12FB5DE
01850BA473F52F0B26BDB7A69816A95BACD204AB6A12CF0B3D1745B23FBB8C0A
D0EF9A1FBC3D1AB68C4B8F2F4292EE5D26753309A45C257861FAA8004D6EB4FF
5192B28146D49619BD6B44351FEE3FB28A87EE7F471FDBD853B3746396EE5008
9F447EE8CB938C5AD86DB2ED06FC3D181D0F2ECBA64666572ED18385AC9ABB74
A15A9A88EA8E127CD036F60630C6182CE383A248DC13D8CE4675DFE360B0E514
7772FE1ACDD57C377487103F875342E66565D8B43AEA34D2788C0D7F20F0F041
53EEC9DD0D01F811B59C9D18A599D3E93806EE473945A1AB317B1BFD9F635B54
44FD0D4A6320A49975FA835839A72B1DC21FA57F26C99A944E8032183601ACF4
F87B99E092901844E761EA7C457CC7CB591F6CBA2DCF4A7407F686CE0DF7F4A7
9565E6574D042D81F20129FE3413AD38CC5BD1825AAA0661A61BBABFD944F48B
531F526E8D7C953BECECCB353B40EA633C0F981E64E8FB005D247D5D6DE7149F
EDEE743003880DF0D3AA69A8B28C1979FB4ACD451DF3F6AA8F7DD7CFD85B0EEB
77088CE1453BC535330AD6D3793986A393FAC2B0052D55CCE7713BD8B72DE44F
3B2A9BBFB44C11580CDF057F269276558FB1BDC2EAA7B055089E473FBF2765CD
90449656B64661C92F757A686EF4BE96EBB2FC342DA8A4D3098FEBD25FC0570D
D6B6AC97DBF8F1716FA8466953CB49AD4E27C24AE4B4BE54675F703935D47BA0
ADF1BAF178175B33EBD103E0799314F4D22EBA9AA6F061795CF750C01B6A658C
FC1826AC1576EF46668BF636D9F8F66847FF74DA461C313FAA072B17EAC6EE16
8903DD624DF09AE7E65ED1BC7B9C6BAD312E88DB86AE09FFE39A6651DBCF7E8F
EF40F98589AF43AB53E41D30F1464152F6965E7EF3FD39881279C4623F9B308E
F5CBEFFCE4DE49A6A7F99D3275DC1357C5D10B818C014D87FDFFE9633B5DD23C
706969ECD5FF2ACD388A79DD5A9DE02E75268723FA7A3B2407ED272B9DC049CE
249048B5AC6BBDA141C4DD48253A15CD49271597ABFCD1BB173C615B23E34687
C7F3C144404BD7B4C6C672BBA972728DEBA7103AD0B7ADB055204AE331FC733B
C9F11B16078DACF2E7006C5FC42510D4A39CB8548D5D331759FFFC660E485590
21797FB4EADA8CB15379F2D317C05CC6C884CD2B68937B6608BFE45C9157BC7C
4FAD97B2951C41397AEBF440AED94C44B7B1F4C8EE772542CFDA947977175EC7
84890335529F0C736777338B1F7345080D74D36A1D6409F291902220D228C2C6
FE809E8246FD386418E042EE592B68D73D00B5950DE92A422E0CEB3419FF3658
52591407B45AB08A743D7EE32E910803C8E8D3F1797805CFA52BA2EE52CFC054
B4C1118312AE377B18106B1D7AF8D2AD1493A9CAEBD6A0BE7419055A3E919DA3
582BC4474FDCE160EC4B64FB015C4FFFD8F182BF9C5FDF3CD54AE432C84C6FB6
F1021894D2C54095BE9CFB5439EE89FC393933A6E5FCE058C0F80A362C2D6990
75718AF74227D053EBA0B6669B8BC344596A0320DD4B15F3D55BC54A0201B8E1
4BF35D3DD87CEE795A247A00D67B64C237F0C05CE8A7D95AF7C34A4E9AA0ACE7
DBC72D2FB0E6FD1EDE5E46654275DA9EB7250C939024812D3DBB15E817FA049A
D3C1FA23DDAD666795C245B99C12A0B9E91BD7DEEF49852C3018F6EBFFB59FF8
907D46C896547D2EEC025C7274AD0AC2089E31A6A2CD37A8A6B893DD7865BEB8
B45910A141043D862950E51AB58A84BAB861A702C086B8C2C1004C665291ABB9
8E12B023CDC272D12A5C7B8568E4C02078C50F7DFAEF212E9A395ADF32352134
DF41D159627A738C76A6E1BF12413EBF125CF7B59F4FB5C406F1EE4D91136B78
5C79817230510AEE306E2A8210AB3558C084ED3BB9B1531E9039A1604957EF10
54D9CF26EA23D87B0170F9A57860254FBD30552B997DEF339FB86E40403C1C81
456568C70D55EA6628183AE3E0DDB4CA6D709A086FE003E735567528336E4C39
2E97DC85D980F50A9FB514EFB586B632F229011926116F1A169831050D25C448
C1D387F8D9D5E36215E3383AA10E1BBED1EAF8199FF3A48D90782CF936E75D59
976EB8799E56EDB6B99212CE68BF4275973032D3010CBA4CC72405130E02B3E8
258C754FB3BFA35B75A1CB8AB447CD985A34A41A8DB1F7A88C315533073D3A8B
0B19A69F2E8205170ACA6DAE73E1B0CECFDA4C4534643D4C892CD855315CE385
23528C89811707C8C866F963E9B9FA577BDC3F89D3562BB3D7382DCB5C5A6E6C
A916DCBD9F4FD97E5A39CE23112E826AE82DE699E18A6D051479BEB0F3EEDA73
F5F2825F3BAE2C2BE78C69CC46AFFEDCEA9D1B51A661BF85EAEA8064F611C882
38CA36D1732F92AC7D5F672FDE90B29E823B5871D5992E8B2BA2FDAF59AC07B7
24DA1B5F412653965E7AFB6A913939E5C09A568212D0274144D241949AC1FE9F
5918BE68F9BAAAD73F5FB7FA5664EB1E214CAC48F68AE72C83B16C2055605459
3D1BF65621A034AC44E58BD8DE277C0774684F3A1B041E75336127263A36DA8C
CC457312A2B503385A8567AF1791D0DDC6BC9C82D39C3AAE800193F81413222D
9BF1EAA4EF78331A2AA00EABC65AE6A81E0B002FBCBBF655853A67C1AC748BE6
2BB7BCBF7A498611DAB186412B837BBFE5770A962E32832AE9C324188E923CEB
E5CD9D50118E5924A2BC700E820CD475E1607A78166529B550EC79B48F5B9F12
01044F6A7575D0EF4967FC90A9AF60F2EC490BF8ADCE2C0CE8C1E5087BA03519
FD76FA6BC1DF6BB30C45BC151CCD6FEB986D2F3820ADCFA954E9AF2E37F34B70
13D6133796DF3B3B775176F52D14DA08915FA73781302FA86BF1599B172D1D57
D9147A1286106BA7B25720BD8ACFEAF74D0E7988E3FE1433EE89BA5EFBF09C9B
3E7464F312E094A98B7DD013C2239AB96B33DED42C6C6AD38C71948083AE5476
AB5DECD45CD6EC3E8B737185969588DCD4B11DB0B810DF767288210088D4EDCD
C4703BB0D3DB3E1839D325A2ECDD691279AE87CBCB15B7B6B2D275E279CBBC1A
CEB3FDF86FC499E8BF2C8BD24B058B49026D91EF71C158C81B8CFD382EDD3156
97ED2F29D76444DCD8471DC5BCFAA63102816E64DA348F3A6FAEDBF9B1A04C6F
360AE94D094E279F2D0585AC9EF52166A2D6B38A9B2255A8E533B5A90C9F10D0
6AA2E244963C2158D47CC873151C4EE11FED734280189001DDFE7E999C37251A
1748D6880FC7A3664CC5D9E159D02457C026A082A16F780A9557BB0388ED4C92
29AAE72398652677A5140393A595B37F5F2BF912EFF244BF9905D3B0A0D3F6CE
60052CD2DB4A6839455801B8EE4A562E74EC5402CFAD68292386D359D2DF0B93
D3964477235353BD72EA52411EF6FC9F7DBEF374EE1DBC121D5C908780B7C46B
731FE8AB6A4316209724528E695FB667331B0582E7A7640B7FC3F37446C0F12C
E161C3E88659F7E0647329DA8CE60FC49E0E1AD3E4B137ACCEFFE43E4E97A588
DA58F6242FFA9560100A26B3C4E455720F52ABC1234895B4D9292C29E266E120
6ADDD8C824ECCA75770FB713F4BC0CE08EE783117B10BD349C7FC5AF06B141EC
ABDAE56D6B210780E9B1CA2D7A9F10AE7A12924A491A0A6A1EF831C259A01D29
D1345B8D65085A3625AB101F267BA3923256278C83DBB5C41484E685D2AD23CC
6262B3EEDFC70A43B2FA7A7B90D33EBDEA7ED07040A510555C0BD3A84080E500
CBD5AABFC294B1241800E7E78438D0BF3EB9191B3524E78A630DFD6B2B1A5BF2
CBB853A34F22B21588FE0B6A844CF7C1C47A2DCDC996D95494B4332CE7A9E2D0
054FABA863D8A0AFAF5C96480645E2D582F66C049913C81C7C7E2A9BD389E5B5
B093C4A2BA1C65C5BF1C83E81A4AD63A68E81018F013ECA156640152E76DAD80
4C878EB9E96CDA9006EFD4BC92E0B303682366C9626640A8F87E8A0B3CC9474B
9F2BDD47C4A70EEE3A37CEA4ABE162802C07CB8C5E4D3104C29FC6996CE55D27
4A20FC7E94ACDD1253C024BE47456B9E79250923F73D7EC067D306868659F1E3
CAD595824CBB2029F02638DDBF8237868D85157BF1DB19BABCBF75C6EC6E5D80
AAFBBF74F762D3AA4EEF44D8A0771743CBA84599444A224F885F340100A3F8C7
BC828EDAE9C9FE4635E585DAD51586BB3209FB8C72732A7F6D3401A1F19B743B
2F1F2D78CF2D5981D25406271054E78C65F231C568189204BE50CDA43DCE8772
E107A081C734AD3F9E0A49A49405F0D9900B71C89B3E86028B1B6A043DF406B0
E75612A6FDFFD7F5AFC31EFF5BC7E1327525A744895CB7FE07CB0A98512AF084
3C8EDEAD9A8DADD19E254633B978EF3FCD099A6954EE719D259D6E0833C0714B
88FC63C255D2EB861DAED9735E747F2EFD120FEF13A1822604828543D1EDFE88
7522FDAF333022C5A1A2B279AA52EB858247E0E207D3CAFDA85575DD4876247A
6FEE9A7C44159FB8EBA3B57886F159EB897552F6D0DD58574753919405C20205
9123B7FDE6C213545EE6A6AB2C7DC9027860B3ACEB9B0BD0E6D309A42E0EB863
ADC81E109E38643217449116332A117DFEF982CC65DE6B9A179A21F9FC0ED4D2
CB87F5CCA2835586D7E6C342F39F41960198F99A07735BA031C2E2F17300AC48
A5922D106666BF976A923364230CC6B58D80F7ED10CD18AF35B1C5549A2922FE
DD4F4D7B227375817DE3183C01F55AA34F5F0FBB2707C6D42BD2F8384D2DB972
16FD2DB83C57A7DC697CDA0505960C0EEB5FE4A41D1A78D265115F4711306847
19C5AE542D53D54E0ACA02AC7CBE3F69445688C0B94D22E25B0EEB57A6AF892E
31AF87E96BA0E5FAABD19B05667A9397F0D54D58EF4D7034DDA25ECA316D21BE
866EF05FADCBA42A4E65317639D7D5A14F772D95E5CC76FE8EEFDA232631BA05
D497C7548D3F5228CC5D581C9C41B37C7B0D0F12BE4E51D0410A29F542473BDB
255230CDDA86A6832F9364C80C3CE7B00246E1D3A5C7212365D85A6C52800EFF
99E87C26F377F3BF04AC798D220D2D8FA765AB3E794B1B84847C16CDFF938F57
E7B93B68622698462D127A3D08C77A5FFC1E88146D34E4B33275CDD7DB82B526
1046B0661D9672BF1E668C3393DB85EB81371CB9285932A71978957DD4F08A02
ACEC1D137421EDAA64DE0A6274A25A42A15B49DF7F6B8CFF7FDD30857E63B4A3
5F92B01801097C55144BE7F020A2CD0DB59694A042DB5B275CC5D06BECDBB4D4
9E1D9DCDF1386BD30AC6FCF6CC1A63640F91886854BC20142127C12FD3316138
1B5BF5ECD61651C60FDC4BCA8A4D1CF3F5E6323C3B8D2DD36FF0618D391369E8
E592AAB90E571814E09A98AE6B97A59DFC9C650B99132316323CDE0EBA1F8C60
A9BCF8870FC71F0D9922F3B3EF6212367EECCC800BE9DF26787CA143EBAEF017
2B662FAAEDF5058651EE905F3B3883EEA55CDD3373807E9C1166D456E4EBDADC
8A379016186CEED51F3626ACBD3DBADCE25CCA5B0312C6DFF38D76EE4AE17AE5
EC41E7D95DBB1C8B5F1A9CF1F586EB30EAA0732760D02A923A9AFDB150D3BC00
D31A2C1993AAFE55ED0ADE1D719CAFEC1C227DCB2AD80F62B6B6B03489420D12
6BF75AA495CB8C135EC61FC114B5D9F747A19DB1E929C596B64761C7E4CA94FB
1668BB5D1D643603364325A711087C3C6E015CDE6DF3335535B2441A7D657494
B18C6D64472293F6C48C3E9AB5B8C7FE77D9EBF453296B5607D3AD8C7548EE4D
F0AADB1B274DA6CA464EEECC8A07C56120FE6F15A0870FBD5B74BA45006FA738
0705F4A77D8CFD26A1149D83BC89CDFC699DCF143122340F279827F4AEB8B51F
40E659017F8B4B4BE2307D57E54A50645CC0F2B64F8D044932168DE74022BB53
0BB548289357336CCE004C5936D68B33CD1C3F2760327E9166EA38D669A17E3A
25C6B6F8CAE53B0BC2DDB7DD2396F6972C3E3948307DBF9DFDDA0081DE16433B
0FD1A51CD36690334E72B8351C93E5C3B5D19FFF49680C2ACBC381CF0E91EA94
6E59B37CEAA85B92241F69E3B1E78B554029DFDD64FEB79262D793EC097E2D4B
F75B1167CAD4FE0D6189E512028080BA86C776DE651F22BA0C9F803E0D6DBAA0
3D1A4AEF71CAC54EDE457FD0AB909D00C578271D19D368934AF4F4B00D4C1B9F
831EC16265688BD62BA9ED1D419047F0A1FE789ED1F6B893FFE50691E0F920EB
80A2E75B1E8BA60593804090DC00D3B30E0580200E611BCEB80CF548ED5E77A9
538C56F75DB1DD61A02D494967D60494F937ECC605A9FBCA5E753F1493C3A966
FA95C6F0812EDB83F685ECF72D3D7EF29E5FD63E2AEA21B3C00CD8BBABA14F99
FC969261877B66954DB49BA0703DF0BF1772C071177C870CAA322A3369A3AEEB
25F724D9195ABCE3FB5E7C98E53CCAE7EBE0F40D312719157E8A3AEE91E5AE20
514F173411C63F4D32BF9C280354F66670CA16005CD4DE89458F1A5F1C729E0A
1AD410FF658421BE14740F90E20CA5E2EC7F75E35F22FD5939D2A67ACB143E7F
1B9F2937B980555A9716CFE70F57890235ED51158B132C289A757C56526A280B
FF354E36FCD5A79613823D5AD97C8ED8EFF66F5C6C399FD48AAAC12CC93E386D
EB4EC514EB516FD15D50118AC0548BF1035E5D7A5F3F0A0ED60CAD815AC06E0A
A9D4B36D15342D38514D2970A43E863D69DFCEB6596498EB770E705D3D0FCD78
4A5C3121D5D5D0EDF6275F23459B345234936DA122C6314335FCE2DAEA74E987
106D97013D270956C5EED91FBB0A4FF96EA4BEC7F274DF1B920F3F78A09BC889
D282F658A08130BE439EA081A16DE6BB12FE6CB6B8563C620FE1CD45B96CC642
EEEC8DBC6119751952157F82D8B3D1420687928B76CCAD7C68B43FEDB7FA91ED
1A31F42E71E7C2FD6AB3529EECB2A8E77EDBAB7974768834EC613E603D9603A1
27B82CC0755943F49916AC1B142A0C3A6E3030718A104B1F8897D98240B58FF8
736F34933DD163B135355795B07678FB3633A38B51AC25727DCB09C280CBB827
F1BE75A896DDAC1B6B6EEFC5D8C50CF604AF9893CD37443C2B70D2999730AA8B
0779214654318A0086B73A713AB234A8942C6B28E4D6A4C4363E874CAA912E88
8B4086AAE5E56D53D27104410489B335464023DC43243937C84F87DAAD1C555E
3F5352B186E25714011E95F243E1F5E55AEC7CCFA4CB366E32CAEAEDDE456612
918F75B34A4933549C05DF3259CDB7CE462A48B6843D4E9D9ED1C3C8B1537349
EED2BF171823D1C6C8A0CD7B27C90C3D865F05A45DE86AE30A6B31703AF90E04
27C892AA25544F56AC85269FA116E660A14EA4DCB75B45962F8B327580C70C1F
470BB08968DC6B8E1613358E2590224FA042B2789DEA34B4DA22FEBFE323F16F
8B6BC07430185C68628112B17C787B1A5FA86D1D82FB06A1EA68C72E85459F15
6C3C3C12EF49C0B71040FD7801AC63C42BA8D31ECD341888A6B7EB7CBEBA4D45
7CB3826C151FC1F569C30AEF1F31D294F208EED36CE70899F3279C5977DFDF95
E03AB2249254BE0DD17D6726563BA2678334B391C85AFC99764FBF94D023EEFE
E60A3E8D39C003CF553855864029030A6700256FEF24DE3F090D3B0A1C69DA3E
CEDC788E5E5A2C4D2B6E65BA0712C41ECE60C2682C5D4BE4545F58EBD5318DE1
A347C7E28D03586BAC3BA0401FECAB615C2DA0178DC64F7567730BA806EB6EAD
4A7C929A6894E3B3C400AD2DE8C52C1DD6B775DBDBBC8B21BFE4A5F09BE1363A
DCE36652B740CDB8D15560EE4C26EA4091BE6A5503286C87A2B09DECC940D8C0
50E2884ED5C90786EA04AEA56A30A072AD136B22FC25F0958C5B9979858A34F6
EA207303CF0C57978957C8310137B5D996CFA2FD60E6C70708380CE7A2AF66EE
AF40969F08B5DC06281A0EBBDB17EB011C5174ACA9055391F965E5E271300C65
039E2845110823DFAEDF7068ED9871C182FD552AB50A0F8496F797DBC7D7C07C
7D77FD190A22061874C8F8B9673DEE7FBA13C828B9AD06948131318A29F9DD72
4DE0C226684AC454F35FAFD2DF8592FD4B0D493584BE22DA216787A643E62FF4
36D75B8A6D4FDFE45D3AF8950BB514CFB8853C1920A428B976FFAB0197B7CCBA
6D7916EFAFD48A584AEF66C6953A938ACCACF7DCAED3E3A638D14F88F7B00A19
2D0A57BA816619AC30C0A849FD823D70EA83BD1B1814E129EA2636BE24053F14
A4EE2F96FC94A1B51446C65A61C217678D630269AB689AE517867DD5CD36E9ED
B4152002C9087896E9539147B196CBB51BA42485862F096185077525048D448D
31D1E5C9B2F1A58B54C833D008D474CA6280E90CFE0819A1EF47FC3AFBD6330F
8585168BB999AD052A4EB0B88E1A12AC553D2C46EE71149F292AAD02DE74A1DE
2215A03D0AF5F86CC19475A4EF934E641B7D4B5FE7AED9CD62504069A878C370
5D798D26D0693F23A38D4BE27D732F65F21DC678C8C397F45CCAC815FF26339E
A7D3D928EFA99BDFD376504D96A61F96DB86EB95F303F972D84EBA8BE5324445
37A369C0F27D310565F1D526F47E703C719A8DE9F7730752E351535B0982DFB9
D66DBDD4EF45CEE4647D804C5217D722F1026201CC0A43AD62724B3765B43DD5
C2769F6D392BCFDBFE597FF94065CDB59DD9F59252B2A3CF144C04FC5F0584D9
2049C8AE48C7C2B1B9DB83238A2ACE08B9047C6D5B90C45763D6D55D46A1F448
448A03DE530EA605C8316A7DC45304E3FF2E330C21172BB34C2D37802E3F7D41
4F8E80C36894CDBC39659F084DA812B2ED327D3754559A997670BF15A5C3B997
187B68B91714792C6C707E31F7DD83329D5EE8FFFAC6C7BBC3A39910441F00E5
051E1022E8291A2EA56D0D24C6B20A3CB520D1D314B3691A8BAFC9BB1A62F1AF
6ADC1AE145DFDAC2562003006E23652A374957FB48972BBD711F73E274FD14FF
F4592AD9784F311CA8959C7587CAEDC4618CAAEFE932D07D4F01BB799B264810
23E2AA9CEDD56EBD9155C48AE331FCE5CE85363D851E7182749780485392672C
7DAA85825F29DEEA0B32FC2A80F8A9360A7F36B48F3057702F39C01BAD46550F
C08D243AC854FE8B132D82AC2E223C38A7028689E665914A57C54FE0B63C77B7
7E64DEFF1F530C727D1A33143941F42EAE2FFC245AF32F9D5E79269EFAB689C1
9C5405FB31098674DD606A1530B039D6911EFCBE04F7985C01BC2440874BBC4F
C9A843043E8DC5506F68FA88CA28172874F6732E553BBB85602CC32F5CF64747
8FDC51EB42870E82DCF6864602F39788C316A905211DEECF8D3E747CD2BF89D2
0011BAE6E873CA165AB47C029265F782C7EB59D1DBD9D61448EDA87971A9168D
F38A015F94BF06EEE8C115173E43595E3898AD03AF0F3E3B7C044DF2DB92FCC5
D41B161E84AC9195E630B1E664DBA9F06513C0E046E77CFDAF9839DAB485EC48
633FEEBC0EC36ACA57F4A6CD127236446FD232457CDA088B7A2E0EE72D954FF3
17BC8F26EA7DC6C80B4E58368FCFDB811A520E9DED833202FC247598B6CEDBCC
1C6680AF3E70A52E24A253AE101DD8D8D01F1581C4BFBE88DDF593BCA9A6670A
3B4F5E423BA9EC4DA10D30EEA8147B159E98994120D296708C9B66C5A962CFE6
466ED2102CFDFE686AD4A0B394421AAB03A69F42B4D0A80B9A308473F0B0A2B8
BFED1500128C3A4E60A16AE01412D52ABCF59C3AC1EBCD819F4D48260EC1F22A
4115185C1BB6406DF9DB12E013F72BE232BCF73DA326056A8A258DBBC37A80DC
4E785B8BB70DC6E134BB2EBB888031521B3A0C772BA673AEAF4EDC82025A32EE
E603030A437DDFB0E190BC527B880EFA578F3173A30A0E300E284A5E2B5DE398
3196F90941E724BCE0ECCD1547A77FA35E95352A2DCAD1F665B9DC5C1B7A7304
DE34A1E9A6F850063188EF1B63972EBB9BBBF97110C04C5277CB116104AA2FF2
CFDE7937042F706F69BB4B753434B578A859F22CC0AD4E1B4E4678088AE3A5FA
5CD0B185D3A4376AF566807E710193B87116CA2A3B9D3F198C346BEC9E023532
3C9C978C6C186F1BFD5F3E50B2A68926DB9A17875EA63A5A7C30F5975A894242
5423468F66D4ADD54B33769A472BBA5A8BAB26D8B4514C32C288121A1C5D11BD
CC9DFA1F8CEC6817932DE08B54715F88453B57BF556559CF1DF81146D51A2B75
77B812A5DC5549D1569C438124819AD053FA638A09823BB4075DCC455278D92E
EFE0F4A095BBD7A1BD5CED970DAB6E365301163BA16705DEA609F92C2298B6D8
94B13F4D93E6D5AF1E58478827C6B142780FBA6ACFEE2825059D91F6303C464D
66C58D2D308919E5FCA6086153493C2E7B99620999EF0923AEAA69212C2156B4
B82C6C179E61396F45FE8A5D0D8D6B02CD4F8B80EB7AA6670C35AC0D64C721FD
78230C0AFF50A91C6973D828F2BFB06CC1D3BC2586CC820CC09D415DF19EB647
B246162D1F956D79277EDF3B579A6ED3E1440E7D719F880514DB20042EA6242B
80C63C5815899BC7317F3FEAB25BFE2C2BFC54A3016CF296CB95C83D7D517DF3
986131A1A5D44694111543DA88A0C5453AD94FC4B092B2BB8C79873294D4CBE0
E5F2058B8CFBEF872516BEE325F72C1C7473471774A454B7AB3BAC412D556B69
0769491DE5275D45928B4F4958258CD1D5CFA109679D64D899BBFE66BEEE2A2C
56AC58C562EB5CC16DE2D899D6D9AF7B4DE552822A955E5B3C226B665FB5208A
3BF4E75CE4B1E7DD8EA9D9F47B696753D233F1CC761F5C0089FB70B4D10B140B
8CB4AE07F4003F1F24F858A87C576A22CEA94B6BF927603F6CC6E8084F23E29B
A30C7395822A97A22DCCBC1CCF180B02BF8719606EAE3F6A4531397ECCC1D24F
5E70964C77521741FC417ED4D9A065211C3C14849DE684C360A52782FB3B09EF
E7ECE135494D96834DC399AA3A987145A1920E434672908B6C52F994E54B426E
E3235A40481EEC78F548DC37596B396CEB6F419B4A05527B405AD5912FFD024F
79B109CF89A8F1ED4DE67E45408BD49158112FE78DEF8D47ABA46FB9F3A39CA8
0D9E6DD89BE384DB4577858135F1C736ABD14C4BBE988B5B74D0F108BC83CAD9
BFBF39DFF505705E62B81837D3D34F87003C7981CE087995083F59B59F3FFD3F
EAB71631F6ED2285B6E57EECF6A1E8D756EF5D5E1FE1C46D3F9C46C1422EC378
67A049B25DADC01349EA2BE20AD3C8D9944120D999A2FB1F184A71EAE7F56F8E
6A139D42952DF4FAD3A17DB262D5CE2FA68CECFC5F8376D5E8B2F0E942C255D2
DBD652A35111A80CB0F93C11D33C9EA52BE8AF9D9A3657079476D112079DF988
8CFFD9A2BCA381BEA924D726F2CA3081621EF0116B533181C1382014403294B9
E99EE9F39C4E2EF5F4541D57A25EB93FFA4806F1AD0D3C40F20B7B4305DD63A0
05EFE033E4C0DE2C48426D9F48130BA95341849EFE3155C2B6F32C134E048934
A8512CC0205395FDECA0B49A7E1A449616983AC4AEA17B44E6EB3D479E0ABEAC
6AD09FBFA9C7EECFB6686DF4B6B5A6B0D00B9C31EA49B54236D88970C2AE83B7
66B70F55C6956E172CC749C1CA506F5E7DC969114F2E35D4ADF51D65EF7885D8
30EEC24AB07E9E87B91C29115F7C4534463F4B11A361A7C64CA03020924117E2
BAEE680F859AB475BA722EC42B739DBA07369CCF164E1578ED5956306B029119
E415658CE0497AD75D22936D6019AFE071AADFB8EE483B6B21370083AC0D0DB4
B22186CE41DE63745AD2EBD5FE31FFD674745898CA0BFDFCAF378F770578CFD8
E89B7DD38E33990BC9DD9A959E8B41E0396D59AE2197F63B9B99FF431B582054
AAAFD7FB31AF5BF793058F1071B052CF2BE443ECEA82CB8756F18D8767AB10BF
3E7E2AEA680AFBEAE1BB2A73767902D76D4746136F52B8D3BA364673B25C363E
8499ACABEF588323A7D2EF6DE64B59C778A207771BCA98D4EE1460FBE92C485A
82ED0F634B818132CF8F0C3008FDD62FD78D7D4AEAEB4B962BC1E88FD8314C8C
851E9984E41C2E8A063234525F9B1B0E64519510445348D93A679FF8FBAC84E5
3C4EB5A6CD8DAC3C56B34892539DC88B7355BFF68D102B9953C6DC7EB02F8567
E262F1D17E17DAAB949FD3EAC378AA20E2A502B5EEBF859E29F5EE63E18EF135
66CFE679644331D83C929646F38CA42DC6C56D163A606F366FAB2D5296739418
29A1A67F7E3BC043845CD09634E879AF95D35C3B0C25C946D72A2771D2864475
EA17162AD16BB495F473517B797D48BB41F206ADB43C1833CE953DAA107BE123
76EF95A3A828C7C2EDAEC149F4D7E86F2A35BCA7FA0A868E94F0C89AAED77079
CEBB0511A3B8E383BB6AFC890926ED6D05B655D156C2A465398354FF4363F21B
9F4C0D1E0F5A2A87814CE592DE9FD9F700251F4C34FE6F868D92B4FC5ED814BE
3602CC9BD33F927A1F4DF5C207C669BE03F0C56928EB0D2D854B7FA07EF087D4
134C8C0A822B3314A9103E2AAE72F8224C513DC33FAD02A95F13060558C901AF
C55CA086EE2014C8DC42D45A3C86B05D199495A5B2E832FC8A4E9B7989CF19CB
04CFAEBF63D99982393F99376AED871197704D42FFDAD40DA592B703F393733F
DE33A419C645B8ED68859D4781CD9056C923D61D0C8E4D5D6FB249645789CE3D
62245AF83EEABD76E88C541821527A2A8E5AAD780AE917277C1BBB5AFAECCFFB
81CB50D9B37EC5733632BE3C2AE4BC405B46FFA232801C1ABD5CD8448F45852B
C77A1E9E16714F0E23933958826D78F563E46C4A7CD0AA4950952416C5C2159F
7C903DED096014C45BF9854E5869943A118E7B0988252F743380B6AEF9F3985F
5356D3A1AD20CE068914C7ACAD95FC10A455080F4AB17D4ED459E3F499AD7F58
43CE6543A5E8BA117AD06B89FFE4E5BACA817C2FE9DEC3F495EF8A71B1596949
44A51F3B66B03B6B71846E0DDCF3608ABE81D29DABAB6A2AF5904192D884C5AB
EBEB1EA09E652D63F6D895A1336D1BD67536BE0E038FE75BB36401D597CE0375
E7930CBE10FFB4EFC24EBD6B34A65CFB823EF36233E64306A2678DEB03AB7670
0C0750E5C885CAAF879D6AA3C299A983FCD490BE801090622D8438797F42761C
2C3F02E3BB71E26FF3F53D97AF4CB009D7E8416102252468CA95E0A53308F946
FDCD4FCEDD6E64FAC8A8CDE0E28EC5CFF3B38425B9FA42F9A92CD331491418AA
34DB5A57DECC467E629F261C0D47BB7B68F7932839AB5467F99CA90CC0986B70
80BF460CA0A1694244BD9BDA8504AABFA0CC28584ACCB8EF52A2DFEE0240F556
B569F3AF78E17B22691745E37C8C7CFE8D27DE95DD96ACF5609456A7ACF90B69
AEA87FEB550B4F59374976FFA79A17178048E73DF8067F7CB395287958C63E4B
EFDD1547C2F45D0E7891A53D4E112B3E0B2882D93C9C1CD487C2F17F27896FF1
9C0BB19C6DCE824D80843F78C738EF342587264F32A8ABEFCA78A67AEA359E06
1FE31A4D49DC6D04E7BA67832BEB77DECADBF71C69BA76CD3D7BF97C277DB35C
BA52F699AC3EB7B6F5B98742E11BCA51D995C0E45FD619C8CF736868357EC487
5E24F12F3FF41DAD38EC1ED27D9FB09B31C55556497EA41AF9B39905E68E4BC6
D1333A08641163BE429FC18502A503BBA6382B0A116296B7A739444F400D58FA
4739616AB3FDF69A523B5C9C75B318C6D389C31291CDD253646FBD66628382AA
86B7474FCEB35BC935388CB499233EA810D6DB0B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 78 /N put
dup 81 /Q put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E3411E624530F2BF04F22CEA7384122E6DA850
F1FFF8FDDB145500D77A97A8BF392606010F944ABA543E1EB498D32C9487CE50
89F7ED4D8217F1F0DB37E3F94A7156FED518164901F83DF3BAA6A0ED3E1145BF
102DEAF39BDC40B3CE28A9BFF70E85FBE7E7CFB5E76F8BA6FDDBAE549A9D2255
05734F3063FAF5573603F2C8E8BCE41C4871F6CEC22A583406AA0C6AFF44BB55
9AB595949C052C711FFDF511E0F97AE2B7914DD0527F534B891D65AB0E87927B
11B512ECA19AB7E93940E390432B667AC78A68317B8515A3BD7800C5165689BE
A06705BC9AFEE299BDC34E312082BB785A7A71D4672A0718D2DB628C48C8F4C1
598B54855CA39F99E493D9130032AB4C1C83A4A994C117F8DA1FCD9013BD4B8F
70DF2B9C4020C09794F67BA6ACF33CF4C99F8FA8500DCAA0FBD7FE0ED9DB4DB3
004A57E094DB56BDDE99397506DB4D41EC266C58862DC40E95DCC8CB801C9AA1
764DB2C24EC717843620CF8FBCF449D32035B5D91D8944B9AD7ED0894D09DF4B
501894B48A59841FFC17CD5136F43A7A7DA5B2D38274FAF8665CA6B81B86BE4F
16EADE0A5C9E555937CE96441ECF94A72E872694C00EE9EA05C43CDF690D1B82
D6399C9E193268C60D0B92EE130F5DED6733F00649677554FE0FA2A5A6416617
A6D6AFDF832B4DBBEE2065A7C30C10855F277BBC18751406F329C2EEE7D1BA8E
AF31497862295A199F0699F436397D450CCB3320F2A453BAE8CDF8813696B480
EC26224B7E4DDBA0C3CA5799D6F37B729D685B79D796556DEFD53B3512A3C60B
FE852DE1C922A0DBB1ADEE3FEA2627E46BA471739308BBA8560DD6197A68A158
BCE4AC87E0D83DF71977E047FE3A5C408B18B11A7C422A621F151D183A33B490
585DA64F3063FAF5573603F3F32E8FDCE9C6539CD8C059894E15261EBFCBF328
23D44652F97D332DB47B0339D58D626377C4CF4B5FBA6436D1EE728F60B95A7F
BB4EB2423B73B91C7645170C1865FB0D628AA77CFD3D38D463B91762B05D43E7
6AF843ED9E898E52F2294A048ACD4C8E75BBF5F938CE131DBB6825D3CCBA2453
4C91270707348CD21F2D93F5377996B9B22008E4F6C7E91C843F26EA220DAE1C
E0B271B7A98194414CE2A307CB58755BB9DD8D0F6CC948863A362446F6E61093
F39F3A527B3A66CD5DE540C097F4397FFDA304D5A9A4FCAD4BAC08B425ABB9C0
0F221CDD825B16BB109FCFF59679A4E12B36122E9AD7DC522FE21ADBE167A093
D0EDAEDD4C9887EA620189426925E38C1DBCFDB2BBFD3B4C3ED860064BFC2135
656FA5E7D7FE1C80B397781205DBA94784CAD1CCD4ADD62C06ECCC4C3FC9AA4A
E78085B140544F417C5AB969D467A63A0E9A97C96F5ABA9035C6C9BE0350BE03
C5A99C13CBC41F58ACD2E3AE90D940C31E538FB0042CD3150193997BB9E21C17
C1B2E13F69F01B142C2CF6E7F82ED12FFFC090A0F11CDE302C3B9274F511C003
382206BD68D6A15BD2A472489AA314FB53E4465D66254DC49C895D0F9A7A36B0
7483927B81C0C254C12254E8859E93A18CC5364E8E264F70DCFA882EF532E8A1
EC9C1579E38C6B09C205F85CCB1E15630F9ADFBE7A064AB27611B925535B7D62
8CD5FE4E7763DE8FB42743A8E94C100B802CD4AC6D8C4E6B3B86CE408C6C9073
442D9BDA23430A6EFE298EBBED106E4870BFB7F97C163D5DBF9E64ADD1F158ED
80596695C9E75334C69940975F03942C7C4C30E6FCE695ED4BAB3A096E041031
730EAA03E5B3E50EE3324D92FE8C6A7CD50E6250AC2DCF42B274CCF5CC4CFE31
E676F5A3B8C455ADB81C4959CCFED589476AB20B87B95707A528FEA406D531D5
FEC03CBADDC64FAE5A7E97E9A73CA30161599DC0B7123EC9B51A484AF22AD23A
10FBBF95A446F9F7B842D6DC654CF0FA951D7D13FD19EE82610941AA2890A34C
3B8E6011FCF5CAF4EAB6327207B945B4E17D86E1065460E553664C658B7BB1A8
06BEE9A10768AEF55A44C81C0EF0B94E4002A7D99F7317B39B9B7EEF4119EA9D
226DFE79931AFCBD5449F1171D90399FB4D120863DCAB8913FCC496BC1A13494
437425025062F68DD01952DAD9F8641DA61AFE6855C21F688571B4C2C211050B
D7C37155D7916EBDD275D3491DDB1EA8997CB1FAD1DDB0B0F7E1BA187B28AFB3
A5EF42872E234E3558717C5F2604C57529CB96B1CB1235D6FDA07E62FA08481C
F7035CC5CD1A37D0046B3A5695F0B1DD9F9D3B651BE53DDB9590EF6C925BE45D
D622E1CA6411599ED5FE1B5EBEA819E5D5245FB67A08F7528C3970C83AF5478C
4289AA3D145F9C828C84F5F5C98C69E1D6FF64AFE0F6D35EB93368925D3956DE
1201275ED6782290F8295E9C37CD25A8D58CEB6C58688B04820545612E3B81AF
FB0AA1965D77975D85F62F57F73F74C69B9E866AD5CF7D68BE87DFE3B1DCF30B
055678D53543684DBC7A5F5D5643ADB8FC3F53521F1D1052FFE55249A5B5878E
C98A1CAA928920500A90C571B1B7D08F2C709EE308B192160CA1D324F86641F2
DE3DFBF3E62D478CC1D61589E843A8056DF5B54FF82BAC3A985650E94CEB1FC5
BB1199C753967941A1EF20E49ED89311F35BB9B9F11C8393A303404083046861
51F7DF919F1119E9D3F54D3368AACC40AFF376E9C053A223088BF264A45A811A
3E2480B20DED62134310EE51B3A55836200A3C27A6C933685C50C26955337C7C
092F1A755126487BAC0B486F2B0D8E7AC2821C59FA5AFDB70F883ECBED88CB05
50363675159D84A7AD1F98A2E588F1834E97A5BCD8E1707218C9A53B137F00B5
FE2DD8E327E5F88D7B66318A9537F11DA3C29537CF6AC46B28428FFB2427AE2D
3100331745CE2228E374C41D67FD4659182F618ACCB2266059640A8206109D94
308AF10B78ACDC637F012D746B4F930C91E6DF57A36DCBC758536B24C35C9510
950BC11E6986176779DE75E53A8215047C18FAEE5A7877951582B86DFD9EDF26
912F853DFF43FCB14DBDBF63C10FF269419C2CF0EE5CD7FBBCC82DC03E864BB5
79F9A68D3A7FDD31A3C7D6DA6527AB4A27F285BCEFE267145FF4410788AB859D
CD98613BBB28E6494D89624E4324741EAFFC492D8042CE0869553F3F0A255AE8
F371A549EB41C39400EE0C25E346E6D6C2A74FBDFB98BCDA5BC4DC23DCC6DF3F
F633DF1D4D669BB672A8A9324A7AB3A8FCC2EF9A96A4A3ACBBEED0019471F330
FE9E068CFB0B5C3FAFA62C18C967ECC2468E0494D23E825AB1994A0E1F98185F
2A97039AE7184F02A76ACCEE8C8A693EFA1E8CA57B4B569E138FA8FE89C529AB
13B2938837D65E55279C939D38A7E62C6AB509B3312E185FD17E3EB08899D814
1B761E034935590D54D6EFA6274B0548F43717B4D28F5FC2D2579F6AFEED690A
E0BA7BA7024D5C21BBEBFBAACDF7D1CA531BA389AC1767A5E025900ED6A870B5
6267A1578C527AF4059BE666A492C6D74DD9F6164AE42828C775328A58B2385B
B3907F71A838288223D67AF949FFDB307241FDDF9FBD9BDF768ACF4AC9E5BA36
DC2B321D94FBE4729DDC25B13ACDFE4E46784845456273C43D003D63DCFA3EE1
448A7E5936B1AF81AEBD1E3F86554F53938E254ABF946775A7071A6F791DFF87
77E7A26DC9998D0370427DD413D16131DF482C75C02D551520A77B4744C4497B
DA4472489125A2D84F0097AFA6A594140466DB416FB866D8217F7945CC480964
BA125F72252B2DDA31F2483E2602C4DE90BF8EF891CE853AFD15A7A4A58AF389
BBA87CEA314527A849CC5093CFBD2670D075157319976BEFACE9BF5E6477B486
CC59D8FB8618CD5F227A6BCAEC75FD4461E9AF3AE91A5423C8952566441D724E
2E8D6587A74878332BFE0BCF73902B0E9E1E953BAF21F3E2F0C5D0FCD4D4F4AA
F0FD4568CD0B6702903594FE0056040A319CA3C8CD34865BACA9A0CB2E9A07BA
8175F9E43403DA697CC79CF8DA1F0879665D685028CBFE8EDBE4AB0837C4D628
AE380FC6AF809D142D0E1417280E803377AFB0C76DCC3439DC326C80379F43E2
389542AAE6370F23D15FC506AE2B0437A4E1D8D4EDF203CBD71C232C30CB723B
091741A421E81ABCAFB94EB1761294C84500AC251694335E3FEF6CE429F0C0B1
9752E63696A0E0E9C12F5F98229DE2E179F543E8F7ACBCF72733A07375B360E7
4F86C6F4DDE84036038C419ABAEB68891D4EC2C4053C131FD585601D33C5F3B1
617EDAE96BABA1408324F92C60936019CC35BEFED55CC75B320468E9BE5C10CD
0E9BC5514360CB49D01C674BC8FC1F370B8EF783301D0C945A51A8FADEE44153
6948A97BFF8679EF0619B259D7430B4926B67FF71E8C40C0E6EFF880DC6A5111
114D82F0DA0C1093FE6F351623E04664EC48B09164492E44D255C0C34833F9DB
C78F1D1A77249E23BD7F4A71F26F94F6FDBC8311E0E89B694C6AC0601B8CC94A
B268350F9BE2EDD3F0033A74064542FAC667E75B43C554904CF325828CCE13BC
3ECB9F852DB555B2CF8C8A3C281E2F61B61B93D727579794B51BEAE68D5EC482
289247E67EBA0143703B2578795BDFB3D2E3FD4ABF1DD34F8FCCB58FC0535B66
AB2E047C3F7B8312E3146561AE37EAC497B8BFF66A6DB53A6E47409259BD5314
203DDDAB1AA910AF4C1BDB0CD170B200ED45785D6A3BC38227B0658CDEAAB15D
F64BB47A21F2090D9CB96F80B1438E91D8383827C393435F951F698E56CDC205
020DB4A0FD845196F89299D78230D5EEBA54B8B93FD16D8EC1CFB730DFC87BF3
633472C95F415302A9248CD36C684B5DC2231B4EEA3A5E00F8733FC953BE0147
DD3F1AFC5E545B66A3FAF8AE440155B43DDAF0B3FCCD560A702883D48FC3ABB6
43873AFB20D792DCEE05C667794257EA40FDA25F0EDDDEF69071618CC80C03D9
259B4E147498179A1CDDB267A89D3ADD8709DD571B8872341846A6ABD08EED99
86B8F03915EDF8415B64BE296F48CA037B284B96848DBAB5B08463C701B43B7E
CAC2B346322984653630267BC68DA67C74A4632824D5417BE8071E15E3E23C6B
B366DDE68088DE4D012363CB6BD694A5FCA43F508D633AC3B512539112D90AA8
D27107855CEEA881C2F33693D6989956050282892C837D12161D05F29069A728
AD81BDF605AB8C606BDF94FC6B51849B8B8594BD58B7FD823E22CD0E1B3699BE
DDCC2DAA595FE4242AAFC97B1F386D3B1D3813D3F58E39CCE0761F86E71A0D94
286DCD9CE34D9260CB9785F43523F0C8066F07F240E2B1A8EEAD577FCD4BAC85
2B6000DE6DE6742846925972E4A2EC0E6DDCE77969BD79B6D395716FC2A244D4
DC09C24AD00FA3186F28D25A55C9349C364BBF41B70524E3F1BD018CA149D878
559993B9466219EB28EC67AFE1FFCB4220CC7534079FEF628944FAFD9419241B
E27AFFA23BDD2006E8D11BC9228A0DD590069C443A001FCE5D7EBC7361A4B12F
12BC633C991C319623CDEA8F54F086828BC3FE3472DAE7376689DB34805C3AB7
8C6E2EEEBB9129550948CBCD532611245FD09EE234152AC676D988C8920D619A
0DB68E5FBAAAD9C02A44CDE91373827BCE0342F90F9B055A6CA64124F1E4F7C6
151348BEBD135DA8F6D42AEC8DAD269D505C930B082FDCC1DA6C2515EEA28E7F
E373200E197DA7DC13BF769C30F01E3C28B0C54396FD5865A82C4EA640F9E9C2
DF6621ADA977B19544BB87170CA450DCB53594FFA183EFF8966D8804BC8E6E0C
38252A5D34D0EC931B49011959A94743612FE90A92E290B7DB80C0340782B4B5
C48017A36C6FA3F4D2C7245A1E2045515F94265105AEB7C5D917E805CD12CC11
5E447279132448D58389A07A0EBD874CED36321221F51EB23C7F152557AE13E0
718FF5E205D09188D916981DE4D7D19CC266A1B7BA7C2F05CFE067D68686B76B
8DA475DD0A89CA89FA769C38F7CCD5F50411AFEE9950FB6D0A2DB14ECFA95865
46C444D35CA15C3EE9B414416C8913C906EFA6DEF06024EE1B851A780CF4093A
A81D621025A3C5DFEE5596C6A23BF14C5C1347516782D84F0900112D43DA4DA0
B3F362EDB66A2A7388DDE7EADC1746579CDA92C1F7B3B3EE273BA18DEF06B294
A436F70B8168F114AD0AFD0ED8C1DA5DA03BC9BB0DAC2B0A90662A7717803157
932546248E98EA04D6DDF08127CA7B1252EC5ED1BCCF96B6BCAF3C104F0B3F53
D2D71DE6629E3543DF9E0D51DF21F7EE07035CC1B71F9E288975A5B25E741628
6ECCE259CF0C15246A834A081AF12DD92419F7E72412F2AFA419D6494F16CF7F
D2A4BDC9AAB2C0F76375259F01C2A3F99AE77ED6BBE0F3D7C9869DF9CFAE9E57
F3A724FBEFA9E63963ACD7C7818AFCE4FA5DA023BB8612E7D8186B2D543B791A
45FB9B695C2072DCCBE8D559CB32268B7A2414ACFFABBF365B5F210FD9AFF2BC
53C9B2B29AC05945A755A3BDDBD6D294FD5347F653DD14A8B5256F4E235BA5C6
C8AD32CC6FFF6011A8097E3C1C3937CE95A9D6F3961E3FB334DDAC1FFAEBC801
7A7DFB851E2969C2048F559B34229811F96A9F7F1162E5B9790FA320DE9F865F
A987D5A186175D835AC4CC7BF20486383B17B02CE89555EDED87EC28D4471E65
41226BD8AF5B30443DD17C4865E7729AE0EF438CEA9D3D8BADE9CABF3A5D10E4
EC72D10FD0DFD803A353F2A5D0C9854ECB0FD69D326E8C676283274ACB0AD204
7181389C24D72E92D77F4B6465CA6B9D617E1F4F8AD2036A34031304EF88756F
5E21674404D337B08A2AD90A5B78A5859D3A87BAB89FFED09898320DF1E131B2
D7C8BB9AEFE686C1BA27446BD5855EFC5AB8534CDB11869C8C58263A6B5D5E31
F1EE4BD27A574C07DA643D1B324D9E668F28A8BC4D4A278DB44E6BD9F89175D4
2536568562F3705E67634719C54097374276E241A3859C5239F3B207954D5447
9D1E827FF2EEF8F2279A5FEFE49BAAAC82F1E9872CFD6C21D7BA193217888DEF
ABDF878761152E614186F2CFE7C05043B104DB4ACD100BECF54691FBBFF074D2
FA5AD182336F38CFBCEF7FE014AD2DCF33CF20E265552EF222F9751E473F0DFE
32AFA35B35330893572863EAF6D925A47F81733296BC1252B39BEB69BAD6B01E
1F27D2DA45A2D2EF062FBD227C5DE9051B5BAAA6C5882994A45BDAF137F17691
DEC1D1A28F066FE5A963B81547F49169E872D71201E7E1052994B36B63D41FAC
9ADCB018B472AA7850DC7B56CF4BA48CEC9653B0F61FF01E2E23EB64606586C6
1BCC4ED1571E491D45DE39B5A8C5BCBC32D2842CD6B3B889365E59E5D8E23601
8D2CD050B515A1541F2841CF8791D994F31D87C8FD5E8987E6E0A07E3D6D6A5B
1133C3B9B25A372CEE8E295040FCAF308DFECCF9E8023A1E631002BDEDB77BEB
5A311DA832183BB0163E58657CA92E9AB9001456A5FE4B708B16FE6B0BC59DFF
669A633AA0AC168D569D07C37C218540177A99423C34FD589B2C11FAF30B317C
3B7C0E7B33977148BECD61E36F3588A998BAA708466BDAE9A4337B18A144E820
1E6C10A608E2373BFBE7904AF92FA9DA4D57826B424ECC11077A8950577FDA25
0BF497948B76F36F22E7360620E7B7309BCEDBA60618ACB6BCEEB641F79324D6
0BF1F264D5BDEA26C04ABE14F90C214C118A432A94547A9836F2EFA340A4328A
41814A31FC401E41685B220394FF965DD81FA9C6F5967DBCE349D8D1213AEE94
46192843643B88B74C6A72CA59CF7AEB4FA64476D492E0AAC9281D6F33F65819
37DBD69310DFE57ACDF0DB0ADFB0C23CB5D0A77D990CD97344BB5A48166D5F96
3966D4DE0A2654151E7C2351DC3925FABE3AA1D301B930D0264497B6DEC427A4
5F7A7F2F7DF3EBCE74B8C914236A0FFF9DAADD5A2666AE6236D775B307A2CB15
64547298DB93641421436DE99B12C9F174F2E66B668DD1362572F28AED88677E
FF42ECFF9C2C4CEF6D81FD7DEBA5489D0FE3753EC1EAFF4033FBE49F2AC03CF7
C5060528EF8549AB2253DA2BAABE8DAD9F9B801FA05BC34B45B7F4BD728B86FA
9973C4CBFE03F132B97366BAA4ECFA3FEDB287637AC2F487FBE6DEBE48FF2025
7C2A707A391CAC43DFD8B66E4C2A65197D9F7D539CD585EA4A76112934A5A1F6
06C652C1BE8155A8D3DA25EF35B6CD9AE37CFA868C50983EC1B58295A92D95AA
4B84F47B9CF4F79DBC35A94283270D2380A0CE450043C26E7BB2438A6CCE8C5B
421E37811C62B018C9D2182A9E3D99258B46486D40A0120B6E9CC644323B7710
E5A690ADB4DD4C37C77ABD081C0790038B80117F277E4A8ADA123030F63C9C85
54E646663A876ADDECFF7B1E8CF26C916CA64A6CFE68FE97E5711CEC113C5AB8
F37C720A40A6550E13A7CDE5BB349A1B12303B681ABC76669E1F340CEE3904D9
EBB590084D340D140A7466927E9C9964E0A1640B530AF42AE712609F8476C15A
B2C42A8710C0C85A2F93516C18D98479193DB0246F2FDD9AE90EC412464C7A0A
FDC1030A05AF67380DF6893BBC85DDDD059267D7852B8F66C0774B6927C5504F
4B30B1329BD2C6C0C51B4ED459EE8DB2B04A68ADAF5F89CE991992A3280F6EB0
A9056B6CF303A62ADF96CC65760442A648CE182FE9476619DA637621ED4B52F4
40D2143E2190724BF5F0E1F156BCD4A22C3EEC30CB3EEFEC63722C42A1F0543D
27EC0A68DF97126C5C44F5A1C97C404DAF43583AD2CEB78D8360F24969C341FD
2EDC25D0CD9EE703F84571AD48553462F04B27880B77E24D55ED22D14E0E7A7B
744705BE722906BE6B9A590279737C247BB029809B78F16BE695A52C2B3A653F
417474014C8EBF86B37EEC81ED9D6BE383ECBB9D6D309980E6D353FED5D6694F
CD2A0D312E896351F36D7E664239E616135B27CBFFAAB158A6E9CBF1EFFCD977
7B8823112F9DD1AC87EE67FB9C076CD84DCF0AC8BCD89E7D8173BD14963A69BC
439E521CC08E3E7E772A45C4505DCA2928E385A320B85DC94C3421C27C177A44
FAB5666F2392D7083C12087B6BD85A5DB8AFAC41B5BF79965E9C49AEF5FC6F60
37240CF3357F325807F9C408BB2BB994AB5456801F53638BF46AE3A8BF4F8ABC
2755CD157FEBC6D85BCDBAF9EF1D4C0C97A34963636671ADA96AAD8C7E05D94C
361E151E30C640EEDF83BDA342B4BDC4428DF138A67F5414EC2C59573580A366
0004D4BA4BB3A97F42D9728FA5C3FFD4598A2100E1BDA606030BB7459DCD617E
6F1D6A76FC54C82F8DBFED9C9CD5016071600D7711BDA5097080764696567B2E
982B8891828EC1503F12299B77FC32DDEA492CB0FBE9B50015E0212ADBB4F949
5BCAEAFA1AF4AF137E4B2A18777EC64DB0A10DAF9FFC6298EA2F4E1217CCCBF1
2640A53D8C6DC7B741E297B2D58ED66929AB79C82F12E71C6F4B97F8A24F0AE1
F52347C687003DAB78E902F11E931C38C716C5D041F95626ABEF8A03565F5B48
E59E50AC7BE67F6AAA34E8AD1D0850CE3EBEC84389482EAA14E3614CC95B476E
2C4EFDB0A3652EFC34C36A5AEFE5B9320EB7BD9155F11DD1A3C382CE1AF6F3D6
4E7BC70F552E51CA0F01F93A34E2238B24A6C734956460E8D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_Writeup4.dvi)
@start /Fa 133[50 59 1[81 59 62 44 44 46 1[62 56 62 93
31 59 1[31 62 56 34 51 62 50 1[54 9[116 1[86 5[84 1[106
4[88 1[70 74 2[80 85 1[53 10[56 56 56 56 2[31 37 45[{}38
99.6264 /CMBX12 rf /Fb 134[71 2[71 75 52 53 55 2[67 75
1[37 71 1[37 1[67 41 61 1[60 11[139 102 4[101 8[105 3[103
97 14[67 67 67 67 49[{}25 119.552 /CMBX12 rf /Fc 134[40
3[45 28 34 35 2[42 47 1[21 2[25 42 1[25 38 1[38 38 42
50[25 46[{}16 83.022 /CMTI10 rf /Fd 133[37 44 44 60 44
46 32 33 33 1[46 42 46 69 23 44 25 23 46 42 25 37 46
37 46 42 7[62 1[85 1[62 60 46 2[57 65 62 76 52 65 1[30
62 1[54 57 1[60 59 62 1[39 4[23 42 42 42 42 42 42 42
42 42 42 42 23 28 23 2[32 32 23 4[42 23 19[46 46 48 11[{}67
83.022 /CMR10 rf /Fe 135[50 69 1[53 37 38 39 1[53 48
53 80 27 50 1[27 53 48 1[44 53 42 53 46 9[99 72 4[72
2[75 5[75 2[63 73 69 1[72 12[48 48 48 48 7[37 37 28[56
11[{}36 83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 4) /Subject (CS 444 Writeup 4) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -2 /Dest (section.1) cvn /Title (Design) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (subsection.1.1) cvn /Title (For Best-Fit Algorithm) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.1.2) cvn /Title (For Analyzing How Many Units of Memory Are Unoccupied vs Occupied) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (Version control log) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.1) cvn /Title (Week 1) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.3.2) cvn /Title (Week 2) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -4 /Dest (section.4) cvn /Title (Questions) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.1) cvn /Title (Main point?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.2) cvn /Title (Approach?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.4.3) cvn /Title (Ensuring solution correctness?) /OUT pdfmark end
 150 0 a 150
0 a
SDict begin [ /Count -0 /Dest (subsection.4.4) cvn /Title (What did we learn?) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150
0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0
TeXcolorgray 0 TeXcolorgray 1738 1009 a Fe(W)-8 b(riteup)32
b(4)1707 1227 y(Alex)g(Ho\013er)1544 1327 y(Nehemiah)f(Edw)m(ards)1821
1615 y Fd(CS)d(444)1735 1715 y(Spring)g(2017)1767 2051
y Fe(Abstract)251 2269 y Fd(This)g(fourth)f(write-up)h(details)f(Alex)h
(and)f(Nehemiah's)h(w)n(ork)e(on)h(Pro)5 b(ject)26 b(4.)37
b(This)27 b(pro)5 b(ject)27 b(consists)g(of)150 2368
y(adapting)e(the)i Fc(slob.c)32 b Fd(\014le)27 b(\(whic)n(h)f(is)g(a)g
("Simple)g(List)g(of)g(Blo)r(c)n(ks"\))f(to)h(use)g(a)g(Best-Fit)g
(algorithm)f(rather)g(than)277 2468 y(a)i(First-Fit)h(one.)36
b(Finally)-7 b(,)28 b(after)f(implemen)n(ting)h(the)g(Best-Fit)g
(algorithm,)e(this)i(pro)5 b(ject)27 b(consisted)g(of)185
2567 y(building)h(the)g(Y)-7 b(o)r(cto)28 b(k)n(ernel)e(using)i(b)r
(oth)g(v)n(ersions)d(of)j(the)g(SLOB)f(\014le)h(and)f(running)g(a)h
(test)g(script)f(on)g(them)1155 2667 y(to)h(ev)-5 b(aluate)27
b(and)g(compare)f(their)i(p)r(erformance.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fe(1)77 b(Design)558
266 y
SDict begin 12 H.L end
 558 266 a 558 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 558 266 a 0 TeXcolorgray 3144
w Fe(2)p 0 TeXcolorgray 275 365 a
SDict begin H.S end
 275 365 a Fd(1.1)83
b(F)-7 b(or)27 b(Best-Fit)h(Algorithm)1312 365 y
SDict begin 12 H.L end
 1312
365 a 1312 365 a
SDict begin [ /Subtype /Link /Dest (subsection.1.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1312 365 a 0 TeXcolorgray 21 w Fd(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
275 465 a
SDict begin H.S end
 275 465 a Fd(1.2)83 b(F)-7 b(or)27 b(Analyzing)h(Ho)n(w)f
(Man)n(y)g(Units)h(of)f(Memory)g(Are)g(Uno)r(ccupied)h(vs)g(Occupied)
3128 465 y
SDict begin 12 H.L end
 3128 465 a 3128 465 a
SDict begin [ /Subtype /Link /Dest (subsection.1.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 3128 465 a 0 TeXcolorgray
78 w Fd(.)41 b(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157
w(2)p 0 TeXcolorgray 0 TeXcolorgray 150 648 a
SDict begin H.S end
 150 648
a Fe(2)77 b(V)-8 b(ersion)31 b(con)m(trol)h(log)1065
648 y
SDict begin 12 H.L end
 1065 648 a 1065 648 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 648 a 0 TeXcolorgray
2637 w Fe(2)p 0 TeXcolorgray 150 830 a
SDict begin H.S end
 150 830 a Fe(3)77
b(W)-8 b(ork)32 b(log)658 830 y
SDict begin 12 H.L end
 658 830 a 658 830 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658
830 a 0 TeXcolorgray 3044 w Fe(3)p 0 TeXcolorgray 275
930 a
SDict begin H.S end
 275 930 a Fd(3.1)83 b(W)-7 b(eek)28 b(1)731 930
y
SDict begin 12 H.L end
 731 930 a 731 930 a
SDict begin [ /Subtype /Link /Dest (subsection.3.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 930 a 0 TeXcolorgray 21 w Fd(.)41
b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157
w(3)p 0 TeXcolorgray 0 TeXcolorgray 275 1029 a
SDict begin H.S end
 275 1029
a Fd(3.2)83 b(W)-7 b(eek)28 b(2)731 1029 y
SDict begin 12 H.L end
 731 1029 a
731 1029 a
SDict begin [ /Subtype /Link /Dest (subsection.3.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1029 a 0 TeXcolorgray 21 w Fd(.)41 b(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray
0 TeXcolorgray 150 1212 a
SDict begin H.S end
 150 1212 a Fe(4)77 b(Questions)685
1212 y
SDict begin 12 H.L end
 685 1212 a 685 1212 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 685 1212 a 0 TeXcolorgray
3017 w Fe(3)p 0 TeXcolorgray 275 1312 a
SDict begin H.S end
 275 1312 a Fd(4.1)83
b(Main)28 b(p)r(oin)n(t?)908 1312 y
SDict begin 12 H.L end
 908 1312 a 908 1312
a
SDict begin [ /Subtype /Link /Dest (subsection.4.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 908 1312 a 0 TeXcolorgray 38 w Fd(.)41 b(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(3)p 0 TeXcolorgray 0 TeXcolorgray
275 1411 a
SDict begin H.S end
 275 1411 a Fd(4.2)83 b(Approac)n(h?)856 1411
y
SDict begin 12 H.L end
 856 1411 a 856 1411 a
SDict begin [ /Subtype /Link /Dest (subsection.4.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 856 1411 a 0 TeXcolorgray 25
w Fd(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f
(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)
f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157
w(3)p 0 TeXcolorgray 0 TeXcolorgray 275 1511 a
SDict begin H.S end
 275 1511
a Fd(4.3)83 b(Ensuring)27 b(solution)g(correctness?)1571
1511 y
SDict begin 12 H.L end
 1571 1511 a 1571 1511 a
SDict begin [ /Subtype /Link /Dest (subsection.4.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1571 1511 a 0 TeXcolorgray
20 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(4)p 0 TeXcolorgray 0 TeXcolorgray
275 1611 a
SDict begin H.S end
 275 1611 a Fd(4.4)83 b(What)28 b(did)g(w)n(e)g(learn?)1184
1611 y
SDict begin 12 H.L end
 1184 1611 a 1184 1611 a
SDict begin [ /Subtype /Link /Dest (subsection.4.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1184 1611 a 0 TeXcolorgray
20 w Fd(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(4)p 0 TeXcolorgray
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(1)135 b(Design)150
188 y
SDict begin H.S end
 150 188 a 150 188 a
SDict begin 12 H.A end
 150 188 a 150 188 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.1.1) cvn H.B /DEST pdfmark end
 150 188
a 93 x Fa(1.1)112 b(F)-9 b(or)38 b(Best-Fit)f(Algorithm)150
435 y Fd(W)-7 b(e)35 b(m)n(ust)g(adapt)g Fc(slob.c)p
Fd(,)j(whic)n(h)d(uses)g(a)f(First-Fit)h(algorithm,)h(to)f(instead)g
(use)g(a)f(Best-Fit)h(algorithm.)58 b(In)150 534 y(terms)32
b(of)g(algorithm)f(design,)j(our)d(task)h(is)g(relativ)n(ely)f(simple.)
51 b(The)33 b(di\013erence)f(b)r(et)n(w)n(een)g(the)h(First-Fit)f(and)
150 634 y(Best-Fit)f(algorithms)e(in)i(the)g(con)n(text)g(of)f(the)h
(Lin)n(ux)g(SLOB)f(is)h(not)g(massiv)n(e.)45 b(In)31
b(fact,)g(the)h(only)e(true)h(place)150 734 y(there)24
b(are)g(di\013erences)h(b)r(et)n(w)n(een)f(these)h(t)n(w)n(o)f
(algorithms)f(is)i(within)g(the)g Fc(slob)p 2602 734
26 4 v 31 w(al)t(lo)l(c)31 b Fd(metho)r(d,)26 b(where)e(new)h(pages)150
833 y(are)g(allo)r(cated.)36 b(If)26 b(w)n(e)g(lo)r(ok)g(within)h(this)
f(metho)r(d,)h(w)n(e)f(can)g(observ)n(e)e(the)j(w)n(a)n(y)e(it)h(is)g
(curren)n(tly)f(implemen)n(ted)i(to)150 933 y(re\015ect)i(a)f
(First-Fit)i(approac)n(h:)37 b(the)30 b(metho)r(d)g(iterates)e(through)
g(a)h(list)g(of)g(pages)f(and)h(immediately)g(allo)r(cates)150
1032 y(and)c(places)g(a)g(page)f(in)i(the)f(\014rst)g(place)g(with)h
(enough)f(of)g(free)g(space)g(\(e.g.)36 b("memory)24
b(units"\).)36 b(So,)25 b(our)g(plan)g(is)150 1132 y(to)g(mo)r(dify)h
(the)g(b)r(eha)n(vior)e(within)i(this)g(lo)r(op)f(in)h(the)g(follo)n
(wing)e(w)n(a)n(y:)35 b(if)26 b(w)n(e)f(are)f(lo)r(oking)h(for)g(the)h
(Best-Fit,)g(this)150 1232 y(means)f(w)n(e)g(m)n(ust)h(lo)r(op)f
(through)g(eac)n(h)g(page)f(of)i(the)g(list)g(\(e.g.)36
b(w)n(e'll)25 b(ha)n(v)n(e)f(to)i(get)f(rid)g(of)h(the)g(break)e
(statemen)n(ts)150 1331 y(that)f(are)e(in)i(there)f(curren)n(tly\))g
(and)g(c)n(hec)n(k)g(eac)n(h)g(and)g(ev)n(ery)f(page)h(to)g(see)g(if)h
(it)g(is)g(as)e(small)i(as)e(p)r(ossible,)j(meaning)150
1431 y(that)29 b(it)g(holds)g(just)g(enough,)f(and)h(not)g(more,)f
(memory)g(than)h(w)n(e)f(need.)41 b(So)28 b(w)n(e'll)h(go)e(through)h
(the)h(whole)g(list)150 1531 y(and)h(set)g(a)f(page)h(p)r(oin)n(ter)f
(v)-5 b(ariable)29 b(to)h(the)g(pages)f(w)n(e)h(pass)f(b)n(y)h(that)g
(are)f(less)h(memory)f(than)h(b)r(efore,)g(so)g(that)150
1630 y(when)c(our)g(lo)r(op)f(terminates,)h(w)n(e'll)g(b)r(e)h(left)g
(with)f(a)g(v)-5 b(ariable)25 b(that)i(p)r(oin)n(ts)f(to)g(the)g
(smallest)g(page)f(that)h(\014ts)h(our)150 1730 y(need.)150
1846 y
SDict begin H.S end
 150 1846 a 150 1846 a
SDict begin 12 H.A end
 150 1846 a 150 1846 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.1.2) cvn H.B /DEST pdfmark end
 150
1846 a 116 x Fa(1.2)112 b(F)-9 b(or)39 b(Analyzing)h(Ho)m(w)e(Man)m(y)i
(Units)f(of)g(Memory)h(Are)e(Uno)s(ccupied)i(vs)g(Oc-)405
2078 y(cupied)150 2232 y Fd(Our)31 b(task)f(in)i(\014guring)e(out)h(ho)
n(w)g(man)n(y)g(units)g(of)h(memory)e(are)g(o)r(ccupied)i(is)f(that)g
(w)n(e)g(m)n(ust)h(k)n(eep)f(a)f(running)150 2331 y(coun)n(t)d(of)g(ho)
n(w)g(man)n(y)f(pages)g(ha)n(v)n(e)g(b)r(een)i(allo)r(cated)e(for)h
(use.)37 b(Our)26 b(plan)h(for)g(this)g(is)g(to)h(k)n(eep)e(a)h(global)
f(v)-5 b(ariable)150 2431 y(that)26 b(w)n(e)g(add)f(1)h(to)f(when)i(a)e
(new)h(page)f(is)h(allo)r(cated.)35 b(F)-7 b(rom)26 b(what)f(I)h(can)g
(tell,)g(a)g(new)g(page)f(is)g(allo)r(cated)h(in)g(the)150
2531 y Fc(slob)p 290 2531 26 4 v 31 w(al)t(lo)l(c)37
b Fd(metho)r(d,)32 b(sp)r(eci\014cally)e(in)g(the)h(section)f(of)h
(this)f(metho)r(d)h(mark)n(ed)e(b)n(y)i(the)f(commen)n(t)h("Not)f
(enough)150 2630 y(space:)35 b(m)n(ust)25 b(allo)r(cate)g(a)f(new)i
(page".)34 b(W)-7 b(e)26 b(also)e(ha)n(v)n(e)g(to)h(subtract)g(1)g
(from)g(this)g(global)g(v)-5 b(ariable)24 b(when)h(a)g(page)150
2730 y(is)33 b(freed.)53 b(F)-7 b(reeing)33 b(a)f(page)h(o)r(ccurs)f
(in)h(the)h(metho)r(d)f Fc(slob)p 2025 2730 V 31 w(fr)l(e)l(e)p
Fd(,)i(so)e(w)n(e)g(plan)g(on)f(decremen)n(ting)h(this)g(v)-5
b(ariable)150 2829 y(there.)45 b(In)31 b(terms)f(of)h(\014guring)e(out)
i(ho)n(w)f(man)n(y)g(units)h(of)f(memory)g(are)g(uno)r(ccupied,)h(our)f
(plan)g(is)h(a)f(bit)h(more)150 2929 y(complex,)g(though)g(the)h
(implemen)n(tation)f(is)g(still)g(just)g(a)g(few)g(lines)g(of)g(co)r
(de.)47 b(In)31 b Fc(slob)p 2947 2929 V 32 w(al)t(lo)l(c)p
Fd(,)i(note)e(that)g(there)150 3029 y(are)26 b(references)g(to)g(three)
h(separate)f(categories)f(of)h(memory)g(units)i(there)f(are)e(a)n(v)-5
b(ailable:)36 b(small,)26 b(medium,)i(and)150 3128 y(large,)21
b(where)h(the)g(size)f(of)g(pages)g(v)-5 b(ary)21 b(based)g(on)g(the)h
(category)e(they)i(b)r(elong)f(to.)35 b(When)22 b(this)g(metho)r(d)g
(is)f(called,)150 3228 y(w)n(e)k(can)f(use)h(the)g(metho)r(d)h
Fc(list)p 1113 3228 V 30 w(for)p 1245 3228 V 32 w(e)l(ach)p
1433 3228 V 31 w(entry)33 b Fd(to)24 b(iterate)h(through)f(eac)n(h)g
(of)h(these)g(three)g(lists,)g(collecting)g(ho)n(w)150
3328 y(man)n(y)g(a)n(v)-5 b(ailable)25 b(units)h(of)g(memory)f(they)h
(ha)n(v)n(e)f(b)n(y)h(adding)f(eac)n(h)g(page's)g(units)h(to)g(a)g
(global)e(v)-5 b(ariable.)36 b(Luc)n(kily)150 3427 y(for)26
b(us,)h(it)g(lo)r(oks)e(lik)n(e)i(w)n(e)f(can)g(access)f(ho)n(w)h(man)n
(y)g(units)h(are)f(free)g(for)g(the)h(taking)f(within)h(a)g(page)e(b)n
(y)i(accessing)150 3527 y(the)h(page)f(structure's)g(\014eld)g
Fc(units)p Fd(.)150 3668 y
SDict begin H.S end
 150 3668 a 150 3668 a
SDict begin 12 H.A end
 150
3668 a 150 3668 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 3668 a 133 x Fb(2)135 b(V)-11 b(ersion)45
b(con)l(trol)g(log)150 4033 y(History)h(of)f(v)l(ersions)150
4139 y
SDict begin H.S end
 150 4139 a 150 4139 a
SDict begin 12 H.A end
 150 4139 a 150 4139 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150
4139 a 150 4139 a
SDict begin H.S end
 150 4139 a 150 4139 a
SDict begin 12 H.A end
 150 4139 a 150
4139 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark end
 150 4139 a 200 4308 a Fe(V)-8 b(ersion)99 b(Date)236
b(Author\(s\))324 b(Changes)200 4443 y Fd(1)370 b(5.24.2017)96
b(Alex)572 b(mo)r(dify)27 b(original)d(slob.c)i(to)g(k)n(eep)g(running)
g(coun)n(t)g(of)h(o)r(ccu-)1786 4543 y(pied)h(pages)200
4643 y(2)370 b(5.25.2017)96 b(Alex)572 b(mo)r(dify)27
b(slob)g(to)g(k)n(eep)g(n)n(um)n(b)r(er)f(of)i(un)n(used)f(memory)f
(units)200 4742 y(3)370 b(5.26.2017)96 b(Alex)572 b(mo)r(dify)28
b(slob)f(to)g(in)n(v)n(ok)n(e)f(system)i(calls)200 4842
y(4)370 b(5.27.2017)96 b(Alex)572 b(mo)r(dify)28 b(original)e(slob.c)h
(to)g(use)h(b)r(est-\014t)200 4941 y(5)370 b(5.29.2017)96
b(Alex)572 b(Add)35 b(old)f(write)h(up,)h(need)f(to)f(adapt)g(this)h
(to)g(mak)n(e)e(\014nal)1786 5041 y(writeup)p 0 TeXcolorgray
1929 5349 a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 200 83 a Fd(6)370 b(5.30.2017)96
b(Alex)572 b(Add)30 b(\014nal)f(write)g(up)h(to)f(a)g(tarball)f
(directory)g(with)i(an)f(as-)1786 183 y(signmen)n(t)37
b(4)g(patc)n(h)h(\014le)g(in)f(preparation)f(for)i(tar.bz2'ing)1786
282 y(and)27 b(submitting)150 412 y
SDict begin H.S end
 150 412 a 150 412
a
SDict begin 12 H.A end
 150 412 a 150 412 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 412 a 126 x Fb(3)135 b(W)-11
b(ork)44 b(log)150 643 y
SDict begin H.S end
 150 643 a 150 643 a
SDict begin 12 H.A end
 150 643
a 150 643 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 643 a 93 x Fa(3.1)112 b(W)-9 b(eek)38
b(1)150 890 y Fd(Chec)n(k)c(out)h(the)g(slob)g(\014le)g(in)g(the)g(mm)g
(directory)-7 b(.)57 b(Figure)35 b(out)f(what)h(it's)g(doing-)f(where)g
(are)g(things)h(b)r(eing)150 989 y(added,)c(where)f(are)f(things)h(b)r
(eing)g(remo)n(v)n(ed,)g(and)g(where)g(exactly)f(do)r(es)h(the)h
(First-Fit)f(algorithm)f(come)h(in)n(to)150 1089 y(pla)n(y)-7
b(.)35 b(Once)25 b(w)n(e)f(disco)n(v)n(ered)f(that)i(the)g(real)f(meat)
g(of)h(the)g(algorithm)f(can)g(b)r(e)h(found)g(in)g(the)g
Fc(slob)p 3231 1089 26 4 v 32 w(al)t(lo)l(c)31 b Fd(metho)r(d,)150
1189 y(w)n(e)e(mo)n(v)n(ed)f(on)h(to)g(\014guring)g(out)g(ho)n(w)g(to)g
(implemen)n(t)h(a)f(system)g(call.)41 b(This)29 b(part)g(of)g(the)h
(assignmen)n(t)e(to)r(ok)h(us)150 1288 y(the)34 b(longest.)56
b(The)34 b(implemen)n(tation)g(of)g(the)g(system)g(call)g(w)n(asn't)f
(hard,)i(but)g(what)f(to)r(ok)g(a)f(long)h(time)g(w)n(as)150
1388 y(since)26 b(our)g(virtual)f(mac)n(hine)h(runs)g(32-bit)f(w)n(e)h
(had)g(to)h(\014nd)f(all)g(of)h(the)f(places)g(within)h(the)f(k)n
(ernel)g(w)n(e'd)g(need)g(to)150 1487 y(mo)r(dify)32
b(in)g(order)e(to)h(run)h(our)f(system)g(call.)48 b(The)32
b(hidden)g(one)f(for)g(us)h(w)n(as)e(in)i(the)g(syscall)p
3144 1487 25 4 v 29 w(32.tbl)f(\014le)h(found)150 1587
y(in)f(arc)n(h/x86/syscalls/syscall)p 1168 1587 V 24
w(32.tbl.)47 b(Then)31 b(once)g(w)n(e)f(though)n(t)h(ev)n(erything)f(w)
n(as)g(w)n(orking,)g(w)n(e)h(got)g(a)f(little)150 1687
y(pissed)k(b)r(ecause)g(for)g(some)g(reason)f(using)h(mak)n(e)f(-j4)i
(all)f(w)n(asn't)g(pro)r(ducing)f(an)i(ob)5 b(ject)34
b(\014le!)57 b(W)-7 b(e)35 b(ended)g(up)150 1786 y(disco)n(v)n(ering)25
b(that)j(w)n(e)f(needed)h(to)g(use)f(our)g(old)g(friend)h(mak)n(e)f
(men)n(ucon\014g)g(to)g(compile)h(what)f(w)n(e)g(w)n(an)n(ted.)150
1919 y
SDict begin H.S end
 150 1919 a 150 1919 a
SDict begin 12 H.A end
 150 1919 a 150 1919 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150
1919 a 100 x Fa(3.2)112 b(W)-9 b(eek)38 b(2)150 2172
y Fd(W)-7 b(eek)29 b(2)f(started)h(with)g(us)g(writing)f(a)h(test)g
(script.)40 b(W)-7 b(e)29 b(already)f(knew)h(ho)n(w)f(to)h(scp)f(it)i
(o)n(v)n(er)d(in)n(to)h(the)h(running)150 2272 y(Y)-7
b(o)r(cto)26 b(k)n(ernel,)f(so)g(writing)h(the)g(script)g(w)n(as)f
(fun.)37 b(W)-7 b(e)26 b(just)g(wrote)f(a)h(C)g(\014le)g(that)g(lo)r
(op)r(ed)g(10)f(times,)h(allo)r(cated)f(a)150 2371 y(ton)e(of)f(memory)
-7 b(,)23 b(and)g(then)g(\014lled)g(that)g(memory)e(with)i(garbage.)33
b(If)23 b(w)n(e)g(had)f(more)g(time,)i(w)n(e)e(w)n(ould'v)n(e)g
(written)150 2471 y(a)j(script)f(that)i(used)f(a)f(bunc)n(h)i(of)f(pro)
r(cesses)e(running)i(concurren)n(tly)e(to)i(see)g(ho)n(w)f(that)i(w)n
(ould'v)n(e)e(impacted)h(our)150 2570 y(results.)34 b(Within)23
b(this)f(test)g(script,)h(w)n(e)e(called)g(the)h(t)n(w)n(o)f(system)h
(calls)f(w)n(e)g(implemen)n(ted)h(that)g(return)f(ho)n(w)g(m)n(uc)n(h)
150 2670 y(memory)32 b(is)g(free)g(and)g(ho)n(w)g(m)n(uc)n(h)g(memory)g
(is)g(curren)n(tly)g(in)g(use,)i(and)e(then)h(computed)g(the)f(fragmen)
n(tation)150 2770 y(p)r(ercen)n(tage)d(based)i(on)f(this)h
(information.)45 b(W)-7 b(eek)31 b(2)f(ended)h(with)g(us)g(c)n(hanging)
e Fc(slob)p 2912 2770 26 4 v 31 w(al)t(lo)l(c)37 b Fd(within)32
b(the)f(slob.c)150 2869 y(\014le)23 b(to)h(use)f(a)g(Best-Fit)g
(algorithm.)34 b(W)-7 b(e)24 b(w)n(ere)e(pleased)h(to)g(see)g(that)h
(our)e(design)h(plan)g(w)n(ork)n(ed)f(out)h(exactly)g(ho)n(w)150
2969 y(w)n(e)29 b(though)n(t)g(it)g(w)n(ould.)42 b(Finally)-7
b(,)29 b(w)n(e)g(talk)n(ed)g(with)g(Kevin)g(to)g(see)g(what)g(kind)h
(of)f(fragmen)n(tation)f(p)r(ercen)n(tages)150 3069 y(w)n(e)f(could)h
(exp)r(ect)g(from)f(b)r(oth)h(algorithms)e(and)h(ho)n(w)g(w)n(e)h
(could)f(impro)n(v)n(e)f(our)h(test)h(script.)150 3210
y
SDict begin H.S end
 150 3210 a 150 3210 a
SDict begin 12 H.A end
 150 3210 a 150 3210 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 3210
a 133 x Fb(4)135 b(Questions)150 3449 y
SDict begin H.S end
 150 3449 a 150
3449 a
SDict begin 12 H.A end
 150 3449 a 150 3449 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.1) cvn H.B /DEST pdfmark end
 150 3449 a 93 x Fa(4.1)112
b(Main)39 b(p)s(oin)m(t?)150 3695 y Fd(W)-7 b(e)22 b(think)f(the)h
(main)f(p)r(oin)n(t)h(of)f(this)h(pro)5 b(ject)20 b(w)n(as)h(to)g(get)g
(our)g(hands)g(dirt)n(y)f(in)i(the)g(memory)e(managemen)n(t)h(folder)
150 3794 y(of)28 b(the)g(virtual)g(mac)n(hine.)38 b(Sp)r(eci\014cally)
-7 b(,)28 b(w)n(e'v)n(e)f(talk)n(ed)h(a)f(lot)h(ab)r(out)g(in)h(class)e
(ab)r(out)h(ho)n(w)f(di\013eren)n(t)h(op)r(erating)150
3894 y(systems)f(handle)g(memory)f(resources)f(and)i(the)h
(di\013erences)e(b)r(et)n(w)n(een)i(ho)n(w)e(certain)h(algorithms)e(c)n
(ho)r(ose)h(pages)150 3994 y(of)g(memory)g(to)g(pro)n(vide)f(to)i(pro)r
(cesses,)e(but)i(it's)f(hard)g(to)g(understand)g(what)h(this)f
(abstract)g(stu\013)h(means)f(un)n(til)150 4093 y(y)n(ou)j(see)h(it)g
(in)h(its)f(co)r(de)g(manifestation.)44 b(W)-7 b(e)30
b(also)f(think)i(Kevin)e(w)n(an)n(ted)h(us)g(to)g(see)f(\014rsthand)h
(ho)n(w)g(slo)n(w)f(the)150 4193 y(Best-Fit)34 b(algorithm)f(w)n(as)g
(in)h(practice.)55 b(Finally)-7 b(,)36 b(he)e(probably)f(w)n(an)n(ted)g
(us)h(to)g(see)g(ho)n(w)f(system)h(calls)f(w)n(ere)150
4293 y(written)28 b(and)f(in)n(v)n(ok)n(ed,)f(whic)n(h)i(w)n(as)f
(prett)n(y)g(co)r(ol.)150 4425 y
SDict begin H.S end
 150 4425 a 150 4425
a
SDict begin 12 H.A end
 150 4425 a 150 4425 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.2) cvn H.B /DEST pdfmark end
 150 4425 a 100 x Fa(4.2)112 b(Approac)m(h?)150
4678 y Fd(This)32 b(is)h(really)e(the)i(\014rst)f(and)g(only)g
(assignmen)n(t)f(of)h(ours)g(that)g(are)g(design)f(plans)h(actually)g
(w)n(ork)n(ed)f(ho)n(w)g(w)n(e)150 4778 y(\014gured)d(they)g(w)n(ould.)
38 b(Out)28 b(of)g(all)g(of)g(our)g(pro)5 b(jects,)27
b(this)i(one)e(seemed)h(to)g(ha)n(v)n(e)f(the)i(least)f(amoun)n(t)f(of)
h(co)r(ding.)150 4877 y(Our)23 b(approac)n(h)f(in)i(algorithm)f
(implemen)n(tation)h(w)n(as)f(simply)h(to)g(iterate)f(through)g(all)h
(categories)e(of)i(free)f(pages)150 4977 y(to)k(searc)n(h)g(for)g(the)h
(smallest)f(p)r(ossible)g(page)g(that)h(w)n(as)e(uno)r(ccupied.)p
0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.3) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fa(4.3)112 b(Ensuring)38
b(solution)g(correctness?)150 236 y Fd(W)-7 b(e)37 b(wrote)f(a)h(test)g
(script)f(for)h(execution)f(from)h(within)g(the)h(virtual)e(mac)n(hine)
g(that)h(computed)g(ho)n(w)g(man)n(y)150 336 y(memory)20
b(units)g(w)n(ere)g(o)r(ccupied)g(and)g(ho)n(w)g(man)n(y)g(w)n(ere)f
(uno)r(ccupied,)j(computed)f(the)g(highest)f(p)r(ossible)g(memory)150
436 y(address)27 b(for)h(b)r(oth)h(of)g(these)g(categories)d(of)j
(pages,)f(and)g(then)h(used)g(this)g(information)f(to)g(compute)h(and)f
(prin)n(t)150 535 y(out)g(the)g(fragmen)n(tation)e(p)r(ercen)n(tage.)
150 667 y
SDict begin H.S end
 150 667 a 150 667 a
SDict begin 12 H.A end
 150 667 a 150 667 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.4.4) cvn H.B /DEST pdfmark end
 150
667 a 101 x Fa(4.4)112 b(What)38 b(did)g(w)m(e)f(learn?)150
921 y Fd(W)-7 b(e)26 b(learned)f(that)h(there)g(is)g(a)f(go)r(o)r(d)h
(reason)e(wh)n(y)h(the)i(Lin)n(ux)e(SLOB)g(uses)h(First-Fit.)36
b(Best-Fit)26 b(w)n(as)f(miserably)150 1020 y(slo)n(w)30
b(and)h(ended)h(up)f(far)g(more)f(fragmen)n(ted)g(than)i(First-Fit.)47
b(This)31 b(is)g(funn)n(y)h(b)r(ecause)f(Best-Fit)g(is)g(literally)150
1120 y(designed)26 b(with)g(the)h(in)n(ten)n(tion)f(of)g(decreasing)e
(fragmen)n(tation)h(opp)r(ortunities.)36 b(If)26 b(it)h(w)n(asn't)e
(for)h(asking)f(Kevin)150 1220 y(ab)r(out)g(wh)n(y)g(our)f(Best-Fit)h
(w)n(as)g(improbably)f(more)g(fragmen)n(ted)g(than)i(our)e(First-Fit,)i
(w)n(e'd)f(probably)f(assume)150 1319 y(that)k(our)f(implemen)n(tation)
g(w)n(as)g(\015a)n(w)n(ed.)p 0 TeXcolorgray 1929 5349
a(4)p 0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
