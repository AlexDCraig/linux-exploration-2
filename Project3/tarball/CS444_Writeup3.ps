%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writeup3.dvi
%%CreationDate: Thu May 18 22:38:41 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writeup3.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.18:2238
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 77 /M put
dup 82 /R put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
35F0D4C4D46BA07C9477046CBD7181C3102828D1858CEFD272BA72CB058EA61F
10335E75A51310A72573924A4C925613E371616AC863134B0C0B9D9BA3C4AF67
A90596EC699B28E5EFAD6AFAB284955046374CE4A35FE498D5E6F664576C79EE
F9C4B43C427540E6B3014EB8CD0739146EC2E8F95A2A3BC525923B9E5DFBD822
83650F30366BD8C35006235731D056C9482A86446E14B6311303276091C4E59D
6E2869BBC87FE0CC48C6AF595830EDB96491CBE43789EEA3FD06E6FF390C2ED3
1BC49F4DA1042FC5C6D925603A4BD0E8FDA455710931B28D9855693DA936759C
A20D7B757E632B3F2C8FB03DEAF1532CBFFCF23874BF1035B7770712F1DB2DBF
0A70FCF2FFEF857864D8E1107C0B36D023BFABC2A753C9EE382F13FCACBC2272
D9282554637C8B5E312C825FC718FFF63B8BED93D74D76724D9E85547FBE1E99
70F06F7D61499244DCD6C80D6EF68B7F8115F00A93BECDD89D4A42F6533D4FCC
F5401C8DF0F4B1E5851D1AD7E100EA191DAFFC3D08C301F8CFD5B94673E8A3C3
C12FAB21C7284BB2ED07D7A343208C6AED493DBBB699D5D88410DB07F94B24B4
AE5186DA9A7EEBBBB108156A2AC27080CC4BB7935AE88CB2B960062956961BD7
56424E6745D84C860F4376C5F90229B8558D5FCFB2D65550B410B61C711CC123
2078448EB47B647ADE11CB45E2358A5CDA25329A3E18DB0C06C278F2EF6ED62A
CC5F33F879C2893601AB0FA539583FD15A6016B859107E4E1614E5091DF0156F
84844968FCAFC80BB272D4A0232405207D84B268BAD89DC04BD900E2680B5599
48E98FA994174646F06595C0DE426814A950D9FB759A80731B1FBD722448388E
2ACB6F50B560AD689FD24BA97553344287D625E4BA665FFB86C26841427006E1
621A8153EE884333C4837D2A881211E5A41B78ECB1BBE2E36C50453BAACBCF85
87EDD88705AB1E4B64CEF7B43EFC63907E7A10D81AED9EFC8484CC8074E19A8B
759DADF39B135F031CB4CC0A6C5669AB1F7A51A7E03EBF586ECA5BAFABB20F12
FA3A972872273994AC6E1D68FE2C0B3EAE00E3C573375E0275898E4A743AC73E
813541EE1E65A5FBE4BDBC3964B23BAB52E9694340DFAE80D5C08A3F8515A6E1
D5B119C0256229A541916F088941A5C1AB3760B329D88C694445061708A5197F
E2A219344A41E129E1BC3AD79E9609ADFE5B7279C74FC5491E877384B4104CB8
23EF574BFBE7167E1214504962EDB9E24BD6751AA29ED820EBD736F9EF4AC209
1CA7B65D9394274A703D0EA8281A68913FDEEDC22F764055472978D1176A56BA
DB582976BBC26F375EE15E3ED48C215C33507D8CE35B1A449C27C77ACDA966C2
F49A8C7E347CF10D9A6D33177983BC7607D4348817CC5E3B9E0C6A11F3936358
E7133115FDD6C662FAFF585B50BB9CB7133D19594C5A424A9BD46EC9E06B886B
077B381E3A629A73756CBF88551F0A9DF86318794D4C48327642BCC3D9C2C2E0
C73B7A32EAF360EF3DCA7603ACD1216EEFC008C0CD1B798C8252DE951A9E2070
FFA906C5C4ECF492ADF2D5D9630F5191BDAC83EDD520A3CCD833F353F9B7B7C0
3D3C642EFC42E8A115A1016FA0D3FD94A8D9E5A7D0257606CCB21CF38CC66575
9C9575E5F137F9AA32E66AE5DE72FDA1724E07DF857D8A42B8F772E3C8CBE415
A9B47E0B789EC1A5181DE0676A061D5404F7680E39D8655826371261CB23E567
ED947353BBA803846D4E745A4BB192EAC200B08656660503B22A5EB3AD3A7334
91B98D9D77ED9512535A5985FDB2ED50E1B531B84FA1562A79F1C6CD4878B4B9
9B89A724C12E58375B3EACB1C940E77A9F2381B663C6B3D1A8F3F68CBE0E707A
F28862C8491935B04F3C481B7AE405FF4DEFF157FDB81F8B49DC2E2AB9A2A3DA
805DE82324DC523191C9CFBD1DB8A2E816B3DD8CF0E47E86B85C65684A4C9C26
62F9A7AD2556EF7486C5CC9A4D453EBD77E148B39962292C01B46BED5F572CC7
810BE0B1729F872A5CD4F49B781D4EA6107FDC87A9AC06286069A52B95810FE7
5E96067CB3398FBBC2FBE36E8447FC65A1B96F9D8C57393D5C0379FAFBC9EDDA
A6886EFEDCD8EA2764C11E5FC52AE1BDA400E8CD418C51A4EC176717AEE06007
334AE9A9B8F98DD7C85BFAEC9CE9D86993D7EA243B280191DDB03D09C69ED90C
6FA6E0B84CDB778B4D902309064B8091DE6F871105B825A964D29EC6B7A20EE8
03D3B727499E5D0B82566AAF982633D96487C085316B14D4008D8EB71FD0B591
48C9C857021135B848FDAB98E2E12847887FD2D4F91936BEBCCF0AAF360F4589
81C44C5DA6DDD0C8505CA7370B8A26CA737FC469E820FCBD907B1E6CE40C7C34
96CAFC74CF01226F953291D274685FE480E0366872E35CD619D5349997B19161
D77E86B4E76C821C6F34744975FF462EE7599AA1FCB2D7EA7508B3E657C229A0
E6853AFF96DF96E08765D47E3ABC20F3DEC97E0A00D834EC06F842C0E2C0AC4F
BB6147540DFE807F24E0B907BA674203D292FE324B9E4A2B6F949FDFF2FBBDDB
FFEFFA35281B59D476D3549CCBDEF3B049D3990C7022201DA9E34DC2C05F8FF1
638032C2C3F5BF38F9B88B42DE5DAC653DAE88E03743A38CE5DAF74EAA484E41
5A02B28989F1283B4F93FD7F8B31B4F984F3390004EE851997DB83E029BF77EB
4DF97E7E919E6BF258D7A141DBAD4981AD17C5DF0D7C2E2D148955DCBB812708
77AE4EB244BE818721856BA78ABA07470E2A8FBA76D6C3530F07FDAD4B687971
962F459BB386B81BBC78AF610E2FC917B64146A5C8A0F4AF16D795A226921A10
6FDF3371D3F6A3DCB5A37AD10EF1FC5FD24E8713EF5CC6EDDB308AA504B09D0D
A181104341C3B86E8068260FE7BFCFA9A2EF41FB7A0FEA3023A0C97C19B06A24
BFD3FED8047BBBD0C44BA3E2B6B3A2C7A315E78FFF1125C4B90AC8E0F63C83E0
4726FD5E42A3D15A29E6A5E87FF5C1F3413A9A85B837838A59D28C84FB0B9DB8
273CE9E51E1347D75519010FABCBD203B91E45C519B4031FEF60893C04CAF983
E1CC06B354985599D66314BA102DE07EE92FD2125A1DD30648B2F1DDB9BB99AF
DC6711579B9AD95A4B5D5C03019EDEDF08AB87392F8608B59AE29C420A3FBF4D
267824795E54BC20ED58BA9E45574E3F28958CCA867A1C24C0B2FB2A2822D2DA
AE126681AFB00D33FE13558798BBAEF50E183212CCA0B567333864214F85089A
99441993322F3EEDE571A31EEAA8C47601EE01DD1C4FBF3492932733D2A6923E
E55FCDB6CFD456E7686C7DB21A59099E4B0B18B76C8913C4AB5362342BF2C940
EF9A0C6F46B416B8E925B0D3784B9C36C2D96670D4D31B20289BC9B746907647
EED120FED297422ECB8A3CA04335DD751708019734AA3FC9B0C58CFD1DE5DEC9
FBFBAE94E7B3708DEA99A0687A9B8E0EF361DB1197647ECF29A13E8AAE7060CE
044995921B7EFF324821B1DEF036F1161E84D64844F6C33A056EF6D9E149D697
BDCB824EE91CED3CA399E32D7B1C942E6516DF041D3FEC2155659BFCA012CA0A
02EB7715779E7FFF23D919AF781525E341D6FD295FE0DF676BC7B32FAD056E04
2B54D81CED418AD1B52A7D977E1D653A8573125E9BD79BBEB463218E1B49F054
C50ECEEC979EBA717E841876B779AC6CA31B902ADCC5FB3753AAF358CA8F4BAB
63355B99EB69A87B0C019BD343549A273C70FD76E625B169077A2AD8394F5D4F
EAA64C8BF63788B178326C9B083392A7B52E007B8350061363AACBED60281C71
C2919B3714ACE59EF364003A251F2D5C3B7C4BA591E099AB2BF068DA3A8EADFF
6F5824ED9396EE81B053DE611396507CC33A03E22B838EF0B947A8F9E299ACB8
94682641E34192C8DBCC51E6935FDE5097DC9AD392B01E9D8924959B71187908
40F9E5D1ABA6E98150CE3889D08174DE5C92013E99065B6609CCFA43295E1F69
A598AA864CE93201FA50E1B25C641EB425E3DFE1F45DCA3D298C7300360FA5E9
16C5D737F9EA84EFCE77028FDFBD2E8D3D8E4107CF72054355A9568E9A07FF4D
A8943BBC421315931BF43A9DA326EDED9993335ACE21B719B2DAA5CC0B08C629
339A69C464B725143B95941C459031C3262EE9E2BE5D62503BFB50A75A333831
C3A3CD796A80A80F7A6957061023C7C324A57F15A4C40F7B702A7662CFD0181F
1248F174DEFC7E19A3CA7893D09B263D2B42A19B5E0EE88C2CDD7A2F96281CB2
6821D278AFAD1AC479DD11BB2D58BB32E5FCBF45AFB4D45B97F87CCEA2428F9E
AB1840E9442EAD9FBFB8683FD93078F922A44F9778829706188A9E2BD3D7A1B5
568AC369B980059400013F24CB0DF6351FC9E4631A8E1FB54C0820850248B973
123BAA5720B37A96EBBBFCB657AD380C7DAC0DA40B75B8D590F2DFE0D1A7955D
2C6D2F9F11FE2C9DA7CEA47AD5B3310DB0394E3CFDC2C3BABF80E12EE1A55313
197FC1D929E54054C40D8AD58E19B6F6974C3544D40FD0AE42A3C44352E803DA
52CFAE4E8EB5E12DDEC966D395E3CF0695CD29B38CBB2BA86965D6385FD28DBF
AF06056F246CD98104F38578F2D2675D81DD6C352EE7EEE5B81A96A9EF8A4CDD
FAFF011CB677D8FFFB5AC81960A5CA41F9734CF6038B4A4C2A112AA011121F54
73EC46ABD6AA137D3612827E33659F3E74211C14D5C5C3BA6B8187195D6D5504
80FE8CFBC59E2F58A7148166FFA1C68D88EE0EB8282707929B8DC33E3CD07313
7C2A4E2C3680BB6400ADDEBAC4D780D76E5FA28DC5BEF0B9491B7E5991947A5D
3193417C4591B98D82E4EB3C95BD56A767C3C4A699F0AA353BFF44896D4F4FEA
114CD39440D70B265FDD32818D9365A29AA0D75903115F4E9B01F9C4940FAE24
0AAA20CC28C0934D55BD1EDEB68B1556F887D58268DBC8994477C1E0C454D134
7079570EE42F80D161687C29461310EE0DCF2A92CA179B2202D56696C376B022
49C7EE93CA03BE056AB9A19BAEF4BBB71425AC4608DA0AF68E768E4F378C5C84
3DBF82CA32F0B08067EF95A2CF53BB9CF9E3C8F77F0BAFBA44C5A1EC8E59AC92
708EBB5FBBC0A44DE46511191CCF980C2623FDE50CE77064BD9453BD28FBCE57
EA9C0FC4BC39ED31D498A748189292BC8FE30DA3F6F00EC13F042EAD2F3C54B0
21CBF27413D7E9DB91F11F6FBFC11A9C69A049B196E9D364BAD3B1F18079384D
B82536D613FE606CBBC7541345AEB2726D094116FCD41974A69838ED7F4F2959
07F2D5FFD7FD32340377923B96C676D86DA4B934A205654066B605DB540620A5
488DA52C135393D9FBE158DD6357BC8B680C0CF31A3A3F80E5E12982B9E4FF6E
D6E420C8050713ACAF532DE05ABE07E32D640BE875DC7E6A66E9984D1C6988BD
B29A6A7DB002FAC8746F24A1C9D405DBD29CEA4A252032A846A000E04FC231C3
52BA9A45A90A812AF2CB6D3054D8D7780C213E61F122400BF5A286915643D7F2
CB54A95FBDAE350C5DD8E21FB0F3C6737559C22ABA657244C40DC6F5EB3F530D
E78A99DBA09CE81212D8F1F10B3B0370DE63A6A6A0A70F3DF29BD2A840F4EE50
E994B0351AD73C03C33759E2380A633A6941F6DD787530B55A7C61334AAD6809
E25178C125E36BAD52966972AEB141C98466700900D5CB2C526EE48AE31881F7
60747AFFB8F78ED8B7E20689007A657D5AF6CE4DFB78D7ACF4D6F18EC3E0232E
B5E21E4A67F15E7B935CCB93DD058DF9B2F09F04501D7006EB191D39A4905809
B78A8506CED3A25753AFDE1CEB3D487B727F6CE27C1E9C175CE55D5ED3D831B0
C76F35D25041CBAE726A903EEBF77BD28026C9C7E68B2716423BED0232A74F14
7889ACF3BAAF03DA44DAEA916886BC10B3C202D0893E4E891447B11757008FCC
CC7902F9D0FFD68443E02A3405700E62DA7E13AC84980DCE71D44EA1BF70AB11
FB6C0AA6FAA53CE636BE5DBB309FF242B91CED7BE5FD599882887FDA5564C323
181564065499940FEEE9FB2432FF45CE6DDAA7197908BA61A9B6025497E4312A
6A8A51EBFA43A7C8BF691A07B48E5A982DFF7A28B753A0363D88EAB8F81A142E
3B625BCA133B89D79D94F614311E052D5BC8789A941DB9FA53E40AF4984051F1
5A3B0BDA2F4D9EA48187FC092286B6D6F9882EFE42DC1A088D0ACB16EEB2456E
3DAB6DD15FE68283FB30B0D35A8930262AB071D4E71DC82010ECA30D845497FC
20F698133F36DA556F684C7A34A65A878046890C9E2BC2385C67F7DBB3FD3480
E8760EE4EEBD5E6BE8BDEE3508D16D2D3231B84921ACD5F6012706A497C0B028
03005EADC646D2643967A9A339E43A57F4053F95ED3DAE8FF9C86C1F67BC2C9E
57BE57BD888EA330F90D9CD643464D88C0F7B684B45BF852AF7101DA9F3162BB
3A9A91193B84A8BCFAF954BDD47D93798F47D401F3A4099BFB524C1A3FFDF496
622A8F0354889ECCDFFA2BD84712A72A4D4D7E8781766FD7E27CD6701778B809
C55851CF1F5AD17647C623CE683B1BFF58DAD9D55736A3638D9CAD22EC9641A3
C4B8D27FDE4749917A2A5C6864512438334DF234953310D41C3E4FC9F93F2382
9B27CB90933C1FAEF65C4B3DC8797DE7D235C272BF703C0EB546BF63C8A6772A
5956B1012A5F0103564847D1013B89C55C5C311A4BD35AB94CD99E6DC966EAC9
E0D55D5EC27DF06BE3E60C254C9870024729458CB6CB8EFD179339D7C32DD6AD
9B420866D0F4805BBFD5D274DE47D9869031FA13AC2C3CE6ED011E6370BA0BEE
D87FAD0C57CABC09D8C3E007A64BCD493014F6DF50B7762E5AFBB24B5649D6C4
AD6EB7777096F10FE94D13297FFE6009E771555F932B990842FCB9E944D627A6
C860684074E2B35BDF945921E5AD98CB3FD52BDCDD4BA28DEEC0D862CDBD45C5
F60E4224DBC0A7A4CD94F35AE87D45B65F1FB836069D7728F88A4518E33CD41F
94B46B79B0C921FDEC013BADF639FB7201D6B6093741A77F122D363694F24226
F8B7E8F87B8C80124E7A07CB89C57B4E81F046C85E79FAF25133F005E87A1808
26FB6C497F37DB7284F59E78D8A2F7C5257E6540D8F04CE1203E02CCF53039E1
59F7FB770FE69ED7E0807C00C9547AE62E350E7FB74C897E446DDFB5C9CEA2E2
6D042A1D9592E330695F42FB65428F976B8D8059F5C15E40E3179DE42B574531
8775F17D5A3ADDFCDA86BD174F07098618345056F277E4644B53CBDAAD021C6D
5DD96DF07E6B617294A05FBDCB8C640FD21F6E438DDCE24B3EDCD93AC5EC5E47
4C9E75959606CA292BF6A86B24CCAF9E0B4DCFFB268CB7B5FF0AA4C47DD45DD3
A09729D9513CC0CC008377539C9DD3CF3214F436EBD0CC1338CE5769508C6B2C
CE772CD0BBC443529B2BC8CFF0F372DF93AC08F900DC158E57BFA526C61047EC
E2734CB5FF65BFD67B893350AE0FA327FD0A49CA32BE53778A99F67CFD9325C0
5A97EDA630E363BF53A5194D295CFF78B4CA00A9765E941A09C450C5B4791101
0F866DEA7EB213957B2CAE3943BE64CEF75BE0BBE442CBCAA147021873A636ED
DBA1DC57EAE4AFEB6A6A9B6CC5C20D2928F4CA0C43D53908777BC4D0FEAB927E
569424F5FEA1ABFF3C0FABB581AAEC60984DBB2D3ADAE30AD2FE62796B79D3A0
7614DBAAB6B3374F6C6C346D74B7F36F9137A35DD0A23DCE53DBA3B0FEA24527
34A056C9B98EC86EA37CE70E0FCC3BCEC0553550099BC6B35455C2F5F558E4C9
30C4A128781AF25CD75E07309ECA53C6C9F6692D862B93EDA650C85E8CD54E07
FB29C7647E5637304BA1C581054E6BBA9D70FE3FF23844DB49B597D25FA01715
A03F5AB3C00620275C3D4E8FDABE9FC84711538CEE85CC2E2D04DF49BDF5782A
4407178DFC15A6AA109600E1261FF09E2E014E00A499CFE8A31C2F72F9F9E40A
BF4D06A2AC8B1CE59CD7659BBF2D3446ECA0B1B06097EF55E6F85B040BEECFF3
D1A3D86E9C1D43484F81A47640BB76A0B312C9FF07E1A7FB3CF31F240AEBA7C4
A0EF5A1ACCB64FD1735135651D4279BEF31CD0A8105E13013FBC76E9C64F0E68
07C8A55BC60A05D69921BFAEC1A752E3245C65FDFC8FB17CBE96D3CB3AFD9020
8789036B7DA926B15439F0D786B6388CE8E2F6D8999276FFD4EEEC0ABC98A326
77E709737B8A2820751A35B7BE2DDCC81124D0447D97CF016804F32F17BEB114
03B42E6C4D60CBD23057F8D4B5FF7A399E8DF5E29E959A98BEBE591F7EDBBB53
22BDCAC137E2351CA03721CC64F91E9D1CD2094A6F7F76DC21C0AC90686FBA9C
CCC5F67F2CFD19A9053A628D02098EB4611E7867A036DEA50ED9470153B80E04
670A9EEE01EB3F00ABD7C9BFEAED8FDC1E876BB9B01CA9668C66C64B03A5E1C3
E1A444C1C2A385570E10D006994DF8579F32E532B964FFFDEEB586E1EC2FFFE6
90AF46E3B0CC7DC5A56EF2B8844C74FF2F2E404D416FA053B4CCAE9355F0408B
C556BFF08265755D0BE0906BB80C1EAEE6D2387E984A73D1E0F15F9E2D60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 97 /a put
dup 98 /b put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 110 /n put
dup 114 /r put
dup 115 /s put
dup 116 /t put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
592943209E846E55B4CB54F6658CBA3C0B29796D69D0435D5431ABECF3448C15
98CA2F36F3659E29AEB79355EC2ADF835CF0886C21B766B9DEBC3950B5B3B496
2E06D980A8C60305B273232D4604F12632FB4F1B2F9703952C823C098543AED1
CFB4ECF259A11985F0C944A57B5AFD853374FCF12305601200C2A393E2FC77FD
F78C2BE808F1B3BF86DE6527FEB1D9AB9633AF02E53BD71835C6181A5172332E
B16DE2666025E49881F77E1D4BA5A6A3832DE12563F7E62DF430CC698B388634
7607BA0CB59410DCADF5068149B729CD438629EA69BCA761FB76678C69F671B7
4A394787A86B79F43748B967D0CAE9708AE4A75F5FD013A345F995AE8295018A
F274AFE9FAFFEDA5B2C0D683DC7D3A3B9F0803E798CBB98DF4EB98EF5208BA26
9AE517BC75B4BD0A7BEE9CABC54F1306B2584D11FDF2DD8DC81A27648A6824F0
00B1954B5E0C8C31F82E15A0B216BC3DBCBDE85E609BCDD54CFD5087F6420E3E
D78032164CD829A4F00D32B7424774FEC33DD3CBBA1CA87B6FF5AA1B45C37F2D
BD78926CC75B7EF90465D7A4CCA72F943E2EEE1F73525C39046231D803730428
DA1B48A9FFBF884FFDAFD64AB34A6F236543D30C1B80BD0D41F709F8F0FDD572
E1758DF201D3356DD0507D6716597FE0B5832BA9A56907B14C79DCAB1A0ED986
EA2104F722D9ED60869464F7C105A7182F4993F0A1E45A2D9CD4F340DBA09346
31D12371300201768702EE782910D7E354811C3E40A77A393D916599BB421FF8
F4FCA61FD15A7F096936B6C371483EC50F7C9778C6F2B331728DF427039943AB
48807BD135FF2BD8E5979C998A14A3A54A597052CCAEF8A522B05A88DF892B2A
C89716AD4085BF78024756F2811F8ED93FBF7F957634E8879EE6D6F64FBBEECA
C57351E4557E53D630AEB720714088DD6127506937805F04C0429714135E1DF8
259EF0CB0B9B306609A93C4A79738283FD623C7AF25980736779C7941AA5AAEF
78F34F31507F0735756B35D7F5032230340202E4FA8DC053D181169112969D21
37407FDEF5BB493DE14B72A87FFF86F555DEECB809F54CB920EE8291F3BABA00
5B532FE493A76B61BC3EFFB7B5326335EDB8B874EC7E1CB13269B83C54B543BE
5CAF6E6F2776CABFCD398A5FCD156E630342A5286AE1253BA6CB0C48C9903315
2E2A577C874307990C557DD2AC43D55247C73A095D58457F6EF5948587E5F0C6
1D8CBFF2B331483B84FEC92E4A05325620B42D5A2E23C395C66A2E9F295C21F9
EDD67DD4877C2C7F7AF52661B2186E11276EC58DFE986B65AE44A329EC1ACE58
4CD614BCD912218DF533E99A7DA1CEF16790E0AB6C2CB6D47900D1ADAFCD91F3
743119A55FB481EF59E4CC06ACBC5CBCA851BA434AA2328056D1DCE8D666138E
CC976400C167F4F6506870B9B444BA4133E28C159AEB75ED2590F2EA1D7B0FB1
37363085A783506496E17F41FFEBA4C237598490F5AA01BAC485AEB1B35C25DD
4374DDC737BB90C280E68346B9205FB3E91661DC88C16DB4CA303342EEC4701C
94915635D3A99722A7ADD74FD79C25372116F5E90803273AADDD96D5A87E5F8E
6026D49BF1C7CA49D43FED771EF8C3FF01B2C91E004E5212CD7F483D80A78E29
B63870FFD2F53030E4D424E45BCD2137BAE6512227E477B634544F40DF78CEC4
7BDD908810A95D06A9687CC8DF46CB2C8E2025E92CAD9E04543AB4F5D5BC7483
A5CD60AED72DE8F402F89EE217DB63BF4B1BBAD4130AABD752F55B7F934D50EF
A5F24ADCB02AF03E083859D23650ECF443AD53A2936D7292C4B167879FCB42F4
9239EA463123F1750F94A10179FB1D20E81ED3A45C90AC4E0956E0D09D4B8E97
25B2B226AEE5AC859F52BB24A71B7BFC6E10A21563FAF651A9E80B26692FB46C
3489ACB7FF529DC530E3DC9870F3F0BBF628A0E57F11A037514664216E84E138
1E7568B2021BAABFD2B1A8C78D85A8FB834B9FCCB282947A825B51049A38B8EB
6D8B3727CE03E43C7D03122EC05C23E42DD5A5DCF77E03F2E65CD138E985706B
C323734DE5FA95D3F2A33C3F5FF840BCA71DBE3F3C87733A435E5858D07932AC
308D4141A2ABAEE67BE3B719169E53FB4CCFDB97D5EFF57048B238B36E564D2F
C78B66F19B4D5A3D3344FA9DE5F7568328A8BCE9836F30910443A3C2D8FE648E
EAD60A4DCD3EF9C7EB48D35AE350C67A911DD2B64BC731C5E95239E7CAF1FF5D
128D487143B7EF5C4C632AFD5B79FD2CA77C11ECD0E9B1E0BAF8CAAE042CF143
CD381E994F2F453D7B1A8D5495C91003572A8521FC2455118186E85D49D50347
027430C6FDE68778CDC13548E146836BEC6B86AAC798032ED437107869016793
B6F475CB6E96829C5B5DB41082367C07858FD20CADB518CE14EC13C008E8602F
676E646E55982E1F132B388745A361DC4C9CA8605690764CF1A8A0426552E174
F26A18C8B72D36A08C11795C33407D5C4528E6211A1233626A74147F00105FBE
3A4688A085E3E348B54A3A7B6DD20A65116D334AC339162B128C1BB75E0F1946
4C13E1E0B4BFEABC204A42ADD0BB4492925578475903A8F82713EA73BA2ADDAF
92B75CC346A056A796FCE088D00C2F5A14244E31DDBD4113A721BFF120F780DA
47260034BAFFF8631F3E18FDF6DBEFA069BA48C9DA6B48109E0AB4FD8087962A
747CD7D7BF1225BEC240791CA24B5A1467ED3EA85FFCA055D8B0E73D6C442FCA
B2E87D0B518780F6FB9BE9F2522AAEE121D9F7
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 33 /exclam put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 56 /eight put
dup 57 /nine put
dup 58 /colon put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 71 /G put
dup 72 /H put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBBEE171DE0B4A21368F9B83AF7CB286D8389785E93
B11277C65D4D789AF99B1D7A3032947A51DFABA0DA3B94D8D4205BE243264127
474D97F3572385018D62ED4B1A399B8E4AED8D7C329F109DBE3015A727DD70ED
6DE4DB36BF48205C8CE0EC0A77491A26F93F7C0A036827625F115786A2ACF14D
47E189148216456EECF3BBAE34408904A558C8A43E369A01C4BB7D2BBBBFB271
A89201777264C399F3925DACEC43096BFC6EED7D5B536D9846B22B75BE321739
617F870A37FD85691FBE1D0A38FAEF19653C8D5D5C1CD4661459A4EB3A9DE450
E4153CAD5C139394EAAD21FECCB8AAD024696F68D8F2A82BD0548AE275EAE43B
E62A2C1A6A396BF4DB127663A36D09B0388C198F0CDFAB1BA53D79420A0C7529
B0BE757D554390F271204C18A4841F5D5EE228C9CC7640D43C3FDD796626C500
50A0BFEBE25DEA3E70DB25B9DFE02C1469769932A190423793E5B1D63949536D
C5C11694931A599B93D36A4A40D949C548F3DE4A72824259C3CB3165068E2E36
FA46AA5686C3A0859D63FFC3A1CCCF0BB666D867EEF0852A586C13A95E685852
FC46EDBE0DC8DB890D11D83B238DB7D34923A1FE282B926503868BD171D61955
7A85667E3D314616A176F92564B809A3F2D592816BED24969F5488188A441F40
9E0693D92AE6832C2761561CE7137D96A73AFDB7356D21257EE38E8953DE023F
179D5C81ECE07BD4FC0100FB0D88907E8889A0D76518025E01F2DC8E7376070B
77C6D79C45080E70F38ABD3948F568A0E62669597715EC3F05BFD4044C79F36A
51F177E80007E54C0E9B46867726A096F77A39CCFC2FE253D9053EF75CAFDF2B
77D6A52ACC696507BF9E1EB7BBBCCEBDDDCCD03A3A1B713A2C6491DAAB322422
1A23AAE97B6B2BD8D4102E906FABA2394A3097DB613C844AFE41C6709E48702F
F339B460E131EDBAE5C75BFB9F411513A5703E9C0A45E76ECA0255DE8339B25C
51257D84BE020A5FF42518F264C1A914E1ABB9361EDD47A2DAAD4CE62C40A2B2
44BD22EE15680E972DC7B08792C39F9D5E9FD560C56A5A55B30BD64A2C8427CC
82288C9CB74086FC305BF530022496525F9ECC8CC82037E8B3506862BD0AB0BB
5CBFAFED1518A8F382F5CCE3B918C8932BC9F78CD0476D9278138A69FE89D3F0
92640538BD35393B684F6325C14861587EB0A7D3714416756677B699C0A0046C
4DDC5648E320BD318A1B778F53130B0F2A6A1BFB31B0E80114387751D0E501D2
C76CF2A43C003B533F0B60A1AB21DB80CB32FAD543681EB40A7FA9DF7A5BE9F4
53C6ECB0E929B539D0EA40350085E026A5B6F9D8B1B43E0570F8C111878C067A
F3D17A7E28F0FAD9F2FA1F1B5C76D49DB6EE3509AD6DC996916E5EBDCC42B19A
FDBE67CFC6A8CFD1F37258D8DF85F0F08F472213460D759928CD05EE31FE3448
41E4FA519F8FFE46D3748BF61453B4D667FEF6EBC4821C592BF3ABAAEFC3C1B6
9EF43931BFB20A06A7F5C2EF96C997B4FFC24F11A87DC987A61904BA122E748D
C4D72A946CFF9EBA9746E23F51DC37626E94E265FDE1AF4A0556F35DEE4D5917
E02D6141726BD95830FDC9593ABC9B3EA7F88995B533FD03E53AEC3A01A00B5D
784421061D475986705696B09808F769577EAA6DCB57D6C5456380795DD5E958
85C36E7B44E4A96E118EE27BC3BEE8781FAB7D291AF941A639E11E60EC69E70F
6163804C6C59B3690815AAF7198BCC4EE40BA19C5714AD9AF589284DF511EB3F
60215C63D769F0C7EDB43ADFDAC1A545A2DA4D9C65799267498C2A7D758BC520
FAB53F07783CADEDC7F15485E87298F31F8FFF465E66BD35C668DE958D20AE24
88A45336C07080610B92A5B657009B418CA00828C7C5C5D5D1B013098748B852
295104E5711C75EAFD297695CD06D5FAFA8B45FD4465CCEE30FF415AB2529282
2177DFA801344F6480363C2A1348A149B8278396A2E03372A5EBC24E7139D8F7
A5B4BD328D11C7DF4E67CC1AAB26E9411F8DAA5BED68BFD3ED04DF575063FC5C
49676E1817ED9DAAEE6ECA521ABC56437D7E128E6C6028411EA6084987D07B6F
8A5A7B2ADAD7A8CC9A433C6C8EB101E25A1155A3C2F83FA6D6AD453DC3DE6EB6
C3840497FAB693629907A8BAE5190A7793F00D110CB1C23146853A05DEB37074
527E0BA115FB58779234209E5C63ECE94C81D56C36AC8E97A8536769027CF882
72A4F92D0C36F1491E47D009132548FF839C284ABEF4DEC1EA65B7EE6D544FC6
DC9AC68A72B2A1E650AA378977DB726A46D254B152372B2E9AE6AA969A98C599
7193039F2144B9F006277039CBF2E6F37F0ED907CC8B6E74727762206E38EE09
A3F2336012C5C3462066894EBB2E75349AD267812603451026A0FEBC0DD93FC5
4FF6F917EE1487C942EB171E959144F161D06F0A797B9DEB89BF1CCF88ED41F3
FFF86C13A5D5E87E9BB428E9C4A9E2C9154627EAB8A9645A4D071A5D8CE4762C
727763E38B1EDCD262F31027DD1C53FC7C95EF3BA78046503789040F33A93B52
91605EEA88F59B4A5B1746F88F7471920B3763DC2D5FFD5353A193BD6455F614
BED152F4369E493F38D5AFE18C9EC17EF69A739F4806B7AADF22A5ABA2968D21
97F2687E56ABA3B1F172F26B8B17BD7C64B72F39DC308AA7B15F03264DACB908
5706FEC43869FEEEA2A22A83D2B7366CE230CB9EB695D71FF7067AAD2D129570
E59D922947D917A2C612F38EC2B94DA7D8539E1A3FD58114EF308BAB856FCCBF
F3C5CC1B9944586FE7886D9E66809C7C46112CB848F14474622774207E4A13F6
D90D608FFBBB4B5AA3DB819ED40BD32F0F996015B37FFDF938534A13AC1040A7
D76E264FA3D91C33BB79E605D019EEFABA5B54FDEA0DDC1CB1CFB308850426CB
8DF07FEB8B230A06168F1DA585B0D56AE9379F5F813C6C5F20A4D6B367575196
244C2E52A30F00807583BBE31C35B7E1F775949C9CAF6C3EA9B96699C29D10ED
991C318BAE8F9B488C9C850B7F5E98972D05DC06E04AAF95FF928F3FEE14FE17
31095EC48E721ACDCFF61F7E348E4860A45F9BBBB2901D0EA044B8E374082183
A38A048E3EF63EFA668AAB806B11D89B833F464BDC351692DCBBE8F7A15A8E8D
97BFF01FB5A7202116F1D15C57F71CAFF2879EEFCC086A31245BC1341C091AC7
6E36970F30BE12F8E7E4CEE2AB1D4F9EB1D1BCA0708E71978ABBA5838837E704
5D57947CA2E329EC3A3A3ABFA1F1872AFBE9CBDA10AE5E0BC54526369214E66F
BB16005E65385D715A8A6075EA393433C3DF7FFFCCC1428783073C2C1DDCA4B7
6FB540C269222BCE85993123AB836E0E176E3361266898904F056B1475AAD4EA
E7E544B02AEE94C086CB647D6000F68AE1056A418A8F08412E1C2AE867631E23
8466D00EB92F3C7DA309386840E9AF04C244EC47582CD07E6B78C7E99D23D188
6D416224EB91B0ED3AF15FCD44CC167A1F49202ACA1A3518D8A4C875A6CE1D3D
3B69F26A3D0E360B89F967E12EB23C98301978153853EBE07D6E4F75A6B580CB
797E2D13CC4F1BC1E30FD0606BEE5048AE13BB99882FB1FAE40E5CE0FB26E40E
7BAF7EC699FD6971EABE32BCEBB207BCD5EFA73D610AF5E1559C72791D27950F
63F42FAEF4E0F5A6211A2CCA48FE82A605BE1A4BA3EA8DA2DB026A0F74F1962F
94A39D890D8ECC493931684663FA974564A810D27D262FF4F3F8B9D4CCD36586
1923B2831E83558720C2011FA08EB8DD99C3E73D4DD7981B6E59A1AAC212F129
8B74283CE3CB6A69349A3AABA986A2B251485559A9E2E9CE31A0373B30A158DF
8E67CE5FD2B30A3F59C234103AF761B36AEC388BDA8AE494BDCF11C51AD645D4
CF5F4CAF0BDD33DCF5B734403D2A0D977402FBE2460D8C4F1404BFFF5A85AFFD
526A8BF6375D8159E53E979496FDED781DC1D8C4522EA430B81F4B5BEA8CFB1D
D88371B9E22DE19084BC40A81E4269307B6B73953465F198BB89D05D770D54D8
AEA6CD462900C7B4956D16E248E97852971EAE65BDAB22E0985D3B1808894415
D520DB634432B9EEC4AE4069C60253A2AC0BEF999176825ECD198AE540433264
D6145953C3B8A29570311A77FB3E1E86EA48CB828B0D43677298A87C77B649B6
F88750F988CDFC5C9E4DDAFB4F1052DABF617B235BFEFCFC6449E1917BCD4FEE
33BD13236849C46BDD0251907ED4AC8377170877C1FF186A6665462D707F8CCE
9BAA678F421F94C36E8666D479CA99D2934C26CEFF0FF38A60D22421517F18E9
A22FC6E3F7D752616C6F8DBAF8CA82AAC0CC787DEC0A1B86515DBE1E14C42F52
4BD81DC37DC71E0C68C1D860E7F9EE3BEA6077B17E1632F22FE6E49F3D8FDECC
DC85229B1A9FBDEC6E3EE397593799299421B30D033BD828F6CA5A4E3639DA7E
177EC1BAD32934A31A3F14D62CFBEC8E1E9765BD3B990370E6355D296B6099D5
D3A7B8C235D87205F84ACBF1AC3F5D6137C45F1335A1DC79EB9E821FF9E46367
D6DDEF51C2438F5CECF454C88A21A932CE5972493CF52A66322C33AD53A622A5
EDDBF71B1018797D2C105751616EFA8E3D769AC6311FD583F212BBEEAFFEFD1F
11F488D5BD8CF4A27E633D705EE4DAED05E10BDCFADD6BEA477B74D84108225F
51B9C2ED3545C603BF69C8AE43489782738928E67A391B897121B37C60F0AF7A
43E091516C3B43775A167C93F9DBFE406B9BC117DB632E1935BDB64021E113B6
8BE22B6C542BDC054B55238C1D2D8BBED7FB1DC9E623AF316F7342D697A970BA
FA84C803F15D805A412BF2492C8BB75879F6FE179A357017752408D634837F76
10ED5296246E51F91818417170F7F0E5078ED826C1AC79642B2A2606D8B20DA9
427AD9A515BBA4044A022489D333AE62BE962155A843FD3FEF31F0D36EE6F5C2
854B9612BB5739203AEA42A640EAB56E7E70DE500CDCED58BA55E7A92800A0D5
81A3B9C8058EA61F010470062E3514CD5C8CDA5D542A5B6E2F463FAB71D78BBD
E582A0D3496C06825918C78AC7579B96E71873232269B7E774B2906EACEF3E42
BE76F2413F7027271AE6A764B20CE094D7977FD4D3871BC94F138C48D2F6B314
4629C23EB43C31B2E5DED5CA8E5294D817B7543C9FF52BD07049A495263BB4D2
099BD3112FAAE51ED0F3648FF1F5042190B3C5B3F9DBEDCF6EB0C9863CEE3620
41C73D8A6FB7A0DAE9F9592C474D2CB15D1020B67846BA9BD5250E38527C51A6
44FC433B7D49BADCC031E699A50B5E76004905C4FB9ACEF601DFE9C91FCC07FA
62F348C2C3C8B2D717057B138DBBD763F5ABEECEF101EEC75EF933C1E026099C
B7BA70B5651F8D23740D7A70BA948D2ED8272D6872ABAA0A085B86369DC66486
345ADD21A243278B482903354CE6E12E057F7DCD5D6E68249C270578EBF1B741
1376D1A286080BF568BA8C761D45FB2D04103E988A54753AD3874634489FFE55
FE9DA46817FA963BADE6FB24E2333D02E835446FF3B0954ADD1A05A3D91D06C3
713153167A74655CF4FC04CB0ADB514AE9E8939F87E0A893E6A7D20AE0C6D49B
2CEAC4467268081FB237C59123F49725530BF9AAD1A87D16FBB14AD8DABC0118
765A6984DB49F9CD50EC57F3DE338AE6DB321B75DFCBF17578659B3D35EBF33D
DC9D15219EF067E1378B11F6BEA30DFE8C0FE5FE5C6B8AB3ACBDE39A1B79FEA6
8BB3AE0D8E899CD8A8537D5BB201F6509B2D57EAD9C8FE20BBFDEF6E8D7B66E2
CE99B254BA618C81E322A949A5DA56299B86C082843CB42D3714F2ACD2680A5A
DD6D5F8FA0F63A9E75719C03BB3A779958674A3169DCBD181254DA6B8B0269C8
5BFB7141CB0336817D916AF70F0FADA23A4DFEC7E8D7988BF956968793179365
A4228BD3E57C8B3F74B9DD3F3895E441C0E179FDADE800C3D2F036BE937918B5
6E32A478A1E5F8B6A36B51440B9DB702594B2AF1CD61069639F17D27ADA63776
27E9978920E70223D2A0F3A543F75EBBF16668A49BC205C102D9A3A0FB1C855C
F9C22B6423ABEA953C98D60EC8A0DF10C0EA26DBED841CDE16D2D10F1F6F8C09
45621C0E73E1392F2640846274A0F67140FDB16CADDF7F5C9DB0A5674E28943F
EA3B0837474A543EBA2FFAB67D076E0B5AEB7E41715DCFDF8FAE6DA440350062
59EA0BE6DAEDCCF8334D282EB67C033D10AC04A36D3BA7D0D2C37E19B4ACB526
6686EA6B98D1CA9B3C947E54AD2FB5AD586043E70224FBA1433896E928E60AE1
152206886DCEAAB1ECBEF398FA20CBA39650835E593BB914B7E37698117C3CB9
9A4D0F306598DA8881931815E2DC4D46B7D2DDE2CE3A422043754825010C3CAE
896F52F9F15B7D18D41E83A5D1D8204D56CE3A1EBD130F14CCF9B09858EC259F
0AC1B69A6DF65040EB24213AFF92A6BCDE637B429D68C0E0C7AB70E18C920133
287BC5AB764E9DFCA6C8857F36EE06E01B26444BA9C10ACED0C901C26C993B01
ED6D74AD51BF42330322E0EE20CEBA6D7B35727951E2959BB067DA1FD15CD24F
541D9FADE98A6683A1F4B5EFE9484DB5A6073E4222264AC107F6FBACF07E9513
AB703254EC91A4E13BB41AEAC3237E390CD93F8EF0C7A4DF93E8BE9E01937398
5994CF067A838A345C1D448D8BA3CF1E6F99F95051663F13413A0E6DC606A429
2D4E90CE6A0496A92CF6BBACC18EB00D9EB441218DA0EE95DC53F8FA85CFC317
84BF5157A9D2EB0E5679E099809CBDE6133BFC48AA44C97C24A3837E912440A8
97FE89F9AFD18F1D8DA9B9B7C960D35DC4A49205661BAB342F683D2F5E7E92EA
BF2AFB3B6BC7CDDAA864C8E08D81B886E346BA2814A6C9C6401EE01DC6948DE7
897578F3896969847F069E968937F9FA6F11EDE650B979524CEC4A2F016C69A1
BE71B893D4BA4F3F28EB7D9649AE3F37F3C09D46D6A60B816D50A25D68323332
1001EDA6F704129E27F60CEEE0421DA0D882039EF14C58A3CD57C75C06B34C06
B82F0D418FC68120E3AB2268C22732160880A0C8002935C74DD3E149EC8E95AD
6E9AD4FB379345C273DA9D2C5C58664B7BCA5AE1DA30B193E65BA76DED923AA1
BB50BC6198D9AF6676F2FC0C084A6743DA011540784B14B8501F73D6EA579A92
B98F34922137BBB038CAFF9B88A44C7BBA3E68928E5CD4A097E759E51E572BCA
F268907B24DB991E27A56045166A3E2FCB5FBA28C93FEE83EB842352EA406AAC
CEC05534F2B36A158F4AAB3C62A826C24E2D9E328B9BE3AD71AAB3216A96B7E5
312BAD04AD93F36D55CF3C2776D2A44C0C02F8CA03E2F82F4DD8E6AF14B73B09
0C7D4ED1A00D7C5C24237823911F6AE34EAEE27950D9192CBD4AECEE4CAF4F88
9B934E49259FD82331C92B2F3D695EBA91C6C031AFAC594681849F0AA5CF6F83
EDA2530F82D93D8209A68AE9F6E1B6A36BF08E9546CA75295BFB2A3C4DA1B32B
03743F77E9D788529A43BB2B99C3FD8FF0E47E988C62830A12A06151CDBFABDF
2F14B3F0F0B138C752D82DDF91CD2347FF5A6C82F0A4C7BFB4AA980DE70EAE26
6987C2B832505C406DD1EF60619746C24C479862A96B55BFAAD0152C23673E89
6C914898187B380016DA3D56EC47232A22A79960C94D95F00375108ACE99DCA7
651F4CB4F9782E8471000E34370C99B663B9AB40DEDC03D78DE4A39422EE51FD
47594A04DFD260E6EE93767FCB1A89FFF55178F9D8959B35D7D2248AD3DF5AF7
4F544759E7C9507028E3911ABB3D2A267AC5B3D69B5BF87886E8EF1F9293235F
30C04DAB94519BDB8C9F01FD0053AF97F9C866CC765FEFFE0148248106D9B9CC
B4C6F9208FDD8C8351FCBC07A46241AC1DD93C479761D7F9B058376819EFA7C3
3F6E71A7AB322397360CAFC75CBB20DDD408A4E7BAF306B149DA86E938F11274
36F54B0195F1177D80F25D265013980B249997F8BE5BF6CAEE9509AD83775B01
AA85F6AD0F4909557D7152C63474B6648F2082225D22BEFAD8D58F7BD83238B8
2ECD73CEC2A31BB309B0D5ACD9B496CF3087C23605C87F426F172A4B4ACFD81A
100CA48EBB82619AF0ACD1FA7280F37F515AE4AA5216739F5308A7F064F572FC
76C2AAC878B6E6FFBDA1ADECBBEE63BE005DFF30D4F07DE17B87094460689AFC
8562DA1270DA0D3EED0252BC4962D9D5EDCB6CEECB9F8351F3D042D62BB13883
E08F5E0F06AB9D1BC9BDCA93BC38D4D75BECC565C6FE3F12D3A17390729E6A38
37C3F6E17C23476347781C9F3C4904BBF0163AD32BE08D3983AAB3420DD2F81B
41C145E5CC0F76226D7307B944D9BC47885E558438D25218A98B9C30810CDB19
03286CECAE91AAFFA3FE00CCEE58F7E673664FE81027E72BC5549437B96476BE
A04DD4DFB225A7CCC89AA213F60425878E1E89F15653FD3CEA1314E8F79CB91E
CCDB2434CE0562B216101F455CB21C25EAB867B6698876581470C15D96998D69
8752378318E40598965B3DA896A5EFF8F00B52C5CE33499C6B0C192AA3879D13
82F5377F3B7A4BA557A70BBE3814F6D9AA30118991223BE2F271EAF294060752
C47E9C3961689791879E093399ADABD6BE0A1BFB204B9430DBA0E187FA5FEEE0
65436B20569911CA12A9C8823A755FFF4E047308E2B9CF6DD9DA3F27AD3589D1
3E270DAD395CD15D680A4A76790BF2DBF3672BB8359C6927EE4CC08DF5268544
FD1E173241DA7CECE1E6906272B4BDD0FD864AD7EE7BA462A2363F05924D0FD3
CB6423D282E840FC74F85BBC66E83E4B81E4879B13D4643BAD269CFF14AC9430
9C4CBA1BE5C8A5A4266F8D650311EAE3B36023F0049AD81D40352714390A7B0B
ADDE95356FBE3EA8DCB22F04061F4B77C5D72931074EB3491BB34EE527CB38D4
84E422BBE58D56C544624F1E26141B970786C7FDDC60C048AA45007C34320207
39BB0476DDF68E245CA4455F3E9F1C4072B508232D7E8489194D6CB932719FF0
62CBD85AAE666011823102B375214C5385706C52FD7BDC5399F7A9F86C0479C8
AC1568FABBB8EAF750296577D5ECF9E8AA8FCEC5CEACFE0F43A0A1476BD8B6A1
1B6D41748438B6670843A6BDCD8CF1F33D91F154C551A10EDF26BDA574FD0846
C5316C8BD16320DEC90F59C73DAFF26B82BB3C1B32462752C4801C11620EF531
2A7B0A56CFF775D949F43D07B66300F856907418B183FA8B437E4A1C4C479C26
E6D5C0F76F5FB5AA1152366ADB637486BD1F2892206F40219B8DADFFE3BA7FBC
036AD257B6A34F40BC12ACFA3E9F9636757B1D8FD33A9BB04028BCF5D4362E7C
6230957F47873189CF8F89BB2B3D021DBF88FA6490BF0059D396E25E1FB30EE1
AA746A029DDB269FD78AE9FED89204F05DAED1CBB8DBEA868605C28B3B75BB9B
9A784AAB8D8B6489270205EFCC6FA2FBB304BF1B32A37EB35D20CEC1A6632C27
DD99EC03F864DC6C51D8B180F7716F67908F8FE2B4D65029C2170A82D28BCDCB
8E65104631F586C743A10C3C63AD29C293FA8D585A684CF04CA816554C76AE4C
CF48BD8D55D7887455B1DC2D32DBDB5138D17EA1A9BF413ECBD6CC014752F54C
1ED52E4FC911FB4E32B83365A53A344F405D27310233699228C62E28E8C91F52
AA17925486F260C5A63B38E41203A5A86DADBAD19C11C0E5E68F6792DE05C517
18BB1DC7E11332CEA20D4093705286FF1074087D315BC3149C0EDAAE2818F7E0
0127CAC43AAE15755A1E69F296932CBDC74FFD025A08A574AE6EC2C7678650CC
892B5FC94445A0886AEBA585B0F0A2A6B179C2D7B963D1CD130C2077C73BAAE1
CAD81CC997E7B1BD22E453376A7871CC7CC3D13325DBCDD9AEEA52DC6107D2AF
74C7AEBEE77159BD42915870CA99EA4C8B2DE57BE512BEFC6C71C1A0217D137D
D8CD6DEE085FDB97182FEC409ECC7CA3E259965BFC86A512D0B57F951F343720
4B940CD124B472F55F115F7AE4190660E134D1BAA94EB029F4236C169595F087
ABC3FA32DC3E24557C110F53060687B4458B6B1E07641F407437BD5982A10E8C
CD2BC7311F2504D54E0C15A266C9D91A80B3298BBCC999761D53B8320F48A7E6
B7B50CCB0AE684E555777CACBC64F6DE55B4CD83FC68E9585218E970297F5B03
FB3746175B7D7E371A310F81C46B3B6EB48A3F4A242C94CF1FE782792D5D3187
1BD5FE7188C9B6B83F7168BB3978703BEE48EC7DCC748BF514D91481C8F8E8F9
8CD4B04949FBEC186FF62788BABA6C46E1A44ED52F645EC6BCA464294E45CA3C
BF83B0057DD65AD2A75BB017E0A0B330555E06EA64BB6BDDDABBD780DDE77ABB
94B7E6CFBE68C03F09FA6F7CA276D642CA3406E45A4D99782B19AAAFADC11E15
8405925A6BE1169E3A1261C5A55CA0D2E684D9CABE63CA3913440CFE5B504D9A
D89CA1235D413759934F4F568EFAE3E49A7AEDDEC42D33F1C7F92A87909D4B2E
D55A4109E7260F18DEFEAF310C9EB07EAEDD70BE017A9BE5C882DB6D4EC197E0
07EFE167C13EBB35A587D453951D628639D157A3F0609B7CCF69FEF1FDF2EB8D
A2F5025C3E7542884A8307ABE7B56EDEDBB4A42E429FA730D2DA93A11C1BD1EE
CCEE89168D443DC3B5E49C2BB74B022D993F74AFFC513470C3503A9551A4703D
368D7B6021A0939EF72B0A572C5F02E684CE0641046EDADBB7D05114C421BF68
053BBA4CAA91547327D9E73DCC9CF3759768FFE8F813AEF72C5C75BA69DD081F
659E74569161D6AF54998143537659EF5F4498BD48CB5CA6F30363363B58F9A4
CFB40D4C4588567EA954296A7B4A7D4F80CED661C1CCEF72A2A04D15FEA28041
EE776126C27AC90BC909E581108131959D42AFFCCE5A5B2387547279FED9D2F6
FAA9EEA3EF9D118FEA8A0B8CFBF6C6ABF8D674CC8E2902F75E42BD6DB1199E2F
0B9BAD82A06F48C7FE6F194AFD3340427890BFB7C8F13D055F92F52A906CE708
A1FD9FFE7CDF21E87BE31B42E285ABFEFCAF164F3284AF42F44157A623F9B24D
9D9F829250231AAD5E35FD99AD2B7BAF35F4B7D73CC426CB4A859A1FA2737193
615C6C88C6619131EBB0C8465B79CAB0078F5244846010D27EEDBB304BCE79EA
AEDE9FC1BC0286C6E0B4FEBDD9E86FD4B309C60EDC0ECEE20EE3D807F1484AAA
B9A11B7EB17048BD2C03C88B57934C678BC18A4EE35A9C35FE3EAC3973EC8CEB
69B528E3586618B0ADBA8ECFA034B2ED87C2DFE8EFFCFFA689387369DF7A79DC
091CF2741098AF88F6F1D6D5382842F7AE5F1F8D3ED1CC935EEB79DD7462CE22
EB1ED4BAF6CDF16BBCBE8F53D12508BDD013DF930F828610373559ACEC2E350E
95145CEA52CF4FD29C8E607160C60772A02CBAB1DABC3B6DB9C11CB9E29DF314
248C1128CFD466AD5E49608A777254574A9B98A43D5E5213EEE674E2FC5B9604
35D4A8A836B7DB42D4D90EAFC582372FDA10B7A0579D81E424D7BE2E360C40F0
6C41CCCA28A2EF4B77B013D99B388630BC2D7A1E15A4F2B32D54B2715B7D817E
F135CF96FC37CFD21C79B032A1374781254C8725F4541016920874CA3DA9331E
42E6364E2796CA2140759185A84B9EFB3C02F4AB963265E34637DDD574C20ECB
B2FF536999B44B53BFD1FFA31234E03D934360664A7CF55D6602B14ECC2E661B
A215E0A4031C24239BEA938A376CCDB47C902ED8B499D8CA9957552839C9BAF1
445D50B7E887114378E4FA570F44B73C523DAC70BD4A4FB45D42F99F715622E8
BC903E81624E095DA1E8852FC733EC862D9546E593A0219FF291F9D2F00EDFC3
FAA39E765A58E1F69FBFB2BBC5461A0DE5936E462BA695B81919F4F2F026FB33
8603D7FF3E387639B934657B3A9CC2B2FBC089F44F9D58FEA720623C07073CC5
39835383A0E27740DA4F6B7B657A012FBBBE93DB54E835F0DE6F65E500279C59
D8E555F6B0891EFCD3782E197FB99008B2E7B8AB2FF9979DE7F0DC1EA8F38D51
841DCC937A15B23F0014FCB3DF24F599FB199371BE37649C2FA5934B80D44CE1
06194F4D62C0FDAC1E236C93C662FFF61B6995DA36A3C1677EC8E6CB0D4FFD51
D3192B503FD288487D9E92DBD6FF451D0547436C236E39377601610C1110E1B4
936EC17F988C6E9F9F0CEE6FCA013FAE758B777E937159A6A9E82AF14FD80C3A
18BAEFE4A5C7BF97847201ECAC0A7A669810D384A80DE87C82DB7CA77E4A7552
73235EBFF5EF8E165917BCB643CE5C2EFCC35CA06D23AE2F0FD174F78B6819C4
F9DF32387C99DF9809E93F681B0FED088B6EA6DC508A235C5EF75C38AFA991EE
781A223E6ED312E5F0B871CD1F77E8D8D24DEC01D1A51E9E46750BBC95F7B7F1
5234D0E3BA943E75CE2DFBC934250FD0A4E1298D16CBD5EB0E95E881D4C7F581
4237BD26D56C7CA92D9AECCA03C1DB1C77A052AB0B2F3C6EA93B3489E905D0C1
1FAB812294E4C20CC04CE992FFD7DD6352095651D773117A8B475ACE16463114
9AABE5499DAA50EDC2F4F89E29824B0724AD540622E05FD545A085CA29EDAF22
7E45C2F061EDFF0E9D3D0169DD5DDF8023C05CCB7C2D0F91B414229A18B42766
DA3D5005EAC3ABB0DD06E4D256010FEE26F8B86885FCF9534E7729FD025DF6B3
14DA6DE0402DD720BA1043A99BF5A2368396D3380DC21916E925EC08225C0761
4D1F3DD89A8D97A48C77B9DC9C2D2FF31FE9F1A10B8B156CC88886FAF7ADF4AE
6C525013CF7D89835F60AB11CD0B8CC78E590676EF2AD1231C6C2594D9FEE20E
E1A006A7FCA803C42CD12CEB2C621ED103672202F8C30BAF5EA5535081B8C564
E9EF256A9BB3A28BF2DB16A3BB964F67C26F7860FC12F1D3EFC54223C6225A4B
3EB4ABEB2D8D9140ADD234DFAFDAD828DBA3D9830C39FC79FB7DDAACB5973E60
233BB2298091CA8C33EB1EA423AA3E61562028E0765BE8093CF38E476D4046D1
38CABC5ABF19E4D85851CA5F5C02C506D4B8547090132CD1DA4B142E79A5844E
4A7E14AE3EFDC76A72BFAEAB0B1E61C9D9160A56BB372EB2EE561053433CF7EA
F14EB266F7818726A3FC7EDAC018D04531928B51304BEC40D4BF293AAD797264
354D3EDD18B49D6C9B926892AFFF56CA3090DE36CD0F9F3FF3CBE9C3296682AF
B471A51873E5B66D95ECAC33B12586FC1D7CEBF4ADEB039468655DCD44C1585C
1B1C09A27C76162410C9A3EE218367E36C4F808133BB8EA7FD6C21863F878DEF
D8E9093734EEE02678F207102D9746391DB4DA94EFC95994AB95764347A2F0D8
C95914D99BA0B014AE87DB814D9FA864B42562C5DE98BFD98FB5331454A6B07E
E14BFFDE52496789D9FFA13D9F4EF868DE6C16BE24D81929F3BB3D4AAD7158F0
F6E3849F7F984FACBAA8FD81082C0F8F2B4337E198092714FC7B8D1FB1BF116A
D945264FA22C4001BCFC27C646540D502B3B3B24449E6146C3FD6EA9B24416A2
AAF7F989D5A96EE4C0D860EDD81274D2971762FB5B575AC730DA9F9B2043478F
C1C9246C022A02932E54DAA7B53C0615C6E12DA73CD0C27BDF7CE0BD2FFC2A42
473AE86BDEB55E4330B5CA78E9FE8C57253E1A4EE325B4ABFAF8284442933334
CBD9156AC0B82A9B94395D1D4C39780B458D37D45C95BCB0674D661FB36F6759
6B9BC246947DE7611682E88B68A660FF1CFBB063898093C430B8287DC1A6874B
A05A677139C10077D8D6628C1945521BABD74DF88041EDA9CFCF1725DDF9FCE7
A85B1FCA9BD85B881F76FEAC141F5E818DC4DCFB799FCCA7F27638167395612F
B545A8C331E4BADC257EA1EB6E1194AF2B1D223ED2723125F81F5D6745E47585
7E6E5C056B05EBE7C74A1E4B98FA9F69F889E4CCA32876E901AC421919455993
3B4BB6F20FA875C26129522E329F0CDC82E916892F560E0AC3038243DF85C257
95C823A7529E4F4D3A28D460A9B216FEEC724D7F0D530548B465D62471003C52
D16A0D94065A5EEC6E1E6B2C57D5C967CB5C05ABC481EB604B7B8CF08266EA6A
22432FED93B49E08BB298632F2F7B55CF1A4F0C4F243FA91FDBC903B6AA2C463
B09797875FAF706858AFFCE070920F5F09EF8F8C341A1BD395C7EBC4BB8539B8
CB04EEBA23B0B8620A21B689D5BDDB503CAF6EC9CF9F431C2E21726B9050AFD4
75B70D0603C1CE9A370043D9D5A0515BC8A518799FEE5A02F8F61415E5AF3A1F
3F330DD382F1A31D263064182B97F6BB73BDAFD6317AF85FD0170FD739A2531B
6D3DDA8220331B881254D8804DE39E521D46D292BAAAF788FB47803047AB4F55
F450A2802DF0BAD560ADEE4A7A85282039EA17A437D7D83B659EAF7153560289
DCEBA11FF4074ED2474B5939E907893C289B9FC5C0F848E0A780148842F94FC4
D5D22FDEAE3B206549734C46529F2A430A31F83659CC734BEEDCEC1820F26FC5
52D71D89879705D385E99267E95607DC6D4309BD53DFBCC69303725B38C581D0
72E5B455B0A9EC3528A62AE743B2A19FC36DCD218D382CAABA8F580744620CA7
022329935F19A273AF6E1C592C29CEC347761C8E8747BBFAECC16A452CA5F475
CD34270126777E5A1075213B75BBD3869BD047FDB651FC3854D60CBC4AD5FD72
6BD91072F49A8469B5BC3DBF06D68624C2CFBFE023ACFF1E8A28709D1F250E15
EE1A2F4F4AEC52EA7C9A370497BFDD47518E3DFFEB6D905BABFFB0304921C020
A8E85447A8A318143BA5E827585F5A18E4D2E7E1653878B245C23E79F6A8B5AC
D3F779116E20CBCB946A422C712723FE8A0540F4268855C6C41A6D405D6DAAF8
204EB0857CADC4D8C818DAC168682EDF4C020FD65529B3CBEAACEF25D210341D
C31F0E65FB116E91527E447C80732A8E5DDE5FA1111D0A16CA4146D3A1A4B42F
A79B8F7899D7E3A0F3C91E0C81DC536BFDF793958D794107B4AECEEF67E2344F
AFBCC3F2763AFDE065228621C3DC2850B9F1CABE3908D99A80837A1265A8B925
E0EF3887FE26A827DBD006BFFE8AD7A5A0E266E9176E23911AB0C93C7540CF21
1876648F80820613EA8449ED7A9B1A5CAC8B837F00FF4E4462EE3EC42E58D615
673E55B560043147B68887E9E3489D513C9EBE1B9E9454380140D6335F283ECD
3292E32110F330BF87940E6CA9A05375DE14E073285AF1F925E6C3041759FA0C
630356FD31141AF4937392FE6EAE9BDEDC827DA87C47CE715BABA7A42A20665C
DD5C0AFB7EFDBA680C39AF7DAD63A3AE8778FC5BC7980B5A93B728D4731DBD18
F7D0FD8FE8448EA286791DDC7F86CE5A81BECC05B7595C242DC1C715955799A1
7262959366F695DD41A07851791746AD4CAF849DF74D3D9DC2C6AB9061F1225B
56352F191E65EB22CCBF85C6D9253BB5FECE4FD4241CA9C1B94B5EE3CB982F3A
8021A9E4D60090D02182C560E6142969298CBF26C6180F8F616FCA3117A08D0B
4A9BFEB02A8477369514501B73E04E1A6BB9C233CF537C51F646EB6CA4F63003
45046DF998C38B158A53560D6171AC8C65B45A2E3DBA331308DF270D31A09BCA
16553C94A3F4CEA6F251268162A25CB6611AD47216BBA573C5195053F1C018E4
DA0BE9FCB5C41B6E28F3AD80788E3605D66438C16FD4E87364B2B86660FB68D2
551BD71011F1D8494DEA20FFD3EABB2CC283373EEBFB3EFD2D22F6AB53C56F14
80D92597ECC2CD0AB4EF26E029060F53BEA8FCC96E23E8CED7A832B153A87D1E
E6F3BE6F2671225E5D452D804004580134E04E5979F55C104281DE679BD2F24F
FFF184B6D158F40FE4076E0271D94961043F6451B1577B751905FCD0E03F4B1B
0EB13FD64C65CBB8506582FC1287616E0747408D633674EE32B1AD61FEDE6583
7F7C08BF97F89857ACA63292A237769559E57AD6865494B9D7165AD7BDA45987
DB80B7B74F1F7C79801B047345AA5EFF9A37309CD7DE32A4F80F27B91A9CC0D6
04F9C776CCD10A3F2A33F3CA47E185D2CA96A042DEED1D583CE81938B9F25C76
415269544D0D21283D834B1EC16B647EA1DE9D30DB0D29DE8F3BDE1D00B47AAF
9650E0BFD82A98A46704EAE8C04280F8B06CBCF4AE6612E0172EB982C537CE36
2D01E6912F2FD096E24F1395F48EF503FC755EEE038887F63A9333BE512A9B49
7BC7D1B2B2DC07297BF8E5E0F2E1BB29B8442D5CA967DBDB73C707966379B0A7
0E44A0C0B025558EF24622A0A3CC7E4429D684356E2FE985F3EB3157FA3AD1F9
2D5257229E43D97F884C13868D67186CB4C25D8CB55133243F39269E6DDC1ACB
8BD6242B43896059EA0BBD32A46B6F92B030D464CCD5F7C9545B5366AE574D86
7F22DD5BDCDFD8A2DC0F5CB5160826E8A08AD7F271BF649E760035E38695CEC9
9C63AE434B837CEC12D4DF193D84C75483A2828C777CA783F7AF87D92D14D3A1
DD81B3282EB055B2F7191646BD01E1C006F29DE55DD16CF907632A4B474D453A
B7EC4471C2ED6D98375C16F371C2F2C9475147D19918B9718789CEA77671278D
50288639716C1D094EB3A4AC6AEE1DB57E9F88C05CBE5BAAD9BEBAB3F4EEB609
E45DCDEF95FAE035745EED54A9F9D46B388EC6F36784F09506AF725748ED483C
3FB5D8BEEE17BE7D181E0212B0A5FD14732D52C5EFD9C1664066CD4AB117CAFA
30769BD9B4CAF341D3CCD0D1951D832A799C76F070EE4A03A762EF5A682D06A1
0843D82D60C9A0AFA0A96574446CECCD900705B4BA6909C74E7DEFE0138F4A38
0BF6D2152298A3142494A9BA557DC40A16A4A05B6212429AA092B4520AB1DF27
8A2619BA4577C94A5CC0E16F728B9404BA6395BC4126E04A0CB1FC6DC83295C8
2EB2B4087ABB83B6C849ECB414308920C43A64DF5017304FF10530221CC5A21E
0DED8B72AF07666BF83DE4229CF59074F53B744B4E3E959E01F3EB71B3A3280B
913023CDBAE6032EE46497864191C5EA4139A3D1ACA146BE1739287A4F24CE87
86143E3A67ACD19E8EDDEE4A269979A5D2079C16066B91F5AA5D655F31DF7C9A
60EC148350F0CEE33D926E5346B1A4F0F70B173D37FC9D1D6180D90793B105E0
C1A63E4650FADE2469A57F3917865B0A0B63181E576E3528203F33BCEC076A14
ABE47220A375872A7B1BE55459606B4C90CB729E853256DAD99F27CD8E04D0A4
671A67255780FB5B55BD355DB0632F048C360E821178B1DF088A14F58AA552BD
16571183775F719E4E
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 40 /parenleft put
dup 41 /parenright put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D5C30D20FD1358CBB61AA05EF45403C3B8019EC
6350ECB240F696BCDDD1A9F0465CB43B824457852CEE14CB39164B65A06C6F60
2FF3A2A62E9567386DA80C4AD7651D44FE76DBF369706318E0C38215CE324932
7625B5924F5370E9C13F0A66881FC91A4FF6F1AD4CABA2250214FD013A06C1D9
260541DCD6459B406C52B6CA87B3952AB81474FA48679B582C6F1480D75B36CE
F1F23E2A1CD7C570A39F1135C4E9D0CFA54B5C45CD1CA9CDF4B7EFD660789647
5027F649C3D64BC1485D91C56305DABAC0B1DE09D74D9619DEA03EE7D559D5AA
98758F28FDBE89ABED3B60FE3D7C04844A52E77F812298616C620DFBD7FD70F7
1D4DE414B45B9B2E8BF75D05932F12D68BF7A4DA96F457BC634C1F42DF0FFB91
D9AFE0CC5E393F126C76E42F1228E7F06723F1FCFDB05DB8E1CEB1A8C60E5CDE
3270DA9B01C2B51A0A47153549123F10B9BD981DF80B53EA5B10491A203C9E33
F09E0EB45AFFCAE16E7AA9E1B3E1686FD20ABB892EC24C1F97392DE774E157DD
12F163E4DDD7B9015E4C8A462AAA2F8F3CD66B05CCBA5B4B8F6AAC2B89DA78BE
ADB44DAD68B7897991C6C89AA3A8B9AD5994E179D48DB29FA885CB745604F08B
934A8C5DE1C99EB3776C2872E5C3BEEFDC22AB28E9BD7E6F53C084B8C31CC354
57264B5C3945D52B74C2634B7D524AE5382A2CCF65080E513442896D60BA170F
32CF154431E9A086186D5B2ED28A30C8932DC4D02AF81D45687480AB8AA7FF49
AAB980ABE60FD933C812A1DCF4D92FAEAB19421F43CDC503FE67ADDA409DB442
03D7291E6FA848EA6C5BDB85B34B916012E8B4B61F1F4348DD2F80F90506D13B
1FE8A920B041259E270AD661B35C929F6C818A5302809519617FAA7ADC8FCC97
DEDAF70E9C835029FD78E23E35AD781BE1F52347C6E3CF2FBDA627C06AAC52F0
8DB31C0E3F71E0A06D7C0D70E9F1BAD1D6D8D9CDBA38FD182287B166EC75762A
DDD905DC0BB42EBA539277881DA0575494E86C7FC225D06A3F74672201E03FEF
3EEA6363FE58085B97DF00EEC5264177CBD1429C728C2F04ADF0BFD9FC198E64
D3D87419CF2A185D6FF89A5CFAE626624EA1E727F5579F6455DE400F3690FF09
90783A17902110589980E897228B46ECD84F5406C4D69EED75DB226823D83BA1
356738FB72D6225123F0C0A663212477D3CC8DC7CF9D7DBB1ECA5C59C7F47C42
892638E7FE5DFAFF581248A45135B68156DA1D5885972F4C941AD94ED394933E
0CD8A197AFA21177F0A86CA0D964B5784A963485E52A599BD14B6F42CDCEE98F
0CD6E265211EE420A26CBABE09E67820B977A8B1F18261F2C4EE05F9B3858A5C
FE5911841CF9B2AD27C0743BF06B964C656302B76FC4F91D1C129F48C05B9953
86A40DA2267ADFC990551601D2DA6BCD5A4857A58CBA78164D0DA13E6095D6FD
12410E2588CE03263623E1830B3A5F765F657B1B8178AB22263BE758C3CABB06
E0EACE8C270933487ABC16393EDEB622F4AAF91551D3699979FA34EB58E875A1
5B41EE6296C420FB08D534C67F6BCDDE4260A965F9A990A0C8B7525EBFD899EE
11DFE7DEAEFC02ADCA52666518C088E8BB62EB9B7E09160845E8A76A488CA758
36140CB5EE9AAA887DADD02C9459E671140AB4F342AA3ABB0A183FC23BCB37FE
876EACF8F2196BBE376AB30A86B284DDB77EE33DDC2635B2875A3023F89EEAF2
35A476CE76F0C8B4E5280BC52CA4290986EEFCB6B5D9B5D83F36173F689068BC
5EE92AE9DB8766DBB9971BBF356E91799923A7668A4CFACD9464D6C94759ED6D
D54F3E4CE15A8F40D972B0AF8C0ED019998196219B3433EE09DDD3BB576C3BED
26356D28C8E10F1357E576E27D4772AE0E29D561BA06F6FDF3D968ED8B8D65EE
B1284A5B553B6DDCB36195637C87137031A9A80D639EF4C23EBC2182F4080D28
9D6A6211868E423CF3BDF51960F9BBE26D666D2C5E3C843D8ADB64975727119D
AFB59A33E8F34EB415750C78A73C3AF8AFA5FAD4995AB1C6DF8E8BB79F942471
78E3C4AF2BC5268FB0050F123C9CE0FC98A2909E91CC68684E4C3A5062DE070D
9E3A7E1A4FBAC153C70B2255C3F7BB2F31A5AE1823A504DF2C7C49262D1E6D92
064E25C67481FEA64334F4385BF42EC6F66563427867E9B5109F491A6F1AAE0B
E35E4B00BD979941F1F18B4D2149D46E52FA4CE8EA23E7ECDD17D30033D8BC81
57C5DFD62E287F05501D2588255F563BE349B324E7A88C75DCD68DB51F8E8471
E43E9C24BBCF59D2253A613144767703798DE0D9E21EA138A68B6CC38D345F8D
482BACF583D34BE7B566B6AEFD5D35A0672B067809CE7210EC4AB73D46387EA8
315AA136FB468E6EF4FAD3BEB07770A088D621F0C25605A8F49CAA5B3F2716FD
A42C4B987FC992414CAA9F18BEF081631E38137570507B74A6F706A8F7237205
E52B5C1AD772AA9442B6CC09342EB90AFA96FE7E57D85AE6F8B2926F4CE3D6D9
FA816F49FCBB6B138F0BBCC815456BC4CD5870903FE87A9F58C84F08DBFAAD38
5BB85D1AE2A65A3DA455375B74E96B4FB38FCD4BF891BC8E6CD700A7F0694C11
252B64F2E68697717356BC58F7435240B44B55E3FE2FBE330A49E52EAD6338D8
4EBCAFA8346CDBEA98530C9C61873DF5A5AB7CC83A24410BCD7EE377162C59A6
E5A264EA048C02351ADB54B65BBBBFC3D1461FC7C149A2C3A514C17D7BD0ADDC
64390B632FA2E8725F034C042F427B1F07AE8918554E736594E212D126D53CB7
573FE0CE03D320B25113E7B6198FCDD823DAF44AC31D941CB280A6D4D089950F
75FE7B88B99DC67E732DF1D073AB6460CF5069AC075331A85F4D2FCCEA1AE916
3E5718FD5FA3A0670C03D540985388920AD1D5D9FE23C4855B8F830D51CEEEEA
CD5CB9721CE0351DA9A218E714DD408A5F4F8B158561694345DD8BE65D295042
42DE5B19535F967861FB8CC6B3F4C6E46E82D1383EA3B95B25FF9A37786ECA77
FAA2094AAF0BD3CB6DAADC2B0CD6F718419D429CC47AD281DA312310070C565B
5BC71D4669FC81598C9A31431DB87DEB7BCB25FC684C54E1EC68D089E205B1D9
1A165A5DF4F3FED196DBFBCC130982AE483A971DD5D7DC386D47905CC55E18FC
0DA8BDF71B43503D24B708B893D5F469E138677B0CAC0381E49E41CE16EB9871
BCC17CB5A265B79F310019F56F027FEBB6D51EA200A02F034B0A6AEE7B386839
591CE2AB100BBB5BC0C039CD6F81D160711DC97429E770A4249E88D37CB6A624
E7DC44AEBD2232CA30802E1FF1CDD59A4BFC9FCAAB35D1C57085F9C3ADBA840C
1B2C76B439BE69D1BBD89C374F1C9115DA373F19B7755BB7D6EFA566C6DF2391
47421D6ED75C0373888ED8CCCCAE458C0E43276C1707D696A9D89BB1BC462812
3CB520C8FD341426D1C3155DADE28B00ACE2D6137AC361C502FD15F9D2F7DC8F
E34EA1B3BE271332B50056B340FC353C9DF9B8D2E40A2313EF5A6AAA4473B573
C60BE021CAA34E92ADF715042FB96DC670FA929C7CDB2EDFF3D68573D4EF50A9
88B029AA66B630E248AD83FF11E6F40259E7C68D138FBC8372BEAF829A8455E1
CE745DB28419E4F18F78119F21D15930C7BB93FDA02A8678D319771A2A11C7F9
5EA0BD78D37BAECDFF42693E209F036A8B68229122F62089E1D1AA73FDE3CCC1
C850CFB64755B32EFD8937730CBBF81417323268F689D9C63425F3DEF13DAE74
272A2A70648363217E04355A1B13A6D579CA0E0762A692E2513A0A4568E50ABF
046E64C6DB471F9E4E85BCDF7B923BD91CACB2C60162E18A1262EB87A5E62388
EDAA9EA51FB58DB088EFD7330BEE959657AE6AFCD6D0A2E1F4AFCD4DFFFFB861
FC2547E51366F8BCECE4EA38BAEED205AB6A0A153ED701DBCD7CFBB32DB9995B
BEFC3D92024B89D4161F0403CC552A3D2B5DB4BB3BD4EFDC8C84F3B7BF3FD099
9845985D0DA35E96DBE031F603E194DD021F9B53F94F3B9B2EDF93DE857EAEE5
633F768395EAB9E4269D5D45C8AD8843A0B7E034E2CEEC20AE7825FDCE972441
4D2B13F04AA3FA7436A10FFC74A73C8A2C72350736ED86BE3FB381C839E263C3
4F38DD59915EBCC0AAB89BAA7F7F2F8524C59DC7CBF453A036BF6E30BC94295F
20F49F3AB1D1FDA5A16F7D67DA65870CC5727B544D29D35FF624DB3AD8C5E0C8
C41B9BA8D5C4F12457FDF528956D91678F36F0F9EF61AF44427749DA1FDAB029
CBC82E310A9D6448027C6F134EDD6CB146941B27869BC950EDDD5E00EEB2C037
96C98ED3C9B73291F8964A3D782F2BD8DEE161396EECFA02B5C084270560D108
59771D41135E5C89B05C90F6F5485D6C601FD439F93BFA806ABF3EC79FACAC6B
ABA0CD267DA4BDF043E53100DA3B55762340E215911EA3426CE1DCA0ADFDFE10
27268F79EBE8EADD6EBE9831243C74C2BAAA8DACC70095E7C34BC852695A0DA7
550F48159B498215255C9C7DCB7BA6A8B471E9E7ADACE80B3A7B7386B335868E
A15FA429544245717459AAB67C0438708275CB6598DFFAE5578C0EFF402BE7D9
F56D8BBB9F8084D910BCCE1170C0BB74A51F46E391BC06A0E0D002B2D006CFA8
20E502910D491609464C46D86CC885EB7847F6D087ABC88DDA61CB073C600B53
E393B8F033D34A45C207DE35A3A2B304636DE727FE1DA3FAB600122889944CE8
35E1A956D12FFE179806903260E05BA5009C7A0DA5ED5971AD0C46C07D644C0A
8FB297B74930171854F27B1BE5D3A1D1A454EE758D36611A1BB47975E0F388FE
F00CD12871CB0C4CEF6FFEC7A17EC2C0B73647E8F3D5BB09D221402FF8E0DD19
661759E5C73C36CF14BECA54E3E5AE3D1FB67B396E95AC9E7491A6444B949DB1
757718B5E1D46269D17277548A625499AA44DC604C6CDE7BB9830A65BBF4A445
7DB0B723551D4CB8332044BF90E77EF420194471C1EF5D7D14F75D33337E6264
C29C9480E5980E3C656EE6AEC73902B203D639A0F5161974819C2176C683A4F0
BE07B5FD7B3C578C85BA823AB2705401EA5AB79ECECC28201D2AAECE107EF683
B73FC315BAEEF757C889C9E0BD07D82BF2873E3433C66944439B11897D03F0C6
0C7F7DBE4EDE85305041D38E9683765DB5D38C909827E4D0D96A949F2C4B8B53
698F0E8139E276944A5878D55CD366EB7A89E8A008A0E50540ADBC7F12409904
A9DA70B42FB29F282B12A94EC0B390C359F93A48F88208895233575EF7EBCBD8
9A7EB7FFE49776AF268F0DD231A7A89E0408FECBC2EEC636B8674F76E7749F6A
871D71AD46242144701A5919AEF5E0C01FD911E5896A7C353519DE7DE1064A03
498CE2B2BEF05507EE54326AC9A9B8C7E828CE3792DF1CF79310C7B7975CC4B3
F3BE5D8A5E40666238C95367FC197A6385616783AA122A96F17BDE0777269CF7
B09667D27B2A129FD997E715519F785B80A2830986B5F86F15328856AAEB9BCD
30A1EAC7BFA2550DF696B0F5A57BF9AE1C939C347AE6460253E8AB58A433B928
27F01898649C480A94345A9F3118444A72C160177823DFB1589B29CD0D737EF6
4599CD5E4F3C2389515AB45D56C5C09977FF09762EE86D15E6F7F9869BDBCDC9
E743A96C3D189DB0F044D448951376E37C58FA761CF4DE84BE40D094A9B4D0AF
DF043F897501134D6D8DDE3C57ABACAC787B3CC337F658131E03B5396991FC2B
C7449B452F77D381B0D4D71B7B4C968795358DD68E865DC32908E2F239376DAA
ECBA7ACFD7AA7434E65DAF798A3468596EB9D83FEE7236C84F71D56F66420F43
B208DBE520471A45B3A2FD36DF90318494E17632A562C516FD6BC9D68A9A5683
CE4A0563A29C92AAF14D519F34A89FAD4518A1390B67B8D2F5E21B2636D7285B
3963DDCD85C3DF83F8C2533E377948339D7E03BDC114DEEE794449ABBF18FDED
801479300E21EE3BD9A45A962FAC2047A749D3522A8C28F707093E65BA21255D
D35C62C6909B712A31BBBC19FD906D4D93A836EDE1CA5B9BD37DD70A621188B5
88AE6FFB040393323D417E2C5CAB40CA590E31966BF2869550925CD0F3A18F4D
109413128E8D8EB1847054B131C59A89ADAE3C49FBB8A905549DFC2B6707CD4A
7118496211D05488E897F5437EBECC9FAFF2B11AF013A5FA2ABBA955A719A374
27F1AFC075C1ADAF162F90914D5489C8B378534A375353952189626A0B501C55
1100738541E6EE3068F807679956C78811C8C4CEDE0F5AA1801A2E9FC4289847
51788DAF85A8E9AA5B4CF719FC8CAC4DAAEB3732C475D3E68630631937290DCF
1AC6636A23B7A301E2C605A2C63881047A471BA3C4B274B8AC476FB6838244D1
94DAC2D2E9AC4CAD997860EE38F96F5ACF79BD7B70E11FB4EA63D4E01A7AA914
D158C17B4149D7B0CAB9293694BA0E3AB63C8AB5760D7C71C33A8B97A7F67358
55FF74875CCF50FFFFF07E3614C2A7BA287AFA8B6FB9CF5785BCE78320FC1F59
1011BB9306F79F6A0C03D2C6DD0D30847D6F77756444BD943F4A10771DD89B20
4C94FCE36CBC3711356762100108D97515EB687C579D4AE31645DCBD8B93DA27
1A8820A3B5DEECC9E651342A7A1DEDEB5A196AF943D2D154B333BE4F5EF41AE9
239BEB792C3FBC717357923FC3C891EF3DEAFF8AF1BD00932E89CCEECCFEAA2E
BA6ADD80CEC5A99A7B064585A1DBC713710A659FE8D5FF60F39A89530D4BE04F
9DDB6E9BBAD774C2E5E9E50E210E8943D298D934584F7A560F5A4B88CC16479D
81D36CF650B4E1272EC03006C79EB5ED1E98BBB1787C437962A79CEC0C261098
1B75BFF1F32676A7318FBB44EA54EA92687B157C9969F4D53C79F28F7DD18E3C
6BDCB3EB83B7911B4AF5C6D0673246BE3D55810EB1AA678D185BB6B984D0BF95
1EAAB369177BCE1DCA2CA15E1793F05D10FB41DBABE6CC8BF4AADE1DBC4D8635
93DC4225686BEAEEE8D817FB65855B9D7A9327C0B4AEACB64383E60316FF7A31
4FC8E08A372DDC5355476C960AF0FC8AA8355BB2ADD23F202396238D40B7BBBE
71FD33C54E5E07032898A714D81372FEB996799550BD01599A485303D978405E
5AB995126AB30B6A6B5FE751369A1583031D7CEB69010B465A12F8D66E555546
8E6C9D27BCBE15A9EB66A86E62FED3BD3D023D7BBD5C866324996D4A1302581F
D0AE707E786352EC1296B760AC298B4680F956E0D3187EF03B5F1C9FFE83AE3B
AAABF6E3A47B5D934A38FB0E4BD845D27246C624127A9B4C471924AE9CFE5498
DB56789AC0A5C417964B6647282B3DA98378C47604B40EC2A68D7586F2396337
026AEB9AEF4C4B0607F4724F660E2A2FEFE23DFEEA584C292A037C48D82BD74C
E46DBA866882E19E0FC81AD41EC209062D39870487291B8F2CA52BE62069068F
19A93E8175B00EBA2A99DF122D879A03D46082D37759F6E1ECE820D3E7240049
A7E25890165A2A187C787AB44E960C4EFF63D265E8293F08674353B700FC02F1
253311CC9792679BB8DB4D6937F88EFCD491797614A7CC1E1FFFC692AE1F60D2
AA9C64A4331BA7CA8D8F3D1112C290699EA6F1C2824294E868D566CE01422DB3
ADF83D1F5CF4D7661246DEB4E4670058027323DC21F44C149324F2F423E03C31
8FCE1F8C65C3D032C4F028718766EBE5EC4BC5A6819DF70C3156EBC5132B0F8D
2C9D6382668536331126310DCA5C378F3E5700A0EA6B542DFB0A20011F01F55B
B241F77E21CA2E9FFF10478A91746B8280B01F68825971E25EB9BAD3D831E55F
5A4C1EEB659C976EDADF7ECA2ECFAD5241051B4C10A715639D0C000B0B203896
FEBB0D5D711DB64E87F7B6D4D2534E6F9043370ADE047D4A38CA04C94B8A170D
4772474F2620E35E2EB4FCE27099602EF06B15DD3B71DFAF5669A33F27BC23A8
57ADF774EE4539C20785A18FD5CB2A545744529A764273BEF51588616CE90296
D1DD586F67B638186FCEC76673B27CF37E075E4BB41E10DBCCADF809417D64A1
FE6DF30A47BF475067FAF13E04E48E79A888B2B48076E8B82178DCFCB172B731
524F7061C52B4303C360C106DFDA2600C4F4313CCBC7F87CDF2D87D0C540CC6E
5057504B5BE20273725E2F63553F48DAB905D14C935134FF7BB6054D60837D23
E1437923AABB2B4519C18965BB801C6AE73A654A63B76210647CCC6650D880D3
24F487654A93A758FB9F6CED9FACD96167233B60B9C4EF5E653FE630F748B9A2
214C7DF4ED3DBC41FEFDEFE38DFE52F24207F996C0162C698AB8576250B061C6
67E8D761EACEED84C9D742135288E3542E48085A19129F3B37DD9A1E262ADDF1
87520320F390A8F016955829E16BF0FF1C35CE99D855E783B8C6E7A62CD28303
BE217B17C1118BE7FDD6E06A9541DC73F807CB27A9F15352C2F1495ED9F4E0B8
D25358D95E3A15548131469DDFC5D9D35A6DB5946B41D844CFC581EB76250BD9
BC76F07DF125B700C452438BDB485C0EF02E529238D825E9F3CBF4B2884BD6C9
C0413BC21A1963B0D31559A653862E5F928CCB1E715AF3A585B6EDEE195DF784
997D430C6ACBAE733BD277C0D12F953683CDB4A468437B3E43F69457AA9A5FB6
E3B8310418BE896414490198D3E91AF18446F0F3B3C56A6D4B1E7B38C8728267
4F6A9DDDC1CF1ECD06B4A8650669D752A40801F31EE5AD3CFEC649F7B252A353
28E48FFD135BCCE123095C874B363E82765B7056766D8B4FEBF2FAB767032CD2
83249E465FBE19A3753A321C0027427259261679AC76ADD760028E81C5B9BF0E
4DBAE820035F0FF26BCEC572A62D585E51D23F0BD47E6FA900EF9B09838CD576
22882C4361EB0342C9DC41169A0EA996F47CDEA738C30E5AA6F2A048601173B0
5697D5150B2F7606739C51AB3D8CF7D5DE658E71235CD955BA898466314126FD
43B2370A2F2569E15E5AA26D14B3B75E9DF28C4855D5F27ABB03CFD8C16481CD
4D24F56835614ACF1E902B7D2E96C42420B6F33BDE5F27AF17B470C31BB3076A
F139D03A8A1D4689519C0E21659A629D4257BDC165E253810E6B20ABC0218311
B8D63C2F3DA934971EBE38F1392EA225870D89CB28F244AECB7E479885275D09
D8534BE3C6037E839C58AFA3968DF37172A231AED4CF35251FEB159824ED8432
7EA7B7824A4C8643116BB5607B3CFA8CD576770A5169BDB575CAED0F4A7558E5
7D763004CA525AD0B0CE78A7B23C517ED9CAC5949CADB5BCD8A0034354D083DC
4B609AA7C18B5E03A38D8E422737E5DBC05400E601CD87CBE0D25B840D3ADC17
ECB42856184FA83FA2873ACE4FE446C07057BAFDB191E871D31432A8ED162BDE
CCEDF5570B1B58259824FD6AB1A77EDB95A7BBA45FD0D16A4F45D297740C47A2
698ABA9EA69AC301EE356DABD32FC573D9D6EE85EDA7B3198F341309CF6A2FAD
3DB78A4B4751503911BC96F085D5A065B7B6D4878C1AD105D6505F37118C62C7
7A5EE8C64319F54987070977E1240E44AA4EC1997699163F49504116BA00161D
E16D9739D0A9582F123420A0818BC0F22A8918BD27DDC63287FEE09361BA021A
B5416E2E153C456E740132470974212111DB0E6FDC085D62A7D3146EEBDE58C7
1E0CA333A5754374C394FA37B332985CD44B4B0313B44914E119805AA52E2186
D58070ED2054FEE5EA21E45527D50F5DB5DF95B8EF2ADB5256C4B4474564EC9E
53AA1972A9BCAC200D6A4548032AF014A0A2B1C1EFBB3DB11F4A4BCEAC52F267
13B4F394D8CF0F528054CF426DB16658A2B7DF2D912FCD58C5DF7F764ECBEE0C
A9EC054A8A94D507248EDFBD4E6F211189F77F78D384D8C2B6C42CF2B6A4E315
52FB037D3D8EB4C1D8302D980CBF3D992378D81F8661D1574150FBC576DD7C15
58E54DE7C1FB308D2E67814C835F27477674C1DD3BFEC9C86D7780D67A90893D
58B834690092D7D546FA2709F6AE4EFE32C1B955A7D943A0CDE4A7020E9BA070
F091EAADEB75ED62BF840BDB883528883F4163C16EC0323CF2C4BCB088782557
81DE2DF75BA48F29B593FB99CF07DE902E4016F156C8F786DEC573A9CBCA3808
C5489FE84345F616144DEFA68841BEC3D06388F6854D7C41E9F1EE633485A520
0658C22BC9495CC9281477E86543B8C58648F2EBD893323CB8C703D3BD79BB3C
808403DC18742423721C46322F264CF86C67D3F4A6487F16AEED4A14CC7698CC
4E981617DE608F4A752F31AC5526DCA35639FD384A15A0F1A3A5AED8A3FCA6C3
C591197690396A55E1D165C42AA3C8E3F299F7765870A5B189A4E11C715434A2
6C64407D97605250E6AC036CEF032E5D7B890FFA8E9479AD0B7812B6FEB289CF
4BD9FF825F44BE4F9681F592A02CAB2F371009D3F1D5FAA5FCA6D054073FF13B
F3B9D223CD1BA74F7E154D32331A0FE8E17863F16857C644D853823B4130713E
2FB0F1ACF76D86570ECE8547D75DB58A110725A6E90B802539152577D8E47178
4BEBCF41A907DB1843BFEBD645A5B025DA53D6DE8D7382C4C604DE4895687F52
6D83F77678D9127BCA0622E007A1325554C2583E125B735BCC8C3F81D6EADDE3
A2CBCD7C6A7F0F048206C73848337C16DB8101854A7DDBDF07BC35F2538C19A3
925E9F9C1F98F345D4B18A64AD9C045E582DD639399371ECF95C48761299A99C
1AF875B4FDAC49696D75162E55BEF11A6D13C0EE2FB1627ADEC29BA382C3E6D9
4439441CAEEB33F52456DDF2D6D2BEE0F60CAFCB5B33CC92CF36E03F5B6B2FE9
5989B95250F6B5A175EC0A056975292AB46E644C6ECC07E0074042BCD234864A
986374D381D4E26E78E52DC2171312F53E915A5804784706A012525A714CB043
531C336DC1F4EB64822D627D289CB0C41B7D52F87DE0E8C7544A146AABB2B7E6
B1B6B0A3CA5A9366E979CED4FBACBD56AA3C4941D52B20ED680AA944501A0E54
D30CEC0A0383E413B2AA4D20875F05D5B9405E3E6B3E2F48189F2A8E8B0C6A51
78B604BEA49EEF4D692CD75AAB21F1E1E35EE02B094FB678A5C7A981BE427264
4280A21197DED446B9382C99AA2CE455F2C67A713A0C66767D20A6D525664EEC
102FBBB59AF6E9D65D0C22ECBF69652CFB773ED7379897F32A52613E7FA7EB4E
6D77B3B226AC2C4FFE653411A79765883E643DBAAEA6473DD3A611BF5651D64F
288F7DA6393643FA4BB177470F5964EA547461180DAC98F1B8243597FDBE98FE
93601683F09993FA19D96B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_Writeup3.dvi)
@start /Fa 148[59 5[51 13[116 31[56 4[56 56 2[31 46[{}7
99.6264 /CMBX12 rf /Fb 139[28 34 35 3[47 7[25 38 42 1[38
42 97[{}9 83.022 /CMTI10 rf /Fc 134[71 1[97 71 75 52
53 55 1[75 67 75 112 37 71 1[37 75 67 41 61 75 60 75
65 9[139 102 3[100 4[128 4[105 3[103 97 1[102 9[67 67
67 67 67 67 67 49[{}37 119.552 /CMBX12 rf /Fd 133[37
44 44 60 44 46 32 33 33 44 46 42 46 69 23 44 25 23 46
42 25 37 46 37 46 42 3[23 1[23 3[85 1[62 60 46 61 1[57
65 62 76 52 65 1[30 62 65 54 57 63 60 59 62 6[23 42 42
42 42 42 42 42 42 42 42 42 23 28 23 2[32 32 23 4[42 23
20[46 48 11[{}70 83.022 /CMR10 rf /Fe 134[50 50 69 50
53 37 38 39 1[53 48 53 80 27 50 1[27 53 48 29 44 53 42
53 46 9[99 72 3[72 3[75 91 4[75 2[63 73 69 1[72 9[48
48 48 48 48 48 48 7[37 37 28[56 11[{}43 83.022 /CMBX10
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 3) /Subject (CS 444 Writeup 3) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Design plan for RAM Disk device driver) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (What we think the main point of this assignment is) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.3) cvn /Title (How we personally approached the problems) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.4) cvn /Title (How we ensured solution was correct) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (section.5) cvn /Title (What we learned) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.6) cvn /Title (Version control log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.7) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.7.1) cvn /Title (Week 1) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.7.2) cvn /Title (Week 2) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150
0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150
0 a 0 TeXcolorgray 0 TeXcolorgray 1738 1009 a Fe(W)-8
b(riteup)32 b(3)1707 1227 y(Alex)g(Ho\013er)1544 1327
y(Nehemiah)f(Edw)m(ards)1821 1615 y Fd(CS)d(444)1735
1715 y(Spring)g(2017)1767 2051 y Fe(Abstract)273 2269
y Fd(This)g(third)f(write-up)h(details)f(Alex)h(and)f(Nehemiah's)h(w)n
(ork)e(on)h(Pro)5 b(ject)26 b(3.)37 b(This)27 b(pro)5
b(ject)27 b(consists)g(of)204 2368 y(adapting)g(a)g(RAM)i(Disk)e
(device)h(driv)n(er)e(to)h(include)h(cryptographic)e(proto)r(cols)g
(using)h(the)h(Lin)n(ux)g(Kernel's)1370 2468 y(p)r(o)r(orly)f(do)r
(cumen)n(ted)h(crypto)f(API.)p 0 TeXcolorgray 0 TeXcolorgray
eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fc(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fe(1)77 b(Design)30
b(plan)i(for)g(RAM)f(Disk)h(device)g(driv)m(er)1974 266
y
SDict begin 12 H.L end
 1974 266 a 1974 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1974 266 a 0 TeXcolorgray 1728
w Fe(2)p 0 TeXcolorgray 150 448 a
SDict begin H.S end
 150 448 a Fe(2)77 b(What)32
b(w)m(e)g(think)f(the)h(main)g(p)s(oin)m(t)f(of)h(this)f(assignmen)m(t)
f(is)2439 448 y
SDict begin 12 H.L end
 2439 448 a 2439 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2439 448 a 0 TeXcolorgray
1263 w Fe(2)p 0 TeXcolorgray 150 631 a
SDict begin H.S end
 150 631 a Fe(3)77
b(Ho)m(w)31 b(w)m(e)h(p)s(ersonally)f(approac)m(hed)i(the)f(problems)
2151 631 y
SDict begin 12 H.L end
 2151 631 a 2151 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2151 631 a 0 TeXcolorgray
1551 w Fe(2)p 0 TeXcolorgray 150 814 a
SDict begin H.S end
 150 814 a Fe(4)77
b(Ho)m(w)31 b(w)m(e)h(ensured)f(solution)g(w)m(as)h(correct)1827
814 y
SDict begin 12 H.L end
 1827 814 a 1827 814 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1827 814 a 0 TeXcolorgray
1875 w Fe(2)p 0 TeXcolorgray 150 996 a
SDict begin H.S end
 150 996 a Fe(5)77
b(What)32 b(w)m(e)g(learned)990 996 y
SDict begin 12 H.L end
 990 996 a 990 996
a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 990 996 a 0 TeXcolorgray 2712 w Fe(3)p 0 TeXcolorgray
150 1179 a
SDict begin H.S end
 150 1179 a Fe(6)77 b(V)-8 b(ersion)31 b(con)m(trol)h(log)
1065 1179 y
SDict begin 12 H.L end
 1065 1179 a 1065 1179 a
SDict begin [ /Subtype /Link /Dest (section.6) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 1179 a 0 TeXcolorgray
2637 w Fe(3)p 0 TeXcolorgray 150 1362 a
SDict begin H.S end
 150 1362 a Fe(7)77
b(W)-8 b(ork)32 b(log)658 1362 y
SDict begin 12 H.L end
 658 1362 a 658 1362
a
SDict begin [ /Subtype /Link /Dest (section.7) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658 1362 a 0 TeXcolorgray 3044 w Fe(3)p 0 TeXcolorgray
275 1461 a
SDict begin H.S end
 275 1461 a Fd(7.1)83 b(W)-7 b(eek)28 b(1)731
1461 y
SDict begin 12 H.L end
 731 1461 a 731 1461 a
SDict begin [ /Subtype /Link /Dest (subsection.7.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1461 a 0 TeXcolorgray
21 w Fd(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(3)p 0 TeXcolorgray 0 TeXcolorgray 275 1561 a
SDict begin H.S end
 275
1561 a Fd(7.2)83 b(W)-7 b(eek)28 b(2)731 1561 y
SDict begin 12 H.L end
 731 1561
a 731 1561 a
SDict begin [ /Subtype /Link /Dest (subsection.7.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1561 a 0 TeXcolorgray 21 w Fd(.)41 b(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(4)p 0 TeXcolorgray
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fc(1)135 b(Design)45 b(plan)g(for)h(RAM)
e(Disk)h(device)h(driv)l(er)150 265 y Fd(W)-7 b(e)26
b(plan)g(to)g(use)g(a)f(RAM)i(Disk)f(device)f(driv)n(er)g(\(either)h
(sbull)g(or)f(sb)r(d\))i(for)e(the)i(Lin)n(ux)e(Kernel)g(whic)n(h)h
(allo)r(cates)150 364 y(a)31 b(c)n(h)n(unk)g(of)g(memory)g(and)g
(presen)n(ts)f(it)i(as)f(a)f(blo)r(c)n(k)h(device.)48
b(This)31 b(will)h(b)r(e)g(dev)n(elop)r(ed)e(in)i(the)g(driv)n(ers/blo)
r(c)n(k)150 464 y(directory)-7 b(.)34 b(Using)24 b(Lin)n(ux)g(Kernel's)
e(crypto)i(API,)f(w)n(e)h(will)g(add)f(the)i(encryption)e(to)h(our)f
(blo)r(c)n(k)g(device)h(that)g(will)150 564 y(allo)n(w)i(the)i(device)g
(driv)n(er)e(to)i(encrypt)f(and)g(decrypt)h(data)f(as)g(it)h(reads)e
(and)i(writes)f(it.)150 705 y
SDict begin H.S end
 150 705 a 150 705 a
SDict begin 12 H.A end
 150
705 a 150 705 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 705 a 133 x Fc(2)135 b(What)45 b(w)l(e)h(think)e
(the)i(main)f(p)t(oin)l(t)g(of)g(this)h(assignmen)l(t)g(is)150
1020 y Fd(W)-7 b(e)24 b(think)g(that)g(the)g(main)f(p)r(oin)n(t)h(of)g
(this)f(assignmen)n(t)g(is)g(to)h(w)n(ork)e(with)i(a)f(p)r(o)r(orly)g
(do)r(cumen)n(ted)h(API,)f(whic)n(h)h(in)150 1120 y(this)k(case)g(it's)
g(the)g(Lin)n(ux)g(Kernel's)f(crypto)g(API.)h(This)g(though)n(t)g(is)g
(supp)r(orted)g(b)n(y)g(the)g(fact)g(that)h(Kevin)e(had)150
1219 y(stated)g(in)h(class)e(that)i(this)f(w)n(as)g(the)g(p)r(oin)n(t)h
(of)f(ha)n(ving)f(us)h(do)g(the)h(assignmen)n(t.)36 b(In)27
b(addition,)h(this)f(assignmen)n(t)150 1319 y(will)d(mak)n(e)f(us)h
(familiar)g(with)g(ho)n(w)f(blo)r(c)n(k)h(devices)f(are)g(handled)h(b)n
(y)g(the)g(Lin)n(ux)g(k)n(ernel.)35 b(Finally)-7 b(,)25
b(an)e(imp)r(ortan)n(t)150 1419 y(facet)34 b(of)g(this)g(pro)5
b(ject)33 b(is)h(to)g(help)g(us)g(understand)f(ho)n(w)g(AES)h
(encryption)g(and)f(decryption)h(can)f(transform)150
1518 y(data.)150 1643 y
SDict begin H.S end
 150 1643 a 150 1643 a
SDict begin 12 H.A end
 150 1643
a 150 1643 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 1643 a 150 x Fc(3)135 b(Ho)l(w)45 b(w)l(e)h(p)t
(ersonally)g(approac)l(hed)f(the)g(problems)150 1975
y Fd(T)-7 b(o)35 b(b)r(egin,)i(w)n(e)d(b)r(egan)h(doing)f(some)h
(researc)n(h)d(on)j(ho)n(w)f(w)n(e)h(could)g(implemen)n(t)g(a)g(RAM)h
(Disk)f(device)f(driv)n(er)150 2074 y(for)28 b(the)g(Lin)n(ux)g
(Kernel.)38 b(W)-7 b(e)29 b(to)r(ok)f(lo)r(ok)f(at)h(b)r(oth)h(sb)r(d)g
(and)f(sbull)g(implemen)n(tations)g(and)g(ultimately)h(decided)150
2174 y(to)h(go)f(with)i(sb)r(d.)44 b(After)31 b(this)f(w)n(e)f(lo)r(ok)
n(ed)h(in)n(to)f(the)i(Lin)n(ux)f(Kernel's)e(crypto)i(API)g(to)f(add)h
(encryption)g(to)g(the)150 2274 y(blo)r(c)n(k)37 b(device)g(as)f(data)h
(is)g(read)f(and)h(written.)66 b(Once)37 b(w)n(e)g(w)n(ere)f
(\014nished)h(with)h(this,)i(w)n(e)d(lo)r(ok)n(ed)f(in)n(to)h(ho)n(w)
150 2373 y(it)g(needed)g(to)f(b)r(e)h(in)n(tegrated)f(in)n(to)g(the)h
(Lin)n(ux)f(k)n(ernel.)63 b(W)-7 b(e)37 b(found)g(the)g(only)f(real)g
(places)g(within)h(the)g(sb)r(d)150 2473 y(\014le)d(\(cited)h(within)g
(our)e(patc)n(h\))h(that)h(w)n(e)e(needed)i(to)f(mo)r(dify)g(w)n(ere)f
(in)i(the)f Fb(sb)l(d)p 2776 2473 26 4 v 31 w(tr)l(ansfer)43
b Fd(and)34 b(initialization)150 2572 y(and)c(garbage)d(collection)i
(metho)r(ds.)44 b(W)-7 b(e)31 b(\014gured)e(that)h(AES)g(w)n(ould)f(b)r
(e)h(a)g(solid)f(c)n(hoice)g(for)h(a)f(cryptographic)150
2672 y(proto)r(col)i(b)r(ecause)h(it)h(is)f(ubiquitous.)52
b(It's)32 b(imp)r(ortan)n(t)h(to)f(note)g(that)h(neither)f(of)h(us)f
(ha)n(v)n(e)f(m)n(uc)n(h)i(exp)r(erience)150 2772 y(in)39
b(cryptograph)n(y)-7 b(,)38 b(ho)n(w)n(ev)n(er,)h(w)n(e)f(found)h(that)
f("F)-7 b(ree)38 b(Electrons")e(w)n(as)i(a)f(v)-5 b(aluable)38
b(source)f(of)i(information)150 2871 y(and)31 b(that)g(most)f(of)h(the)
g(metho)r(ds)g(w)n(e)f(needed)h(w)n(ere)f(really)g(straigh)n(tforw)n
(ard.)43 b(F)-7 b(or)30 b(example,)h(metho)r(ds)g(w)n(ere)150
2971 y(pro)n(vided)26 b(b)n(y)h(the)h(API)f(that)g(could)g(initialize)h
(the)f(crypto)g("cipher")f(struct,)h(set)g(its)h(k)n(ey)-7
b(,)27 b(encrypt)g(a)f(c)n(h)n(unk)h(of)150 3071 y(data,)f(decrypt)f(a)
h(c)n(h)n(unk)f(of)h(data,)g(and)f(p)r(erform)h(some)f(garbage)f
(collection)h(op)r(erations.)35 b(While)26 b(the)g(API)g(w)n(as)150
3170 y(most)34 b(certainly)f(p)r(o)r(orly)g(do)r(cumen)n(ted,)j(w)n(e)d
(found)h(that)g(the)h(metho)r(ds)f(that)g(transformed)f(data)g(within)i
(the)150 3270 y(cipher)c(struct)g(w)n(ere)f(aptly)h(named)g(and)g(w)n
(e)g(used)g(them)h(kind)f(of)g(lik)n(e)g(in)n(terfaces:)43
b(w)n(e)31 b(tried)g(to)g(ignore)f(what)150 3369 y(they)h(w)n(ere)f
(doing)g(b)r(ehind)i(the)f(scenes.)45 b(W)-7 b(e)32 b(b)r(eliev)n(e)e
(this)h(Kno)n(w-Nothing)e(philosoph)n(y)h(w)n(as)g(e\013ectiv)n(e)h(in)
g(the)150 3469 y(case)f(of)h(this)g(assignmen)n(t,)g(considering)e(our)
h(device)h(driv)n(er)e(do)r(es)i(w)n(ork)e(for)h(the)i(most)e(part.)46
b(T)-7 b(esting)31 b(it)g(w)n(as)150 3569 y(p)r(erplexing,)26
b(and)f(w)n(e)h(nev)n(er)f(quite)h(\014gured)f(out)h(ho)n(w)f(to)h(do)g
(it)g(b)r(efore)f(the)i(patc)n(h)e(w)n(as)g(due.)37 b(The)25
b(hardest)h(part)150 3668 y(of)k(the)h(pro)5 b(ject,)31
b(as)e(usual,)i(w)n(as)f(ha)n(ving)f(the)i(virtual)f(mac)n(hine)g
(execute)g(it)h(correctly)-7 b(.)44 b(It)31 b(to)r(ok)f(Alex)g(a)g
(really)150 3768 y(long)c(time)i(to)f(understand)g(ho)n(w)f(to)h(prop)r
(erly)f(partition)h(a)g(disk,)g(create)f(an)h(ext2)g(\014lesystem,)g
(and)g(moun)n(t)g(the)150 3868 y(\014lesystem.)36 b(It)26
b(w)n(as)e(h)n(um)n(bling)i(in)f(ho)n(w)g(confusing)g(it)h(w)n(as,)f(b)
r(ecause)g(he)h(had)f(nev)n(er)g(though)n(t)g(ab)r(out)h(ho)n(w)f
(disks)150 3967 y(w)n(ere)32 b(to)h(b)r(e)g(used.)53
b(He)33 b(ran)f(in)n(to)h(a)f(w)n(eird)g(problem)h(where)f(the)h(disk)g
(partition)g(w)n(asn't)f(holding)g(outside)h(of)150 4067
y(the)e(fdisk)f(GUI.)h(Oddly)f(enough,)g(he)g(solv)n(ed)f(it)i(b)n(y)f
(not)g(pressing)f(an)n(ything)h(in)g(the)h(fdisk)f(in)n(terface)f(and)h
(just)150 4166 y(pressing)c([En)n(ter].)150 4312 y
SDict begin H.S end
 150
4312 a 150 4312 a
SDict begin 12 H.A end
 150 4312 a 150 4312 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 4312 a 129
x Fc(4)135 b(Ho)l(w)45 b(w)l(e)h(ensured)f(solution)h(w)l(as)f(correct)
150 4623 y Fd(T)-7 b(o)36 b(v)n(erify)f(that)h(are)f(solution)h(w)n(as)
f(correct)g(w)n(e)g(used)h(mkfs.ext2)g(to)g(create)f(a)h(ext2)g(\014le)
g(system)g(on)g(a)f(disk)150 4722 y(partition.)h(Then,)26
b(w)n(e)g(moun)n(ted)g(this)g(\014lesystem)g(to)f(a)h(directory)e
(holding)i(the)g(necessary)e(\014les)i(on)f(the)i(virtual)150
4822 y(mac)n(hine)k(that)g(w)n(e)g(scp'd)g(in.)48 b(Using)30
b(this)i(w)n(e)f(w)n(ere)f(able)g(to)h(c)n(hec)n(k)g(that)g(our)f(blo)r
(c)n(k)h(device)g(w)n(as)f(p)r(erforming)150 4922 y(the)j(encryption)f
(correctly)-7 b(.)50 b(Alex)32 b(really)g(w)n(an)n(ted)g(to)g(\014gure)
g(out)g(ho)n(w)g(to)h(use)f(the)h(devmem)f(stu\013)i(that)e(Mc-)150
5021 y(Grath)g(sp)r(ok)n(e)f(ab)r(out)h(in)g(class,)g(but)h(couldn't)f
(\014gure)f(out)h(ho)n(w)g(to)f(correctly)g(pass)g(it)h(argumen)n(ts.)
49 b(This)32 b(w)n(as)p 0 TeXcolorgray 1929 5349 a(2)p
0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fd(unfortunate,)25
b(b)r(ecause)e(using)h(devmem)g(w)n(ould'v)n(e)f(b)r(een)h(a)n(w)n
(esome)f(b)r(ecause)g(it)i(allo)n(ws)d(y)n(ou)h(to)h(pass)f(a)h(ph)n
(ysical)150 183 y(address)i(in)i(memory)e(and)h(some)g(information)f
(to)h(the)h(address.)36 b(Imagine)26 b(passing)g(our)h(driv)n(er)f
(partition)h(to)g(it)150 282 y(along)22 b(with)h(some)f(data!)35
b(W)-7 b(e)23 b(w)n(ould'v)n(e)f(had)h(a)f(m)n(uc)n(h)h(more)f(solid)h
(testing)f(metholo)r(dogy)g(doing)g(this,)j(but)e(alas,)150
382 y(time)j(w)n(as)e(running)h(out)g(and)g(w)n(e)g(b)r(eliev)n(e)g
(that)h(moun)n(ting)f(a)f(\014lesystem)h(corresp)r(onding)f(to)h(the)g
(disk)h(partition)150 482 y(with)i(plen)n(t)n(y)f(of)h(k)n(ernel)f
(prin)n(t)g(statemen)n(ts)h(gets)f(the)h(job)f(done)h(just)g(\014ne.)
150 623 y
SDict begin H.S end
 150 623 a 150 623 a
SDict begin 12 H.A end
 150 623 a 150 623 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150
623 a 133 x Fc(5)135 b(What)45 b(w)l(e)h(learned)150
938 y Fd(W)-7 b(e)21 b(learned)e(a)h(bit)h(ab)r(out)f(ho)n(w)g(blo)r(c)
n(k)g(devices)g(w)n(ork)f(and)h(ho)n(w)g(w)n(e)g(could)g(add)g(a)g
(form)g(of)g(encryption)g(to)g(it.)35 b(This)150 1038
y(exp)r(erience)30 b(has)g(help)r(ed)i(us)e(\014gure)g(out)h(ho)n(w)f
(w)n(e)g(should)h(approac)n(h)e(w)n(orking)g(with)i(other)f(p)r(o)r
(orly)g(do)r(cumen)n(t)150 1137 y(APIs)24 b(in)h(the)g(future.)37
b(W)-7 b(e)25 b(also)e(learned)h(ho)n(w)g(to)h(in)n(tegrate)f(a)g(blo)r
(c)n(k)g(device)g(to)h(b)r(e)g(used)g(b)n(y)f(the)h(Lin)n(ux)g(Kernel.)
150 1237 y(P)n(erhaps)k(one)h(of)h(the)g(most)g(crucial)f(things)h(w)n
(e)f(learned)g(through)g(the)i(course)d(of)i(this)g(assignmen)n(t)f(w)n
(as)g(that)150 1336 y(y)n(ou)c(can)g(tak)n(e)g(an)n(y)g(asp)r(ect)g(of)
h(a)f(Lin)n(ux)h(k)n(ernel)e(and)i(build)g(what)g(y)n(ou)e(w)n(an)n(t)h
(in)n(to)h(it.)37 b(W)-7 b(e)27 b(also)e(learned)h(ho)n(w)g(to)150
1436 y(create)j(mo)r(dules,)h(build)h(mo)r(dules)f(using)f(Kcon\014g)g
(and)g(Mak)n(e\014le,)h(and)f(pass)g(mo)r(dules)h(parameters.)42
b(Finally)-7 b(,)150 1536 y(w)n(e)25 b(learned)f(what)h(partitions,)g
(\014lesystems,)h(and)f(moun)n(ting)g(w)n(as.)35 b(All)25
b(three)g(are)g(v)-5 b(aluable)24 b(things)h(to)g(kno)n(w)g(in)150
1635 y(the)i(con)n(text)f(of)g(systems)g(programming)e(b)r(ecause)i
(they)g(allo)n(w)g(y)n(ou)f(to)h(prop)r(erly)g(apply)g(what)g(y)n(ou'v)
n(e)f(built)i(to)150 1735 y(the)h(k)n(ernel.)150 1860
y
SDict begin H.S end
 150 1860 a 150 1860 a
SDict begin 12 H.A end
 150 1860 a 150 1860 a
SDict begin [ /View [/XYZ H.V] /Dest (section.6) cvn H.B /DEST pdfmark end
 150 1860
a 149 x Fc(6)135 b(V)-11 b(ersion)45 b(con)l(trol)g(log)150
2241 y(History)h(of)f(v)l(ersions)150 2347 y
SDict begin H.S end
 150 2347
a 150 2347 a
SDict begin 12 H.A end
 150 2347 a 150 2347 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150 2347 a 150 2347
a
SDict begin H.S end
 150 2347 a 150 2347 a
SDict begin 12 H.A end
 150 2347 a 150 2347 a
SDict begin [ /View [/XYZ H.V] /Dest (table.1) cvn H.B /DEST pdfmark end
 150 2347
a 200 2516 a Fe(V)-8 b(ersion)99 b(Date)236 b(Author\(s\))324
b(Changes)200 2651 y Fd(1)370 b(5.10.2017)96 b(Nehemiah)376
b(Added)28 b(Pro)5 b(ject3)26 b(folder)h(and)g(start)g(of)h(Latex)f
(\014le)200 2751 y(2)370 b(5.14.2017)96 b(Alex)572 b(Add)28
b(base)f(\014le)h(sb)r(d)200 2851 y(3)370 b(5.14.2017)96
b(Alex)572 b(Find)37 b(and)f(add)g(a)f(simple)i(blo)r(c)n(k)e(device)h
(c)h(\014le)f(from)g(the)1786 2950 y(in)n(ternet)200
3050 y(4)370 b(5.14.2017)96 b(Alex)572 b(Begin)27 b(meddling)h(with)g
(mo)r(dule)g(parameters)200 3149 y(5)370 b(5.15.2017)96
b(Alex)572 b(Change)27 b(init)h(and)f(exit)h(metho)r(ds)g(in)g(sb)r(d)
200 3249 y(6)370 b(5.16.2017)96 b(Alex)572 b(Change)27
b(sb)r(d)p 2218 3249 25 4 v 30 w(transfer)f(metho)r(d)j(in)e(sb)r(d)200
3349 y(7)370 b(5.17.2017)96 b(Alex)572 b(Add)28 b(\014nal)f(assignmen)n
(t3.patc)n(h)f(in)i(tarball)f(folder)200 3448 y(8)370
b(5.18.2017)96 b(Nehemiah)376 b(Additions)28 b(to)f(rep)r(ort)g(on)g
(A3)200 3548 y(9)370 b(5.18.2017)96 b(Alex)572 b(Revise)27
b(and)g(add)h(to)f(writeup.)150 3677 y
SDict begin H.S end
 150 3677 a 150
3677 a
SDict begin 12 H.A end
 150 3677 a 150 3677 a
SDict begin [ /View [/XYZ H.V] /Dest (section.7) cvn H.B /DEST pdfmark end
 150 3677 a 127 x Fc(7)135
b(W)-11 b(ork)44 b(log)150 3909 y
SDict begin H.S end
 150 3909 a 150 3909
a
SDict begin 12 H.A end
 150 3909 a 150 3909 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.1) cvn H.B /DEST pdfmark end
 150 3909 a 93 x Fa(7.1)112 b(W)-9
b(eek)38 b(1)150 4155 y Fd(Alex)27 b(and)g(Nehemiah)h(b)r(egan)e(b)n(y)
h(doing)g(some)f(researc)n(h)f(on)i(ho)n(w)g(to)g(implemen)n(t)h(a)e
(RAM)i(Disk)f(device)g(driv)n(er)150 4255 y(for)i(the)g(Lin)n(ux)g
(Kernel.)41 b(W)-7 b(e)29 b(to)r(ok)g(at)g(lo)r(ok)f(at)h(sb)r(d)h(and)
f(sbull)g(implemen)n(tations)g(and)g(decided)h(w)n(e)e(w)n(ould)h(go)
150 4355 y(with)f(sb)r(d.)38 b(Alex)28 b(decided)g(to)g(go)f(with)h(sb)
r(d)g(b)r(ecause)g(it)g(w)n(as)f(built)i(against)d(a)i(new)n(er)f(v)n
(ersion)f(of)i(the)g(Red)g(Hat)150 4454 y(distribution)35
b(of)f(the)h(Lin)n(ux)g(k)n(ernel.)57 b(This)34 b(mean)n(t)h(it)g(w)n
(as)e(easier)g(to)i(imp)r(ort)g(in)n(to)f(the)h(Lin)n(ux)f(k)n(ernel)g
(w)n(e're)150 4554 y(using)25 b(in)i(this)f(class.)35
b(Then,)26 b(Alex)g(p)r(ok)n(ed)g(around)e(the)j(Crypto)e(API)g(and)h
(found)g(out)g(ho)n(w)f(to)h(manipulate)g(the)150 4653
y(cipher)f(struct.)37 b(Then,)26 b(he)g(had)f(to)h(\014gure)f(out)g
(what)h(the)g(parameters)e(in)i(the)g(sb)r(d)p 2793 4653
25 4 v 30 w(transfer)f(\014le)h(w)n(ere)e(and)i(ho)n(w)150
4753 y(to)g(use)f(them)i(in)f(order)f(to)g(a\))h(tak)n(e)f(data)h(from)
f(a)h(bu\013er,)g(encrypt)g(it,)h(and)e(write)h(it)g(to)g(a)g(device,)g
(b\))g(grab)f(data)150 4853 y(from)34 b(a)f(device)h(and)g(decrypt)g
(it)g(using)g(a)g(bu\013er,)i(and)d(c\))i(ho)n(w)e(to)h(prin)n(t)g(the)
g(unencrypted)g(and)g(encrypted)150 4952 y(forms)27 b(of)h(data)g
(presen)n(t)f(in)h(b)r(oth)h(op)r(erations.)37 b(Finally)-7
b(,)28 b(he)g(had)g(to)f(\014gure)h(out)g(ho)n(w)f(to)h(in)n(tialize)g
(and)f(destro)n(y)150 5052 y(the)h(cipher)f(struct)h(instance)f(he)h(w)
n(as)e(using)i(to)f(implemen)n(t)h(AES)g(encryption.)p
0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.2) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fa(7.2)112 b(W)-9 b(eek)38
b(2)150 236 y Fd(Alex)26 b(added)h(encryption)f(to)g(sb)r(d.)37
b(W)-7 b(e)26 b(b)r(oth)h(then)g(tried)f(to)h(w)n(ork)e(out)h(ho)n(w)g
(to)g(in)n(tegrate)f(our)h(mo)r(di\014ed)h(blo)r(c)n(k)150
336 y(device)22 b(in)n(to)h(the)f(Lin)n(ux)h(Kernel)e(on)i(the)g
(os-class)d(serv)n(er.)33 b(Once)23 b(w)n(e)f(got)g(this)g(\014gured)g
(out)h(w)n(e)f(made)g(sure)g(it)h(w)n(as)150 436 y(correct)29
b(b)n(y)h(using)g(the)g(mkfs.ext2)g(to)r(ol.)45 b(Alex)30
b(sp)r(en)n(t)h(a)f(short)f(amoun)n(t)h(of)g(time)h(co)r(ding)f(and)g
(a)g(considerable)150 535 y(amoun)n(t)d(of)h(time)g(trying)f(to)g(get)h
(the)g(device)f(driv)n(er)f(to)i(run)f(on)g(the)h(virtual)g(mac)n
(hine.)p 0 TeXcolorgray 1929 5349 a(4)p 0 TeXcolorgray
eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
