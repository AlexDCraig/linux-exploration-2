%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writeup3.dvi
%%CreationDate: Thu May 18 22:03:52 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writeup3.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.05.18:2203
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 77 /M put
dup 82 /R put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
35F0D4C4D46BA07C9477046CBD7181C3102828D1858CEFD272BA72CB058EA61F
10335E75A51310A72573924A4C925613E371616AC863134B0C0B9D9BA3C4AF67
A90596EC699B28E5EFAD6AFAB284955046374CE4A35FE498D5E6F664576C79EE
F9C4B43C427540E6B3014EB8CD0739146EC2E8F95A2A3BC525923B9E5DFBD822
83650F30366BD8C35006235731D056C9482A86446E14B6311303276091C4E59D
6E2869BBC87FE0CC48C6AF595830EDB96491CBE43789EEA3FD06E6FF390C2ED3
1BC49F4DA1042FC5C6D925603A4BD0E8FDA455710931B28D9855693DA936759C
A20D7B757E632B3F2C8FB03DEAF1532CBFFCF23874BF1035B7770712F1DB2DBF
0A70FCF2FFEF857864D8E1107C0B36D023BFABC2A753C9EE382F13FCACBC2272
D9282554637C8B5E312C825FC718FFF63B8BED93D74D76724D9E85547FBE1E99
70F06F7D61499244DCD6C80D6EF68B7F8115F00A93BECDD89D4A42F6533D4FCC
F5401C8DF0F4B1E5851D1AD7E100EA191DAFFC3D08C301F8CFD5B94673E8A3C3
C12FAB21C7284BB2ED07D7A343208C6AED493DBBB699D5D88410DB07F94B24B4
AE5186DA9A7EEBBBB108156A2AC27080CC4BB7935AE88CB2B960062956961BD7
56424E6745D84C860F4376C5F90229B8558D5FCFB2D65550B410B61C711CC123
2078448EB47B647ADE11CB45E2358A5CDA25329A3E18DB0C06C278F2EF6ED62A
CC5F33F879C2893601AB0FA539583FD15A6016B859107E4E1614E5091DF0156F
84844968FCAFC80BB272D4A0232405207D84B268BAD89DC04BD900E2680B5599
48E98FA994174646F06595C0DE426814A950D9FB759A80731B1FBD722448388E
2ACB6F50B560AD689FD24BA97553344287D625E4BA665FFB86C26841427006E1
621A8153EE884333C4837D2A881211E5A41B78ECB1BBE2E36C50453BAACBCF85
87EDD88705AB1E4B64CEF7B43EFC63907E7A10D81AED9EFC8484CC8074E19A8B
759DADF39B135F031CB4CC0A6C5669AB1F7A51A7E03EBF586ECA5BAFABB20F12
FA3A972872273994AC6E1D68FE2C0B3EAE00E3C573375E0275898E4A743AC73E
813541EE1E65A5FBE4BDBC3964B23BAB52E9694340DFAE80D5C08A3F8515A6E1
D5B119C0256229A541916F088941A5C1AB3760B329D88C694445061708A5197F
E2A219344A41E129E1BC3AD79E9609ADFE5B7279C74FC5491E877384B4104CB8
23EF574BFBE7167E1214504962EDB9E24BD6751AA29ED820EBD736F9EF4AC209
1CA7B65D9394274A703D0EA8281A68913FDEEDC22F764055472978D1176A56BA
DB582976BBC26F375EE15E3ED48C215C33507D8CE35B1A449C27C77ACDA966C2
F49A8C7E347CF10D9A6D33177983BC7607D4348817CC5E3B9E0C6A11F3936358
E7133115FDD6C662FAFF585B50BB9CB7133D19594C5A424A9BD46EC9E06B886B
077B381E3A629A73756CBF88551F0A9DF86318794D4C48327642BCC3D9C2C2E0
C73B7A32EAF360EF3DCA7603ACD1216EEFC008C0CD1B798C8252DE951A9E2070
FFA906C5C4ECF492ADF2D5D9630F5191BDAC83EDD520A3CCD833F353F9B7B7C0
3D3C642EFC42E8A115A1016FA0D3FD94A8D9E5A7D0257606CCB21CF38CC66575
9C9575E5F137F9AA32E66AE5DE72FDA1724E07DF857D8A42B8F772E3C8CBE415
A9B47E0B789EC1A5181DE0676A061D5404F7680E39D8655826371261CB23E567
ED947353BBA803846D4E745A4BB192EAC200B08656660503B22A5EB3AD3A7334
91B98D9D77ED9512535A5985FDB2ED50E1B531B84FA1562A79F1C6CD4878B4B9
9B89A724C12E58375B3EACB1C940E77A9F2381B663C6B3D1A8F3F68CBE0E707A
F28862C8491935B04F3C481B7AE405FF4DEFF157FDB81F8B49DC2E2AB9A2A3DA
805DE82324DC523191C9CFBD1DB8A2E816B3DD8CF0E47E86B85C65684A4C9C26
62F9A7AD2556EF7486C5CC9A4D453EBD77E148B39962292C01B46BED5F572CC7
810BE0B1729F872A5CD4F49B781D4EA6107FDC87A9AC06286069A52B95810FE7
5E96067CB3398FBBC2FBE36E8447FC65A1B96F9D8C57393D5C0379FAFBC9EDDA
A6886EFEDCD8EA2764C11E5FC52AE1BDA400E8CD418C51A4EC176717AEE06007
334AE9A9B8F98DD7C85BFAEC9CE9D86993D7EA243B280191DDB03D09C69ED90C
6FA6E0B84CDB778B4D902309064B8091DE6F871105B825A964D29EC6B7A20EE8
03D3B727499E5D0B82566AAF982633D96487C085316B14D4008D8EB71FD0B591
48C9C857021135B848FDAB98E2E12847887FD2D4F91936BEBCCF0AAF360F4589
81C44C5DA6DDD0C8505CA7370B8A26CA737FC469E820FCBD907B1E6CE40C7C34
96CAFC74CF01226F953291D274685FE480E0366872E35CD619D5349997B19161
D77E86B4E76C821C6F34744975FF462EE7599AA1FCB2D7EA7508B3E657C229A0
E6853AFF96DF96E08765D47E3ABC20F3DEC97E0A00D834EC06F842C0E2C0AC4F
BB6147540DFE807F24E0B907BA674203D292FE324B9E4A2B6F949FDFF2FBBDDB
FFEFFA35281B59D476D3549CCBDEF3B049D3990C7022201DA9E34DC2C05F8FF1
638032C2C3F5BF38F9B88B42DE5DAC653DAE88E03743A38CE5DAF74EAA484E41
5A02B28989F1283B4F93FD7F8B31B4F984F3390004EE851997DB83E029BF77EB
4DF97E7E919E6BF258D7A141DBAD4981AD17C5DF0D7C2E2D148955DCBB812708
77AE4EB244BE818721856BA78ABA07470E2A8FBA76D6C3530F07FDAD4B687971
962F459BB386B81BBC78AF610E2FC917B64146A5C8A0F4AF16D795A226921A10
6FDF3371D3F6A3DCB5A37AD10EF1FC5FD24E8713EF5CC6EDDB308AA504B09D0D
A181104341C3B86E8068260FE7BFCFA9A2EF41FB7A0FEA3023A0C97C19B06A24
BFD3FED8047BBBD0C44BA3E2B6B3A2C7A315E78FFF1125C4B90AC8E0F63C83E0
4726FD5E42A3D15A29E6A5E87FF5C1F3413A9A85B837838A59D28C84FB0B9DB8
273CE9E51E1347D75519010FABCBD203B91E45C519B4031FEF60893C04CAF983
E1CC06B354985599D66314BA102DE07EE92FD2125A1DD30648B2F1DDB9BB99AF
DC6711579B9AD95A4B5D5C03019EDEDF08AB87392F8608B59AE29C420A3FBF4D
267824795E54BC20ED58BA9E45574E3F28958CCA867A1C24C0B2FB2A2822D2DA
AE126681AFB00D33FE13558798BBAEF50E183212CCA0B567333864214F85089A
99441993322F3EEDE571A31EEAA8C47601EE01DD1C4FBF3492932733D2A6923E
E55FCDB6CFD456E7686C7DB21A59099E4B0B18B76C8913C4AB5362342BF2C940
EF9A0C6F46B416B8E925B0D3784B9C36C2D96670D4D31B20289BC9B746907647
EED120FED297422ECB8A3CA04335DD751708019734AA3FC9B0C58CFD1DE5DEC9
FBFBAE94E7B3708DEA99A0687A9B8E0EF361DB1197647ECF29A13E8AAE7060CE
044995921B7EFF324821B1DEF036F1161E84D64844F6C33A056EF6D9E149D697
BDCB824EE91CED3CA399E32D7B1C942E6516DF041D3FEC2155659BFCA012CA0A
02EB7715779E7FFF23D919AF781525E341D6FD295FE0DF676BC7B32FAD056E04
2B54D81CED418AD1B52A7D977E1D653A8573125E9BD79BBEB463218E1B49F054
C50ECEEC979EBA717E841876B779AC6CA31B902ADCC5FB3753AAF358CA8F4BAB
63355B99EB69A87B0C019BD343549A273C70FD76E625B169077A2AD8394F5D4F
EAA64C8BF63788B178326C9B083392A7B52E007B8350061363AACBED60281C71
C2919B3714ACE59EF364003A251F2D5C3B7C4BA591E099AB2BF068DA3A8EADFF
6F5824ED9396EE81B053DE611396507CC33A03E22B838EF0B947A8F9E299ACB8
94682641E34192C8DBCC51E6935FDE5097DC9AD392B01E9D8924959B71187908
40F9E5D1ABA6E98150CE3889D08174DE5C92013E99065B6609CCFA43295E1F69
A598AA864CE93201FA50E1B25C641EB425E3DFE1F45DCA3D298C7300360FA5E9
16C5D737F9EA84EFCE77028FDFBD2E8D3D8E4107CF72054355A9568E9A07FF4D
A8943BBC421315931BF43A9DA326EDED9993335ACE21B719B2DAA5CC0B08C629
339A69C464B725143B95941C459031C3262EE9E2BE5D62503BFB50A75A333831
C3A3CD796A80A80F7A6957061023C7C324A57F15A4C40F7B702A7662CFD0181F
1248F174DEFC7E19A3CA7893D09B263D2B42A19B5E0EE88C2CDD7A2F96281CB2
6821D278AFAD1AC479DD11BB2D58BB32E5FCBF45AFB4D45B97F87CCEA2428F9E
AB1840E9442EAD9FBFB8683FD93078F922A44F9778829706188A9E2BD3D7A1B5
568AC369B980059400013F24CB0DF6351FC9E4631A8E1FB54C0820850248B973
123BAA5720B37A96EBBBFCB657AD380C7DAC0DA40B75B8D590F2DFE0D1A7955D
2C6D2F9F11FE2C9DA7CEA47AD5B3310DB0394E3CFDC2C3BABF80E12EE1A55313
197FC1D929E54054C40D8AD58E19B6F6974C3544D40FD0AE42A3C44352E803DA
52CFAE4E8EB5E12DDEC966D395E3CF0695CD29B38CBB2BA86965D6385FD28DBF
AF06056F246CD98104F38578F2D2675D81DD6C352EE7EEE5B81A96A9EF8A4CDD
FAFF011CB677D8FFFB5AC81960A5CA41F9734CF6038B4A4C2A112AA011121F54
73EC46ABD6AA137D3612827E33659F3E74211C14D5C5C3BA6B8187195D6D5504
80FE8CFBC59E2F58A7148166FFA1C68D88EE0EB8282707929B8DC33E3CD07313
7C2A4E2C3680BB6400ADDEBAC4D780D76E5FA28DC5BEF0B9491B7E5991947A5D
3193417C4591B98D82E4EB3C95BD56A767C3C4A699F0AA353BFF44896D4F4FEA
114CD39440D70B265FDD32818D9365A29AA0D75903115F4E9B01F9C4940FAE24
0AAA20CC28C0934D55BD1EDEB68B1556F887D58268DBC8994477C1E0C454D134
7079570EE42F80D161687C29461310EE0DCF2A92CA179B2202D56696C376B022
49C7EE93CA03BE056AB9A19BAEF4BBB71425AC4608DA0AF68E768E4F378C5C84
3DBF82CA32F0B08067EF95A2CF53BB9CF9E3C8F77F0BAFBA44C5A1EC8E59AC92
708EBB5FBBC0A44DE46511191CCF980C2623FDE50CE77064BD9453BD28FBCE57
EA9C0FC4BC39ED31D498A748189292BC8FE30DA3F6F00EC13F042EAD2F3C54B0
21CBF27413D7E9DB91F11F6FBFC11A9C69A049B196E9D364BAD3B1F18079384D
B82536D613FE606CBBC7541345AEB2726D094116FCD41974A69838ED7F4F2959
07F2D5FFD7FD32340377923B96C676D86DA4B934A205654066B605DB540620A5
488DA52C135393D9FBE158DD6357BC8B680C0CF31A3A3F80E5E12982B9E4FF6E
D6E420C8050713ACAF532DE05ABE07E32D640BE875DC7E6A66E9984D1C6988BD
B29A6A7DB002FAC8746F24A1C9D405DBD29CEA4A252032A846A000E04FC231C3
52BA9A45A90A812AF2CB6D3054D8D7780C213E61F122400BF5A286915643D7F2
CB54A95FBDAE350C5DD8E21FB0F3C6737559C22ABA657244C40DC6F5EB3F530D
E78A99DBA09CE81212D8F1F10B3B0370DE63A6A6A0A70F3DF29BD2A840F4EE50
E994B0351AD73C03C33759E2380A633A6941F6DD787530B55A7C61334AAD6809
E25178C125E36BAD52966972AEB141C98466700900D5CB2C526EE48AE31881F7
60747AFFB8F78ED8B7E20689007A657D5AF6CE4DFB78D7ACF4D6F18EC3E0232E
B5E21E4A67F15E7B935CCB93DD058DF9B2F09F04501D7006EB191D39A4905809
B78A8506CED3A25753AFDE1CEB3D487B727F6CE27C1E9C175CE55D5ED3D831B0
C76F35D25041CBAE726A903EEBF77BD28026C9C7E68B2716423BED0232A74F14
7889ACF3BAAF03DA44DAEA916886BC10B3C202D0893E4E891447B11757008FCC
CC7902F9D0FFD68443E02A3405700E62DA7E13AC84980DCE71D44EA1BF70AB11
FB6C0AA6FAA53CE636BE5DBB309FF242B91CED7BE5FD599882887FDA5564C323
181564065499940FEEE9FB2432FF45CE6DDAA7197908BA61A9B6025497E4312A
6A8A51EBFA43A7C8BF691A07B48E5A982DFF7A28B753A0363D88EAB8F81A142E
3B625BCA133B89D79D94F614311E052D5BC8789A941DB9FA53E40AF4984051F1
5A3B0BDA2F4D9EA48187FC092286B6D6F9882EFE42DC1A088D0ACB16EEB2456E
3DAB6DD15FE68283FB30B0D35A8930262AB071D4E71DC82010ECA30D845497FC
20F698133F36DA556F684C7A34A65A878046890C9E2BC2385C67F7DBB3FD3480
E8760EE4EEBD5E6BE8BDEE3508D16D2D3231B84921ACD5F6012706A497C0B028
03005EADC646D2643967A9A339E43A57F4053F95ED3DAE8FF9C86C1F67BC2C9E
57BE57BD888EA330F90D9CD643464D88C0F7B684B45BF852AF7101DA9F3162BB
3A9A91193B84A8BCFAF954BDD47D93798F47D401F3A4099BFB524C1A3FFDF496
622A8F0354889ECCDFFA2BD84712A72A4D4D7E8781766FD7E27CD6701778B809
C55851CF1F5AD17647C623CE683B1BFF58DAD9D55736A3638D9CAD22EC9641A3
C4B8D27FDE4749917A2A5C6864512438334DF234953310D41C3E4FC9F93F2382
9B27CB90933C1FAEF65C4B3DC8797DE7D235C272BF703C0EB546BF63C8A6772A
5956B1012A5F0103564847D1013B89C55C5C311A4BD35AB94CD99E6DC966EAC9
E0D55D5EC27DF06BE3E60C254C9870024729458CB6CB8EFD179339D7C32DD6AD
9B420866D0F4805BBFD5D274DE47D9869031FA13AC2C3CE6ED011E6370BA0BEE
D87FAD0C57CABC09D8C3E007A64BCD493014F6DF50B7762E5AFBB24B5649D6C4
AD6EB7777096F10FE94D13297FFE6009E771555F932B990842FCB9E944D627A6
C860684074E2B35BDF945921E5AD98CB3FD52BDCDD4BA28DEEC0D862CDBD45C5
F60E4224DBC0A7A4CD94F35AE87D45B65F1FB836069D7728F88A4518E33CD41F
94B46B79B0C921FDEC013BADF639FB7201D6B6093741A77F122D363694F24226
F8B7E8F87B8C80124E7A07CB89C57B4E81F046C85E79FAF25133F005E87A1808
26FB6C497F37DB7284F59E78D8A2F7C5257E6540D8F04CE1203E02CCF53039E1
59F7FB770FE69ED7E0807C00C9547AE62E350E7FB74C897E446DDFB5C9CEA2E2
6D042A1D9592E330695F42FB65428F976B8D8059F5C15E40E3179DE42B574531
8775F17D5A3ADDFCDA86BD174F07098618345056F277E4644B53CBDAAD021C6D
5DD96DF07E6B617294A05FBDCB8C640FD21F6E438DDCE24B3EDCD93AC5EC5E47
4C9E75959606CA292BF6A86B24CCAF9E0B4DCFFB268CB7B5FF0AA4C47DD45DD3
A09729D9513CC0CC008377539C9DD3CF3214F436EBD0CC1338CE5769508C6B2C
CE772CD0BBC443529B2BC8CFF0F372DF93AC08F900DC158E57BFA526C61047EC
E2734CB5FF65BFD67B893350AE0FA327FD0A49CA32BE53778A99F67CFD9325C0
5A97EDA630E363BF53A5194D295CFF78B4CA00A9765E941A09C450C5B4791101
0F866DEA7EB213957B2CAE3943BE64CEF75BE0BBE442CBCAA147021873A636ED
DBA1DC57EAE4AFEB6A6A9B6CC5C20D2928F4CA0C43D53908777BC4D0FEAB927E
569424F5FEA1ABFF3C0FABB581AAEC60984DBB2D3ADAE30AD2FE62796B79D3A0
7614DBAAB6B3374F6C6C346D74B7F36F9137A35DD0A23DCE53DBA3B0FEA24527
34A056C9B98EC86EA37CE70E0FCC3BCEC0553550099BC6B35455C2F5F558E4C9
30C4A128781AF25CD75E07309ECA53C6C9F6692D862B93EDA650C85E8CD54E07
FB29C7647E5637304BA1C581054E6BBA9D70FE3FF23844DB49B597D25FA01715
A03F5AB3C00620275C3D4E8FDABE9FC84711538CEE85CC2E2D04DF49BDF5782A
4407178DFC15A6AA109600E1261FF09E2E014E00A499CFE8A31C2F72F9F9E40A
BF4D06A2AC8B1CE59CD7659BBF2D3446ECA0B1B06097EF55E6F85B040BEECFF3
D1A3D86E9C1D43484F81A47640BB76A0B312C9FF07E1A7FB3CF31F240AEBA7C4
A0EF5A1ACCB64FD1735135651D4279BEF31CD0A8105E13013FBC76E9C64F0E68
07C8A55BC60A05D69921BFAEC1A752E3245C65FDFC8FB17CBE96D3CB3AFD9020
8789036B7DA926B15439F0D786B6388CE8E2F6D8999276FFD4EEEC0ABC98A326
77E709737B8A2820751A35B7BE2DDCC81124D0447D97CF016804F32F17BEB114
03B42E6C4D60CBD23057F8D4B5FF7A399E8DF5E29E959A98BEBE591F7EDBBB53
22BDCAC137E2351CA03721CC64F91E9D1CD2094A6F7F76DC21C0AC90686FBA9C
CCC5F67F2CFD19A9053A628D02098EB4611E7867A036DEA50ED9470153B80E04
670A9EEE01EB3F00ABD7C9BFEAED8FDC1E876BB9B01CA9668C66C64B03A5E1C3
E1A444C1C2A385570E10D006994DF8579F32E532B964FFFDEEB586E1EC2FFFE6
90AF46E3B0CC7DC5A56EF2B8844C74FF2F2E404D416FA053B4CCAE9355F0408B
C556BFF08265755D0BE0906BB80C1EAEE6D2387E984A73D1E0F15F9E2D60
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 12 /fi put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 73 /I put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBC88C3F36121DE0957AD1610C7FFED2F5728DAA51E
A53D617553D5C57CB1722553E997ABE85A338241A35C0F08B752FE2134FF5A86
2FC683DAA0E0C0072EAB471FA444491570EBF12F70F2863F9CBC2CE3E13F3A3D
0F6A0A2483964AA9CEFF0C08B845AB92F0C55B0953645949706C496AA58E47B4
4A9CF5140968E1D76AE2154B9227AB5D9DB4B7284FA0E58F65127073A49693C9
73462254BC1B1501FE22953A7743F8782F1EF99656FD98ACF879E74B0F77DB4D
E0D2A65D432EA4F0EB8521B287595D1027531A1DB1B59150CA66DB631E5BC20E
F06D5BF622CB93D558FC103A8DB7BE250573DA8F6EA8F7F15D2D37B7A8D05B1D
00B6A2BC9631233093AAF076E7200F58B47ECEF184714F7E731EBBD66BB93518
0754189DFCBDA2A1C9292BE3720F21CCC22F87D98FB8E7F28684974E3DD0081A
19F03D6FEBA8524ED55EE10EC3F91D9C3DE33F6D4B2E9C167ADF71FD25E7D855
C3CF23D2B4DD6BF1CA37244CEE42266B131AD1DDE40B06429201161669B687EB
8F75F8EF177A8DABE303801CC655595920FE0CFBFA8C0D93933043CEA951D2D3
A2EE66B8A7A439460EAE7EC87A81F6F0C1FE6BDA3B46F363EA4991DD88D3EE96
51A4CD406773E26E0522842B63433141C020794836269EF7A89A5BDE8FCFF947
FBD4A3E7BA01BE9344944FB18121427A42EA38DB230BB25C16F0A20E27F579A6
386B437ACB8FAA4CBA523AFE87ED73B4AF0E281678B824FB92E1D49D23533F78
43E6670B24942F86BCA8CA60F33E306C32904DB6C09A2B33E95DFA9CF6DEC013
67C8E564616D8D3F749041782377B8737F353B00C2A4CB484400843816D0E207
4B622580565525A8DBC7C46CEAF94CF4BA21554E355D312E8E0B4078AC809300
807CFE4BF7CAB616B763540D8132CCD2CC4630CE0237D7AAAC54220D980584B0
3052B02F6F14CE68974292E364BB554D1052834FEC587F9700CE62324CCECD4C
5E7EDCB39E6EA86FF6D34DCF21BCB46D2A044D1A82FEE256F7500054923CD86D
A722362957F9BB96A5528BAB4EF17F803DDBF951C0380C83C4EEDD54BEF579CF
ECCF2C0F61CC777FA6CE84D344EC60682B4D85913695C25E772688B551609FAE
1170DBB561B2746077F362B09918A8754ECF992BDF4CF91B95459B21D3BD743E
7A7D5B025C53CF5F49BDE94F7F3DD1B8938DB715952612EF042204AA0698EA7C
BF69BEC2927DA351826710899E4A50C9ED82DCA6530CC94E9587BA7F32C0A5C9
22C62F77A19F4353E6398C3635DEEA1E77134EF0611530CF0ADA2CCF80B11202
590A30536017A1E74D347CF1740029DBCEA6845B2C0F04BE1BBA41D93F001719
0FCFBE79E2A190EB4B6AB3014C800F9C1924FE28F084ED10B0BC2034D72620E1
AD2F33ABE19A2E2187EE43632F2EF90FF676B7CACC1E64AFD7C9BDC771A42B68
C4FB5E51EA0478BF9210549DC17154D704B9442B6ECE557769B6A7A2B5B4ACC0
ADB74DE273981060BA8BF698FBB829410EB12987D6D2C5F59B766CC54836C89F
1E6C35BD040E8747E738A625E6CF3F719677BCC64476656115231AAA4FE01924
9A89630C7177A07CD77EEDFCF3A9187294CC358FAA47874A686B8955D8DC657D
B9EEC4C7EBE84C205AFE7CAB2222AB8B742265A2E594B80E2037C011D49B8F2E
E7C0E58C52478D4143B498E767990FB5B27975803AAB00954180B807234588F6
9300C1CF2202C7EB19EE3DC0E74157E6CF1F3C7D8E7246835B0AFD1AF4C5AF41
9D083056D6C923E59D0D937FB495FA65C5A1F79DC3ADF1C76CCEC9D623790C02
A0DF5AFF355A7B672CE5CB2C4FD7432306812A2AE316D264B62F351EC617591A
5B5267B08FC70CA885DAAFEEE2B60E2C0555D4C65F069201B4B1E7E94D30EF5E
ECF2E5F79A635588A6D1FB394EB31BD9D13B2F24A37D1AB9EF6BFBB655116BE9
55F83E68EED2388B51E2600CD15BEC5DD890161AECAD1626A68DCDD8A89BC085
078AA1FA1F9F2C377233C12B50ED7291969C457251AD870C38AE3AC0ADE1B0DA
44036AEC60C14838C66F0982EB3F508ABE09AB60F82922F2F9384983866C0845
C09A489C856A85889BD14E270630E61767E5F87CDBB7365CF7C019B737157456
D61401D2C725116DC6E9F1AF97190E075DB5A26F8FF4DAF57426DD19C221B7F0
85BA0C645EC11679060939D8414654B67E9CD64F14F48219596DF1241DD3B54B
08A34F3EFF173F5BABDFFA3054A199E40420964B3C73EF6CA712EEA1933F1824
7F00065A79F1B0B5204C16D762FCAD464DD51B24E32EC86FC998EF15A856C6E1
77E9C7925873D054D2AAECDCBD468A8F22925BF41D62014EE6891907E15AA2F5
CCF59D2743E193AE43052BBF56604C590709083F5A1721638D8A78E6F0DBF2EA
0FEDFFF04050D9F3F0CF80654D0A96FD1D07EAA0F0BE3A5D8D22704CD1855EFE
74C20FEEDDBEA6A1AD1F548159A0B54BFF2C46B46F9D35C5E11280425EF53B6E
951D9DE847297BD5875DF5316A0D3F4362724B636CB409956028FE57D5FB5221
FBE3FED078080C3A18A2539234F4CC569FE0AD1192B9FB5F768B9F1DA968630C
37F7C7E19DB55E8652E758BB0C1A604625AA03CF8DA7A008330A4E75EEC6F836
F3A22227DD7677F98EBA01DD7BAF47D7EB09E76106114B904A8C7F88539D7A1D
549C6FDE330ACD0EECDA50797D3510A55A08016C6E81EDE4BF8784E3690985D2
EF5A3779CACCFCA0C0607098F028BD79ED94FF8C48DBB09610DE5D62EC8A073D
3C5D7155B85EAE2064B703655A35D7C27D07FB948D47687174F4243326A2BDC3
26A9E1F02166F406AC238F390A2BF2773A772D284E83F31A39E7F821F453FC1E
5ADCDB4FA567B6CD4A2FE94FCED12965564EC42A414CFDACE2F175B5FC1ACBF4
7C081A2C036E31098B19AA4EACCA115D1A94E7A53515231235ADBE995E8B5B62
EDCB05BD10148F949019F50F78BA1FE4FE2F9BFCB56AFC779B6CCC4847EF8425
1FB30690A0898B3D5763084D7F0D7B86E3456309E63F182AC2E7F22A88F9B4D0
594139C2E6D3A275D4E3A97FC1329FC6FE9149043EDD139CC781661C11B92842
3F29E18ECDD8CE8B79BFEC0D193EF21B25377DEAD03EC83CA7ABD38E3CFC4190
9C2198E73668B1436280A42AF56CBF98E975AF1E78E393DFF3F19BC3BE2AC254
15DB6EB0353850F8A380B88785661AD0E5D32BA943A91D1B195F96D774188CEC
1F008C70EBFF35B973480FEDC98769437031133230C342FD6DB48BA6280334F8
72ECC79C68D7BFB8550ECF733B09A28070BD0169FF097110F9465EB9453B832A
2551515D8650C59F95F038103EE520FB9CD6A373A1CA74AD7B2476F82DD3D273
2A26F5AFA0327D6F816361260F802ACC75238D697E4EE1017A18849D05ADB1B3
375523A649C92646EDE74DB71EA6B17D6B6B125F76C4F61C9A51E50522C721C1
DB1431A8003F403C5D9C75BD8AE38BFF15B0F90060DCFAEB824310BDAF7C187D
2826FB03628F6313FBC03A857F23550B9AF496641D6E8251235B2A8F6B78F360
0ECFC53E6A64F8E1914F236DDCDDF06B8DDFF4513D320AE3DBB2C4728FBC6051
920FF78BA93DFD793387580CFB8395E034E9EDA9DD9587DC56AECB950FE60D9D
E030C6D51FD3372C9738FCC2A53529A4923A1765A4DBFBD5ED4BAF008F76B786
068F36C4E97656026408AE46EA51D2D7A1526CE522CE8C90B117A6BCA3711907
8FD837100C0404C0AFA7DA302B0C946549ACE707B0F5C8245FF42C16ED37ED2B
FAC450CABAF81AAA0987D11856430820695543426290BCFAFDA596F4EA019B18
254F6E88F15AD20793C5C72C16F44B004813692BEBC571D517F31BC57E260E38
B5A726A9FCFBDB2E95C585A38756C6FC6FA6061A27F5A42F7518226B7F1F3300
E190366673F16F10C133A6D13100894CF74197F8FF160C86F6FFCBFE414A51B7
1507E14D88E3C34431029A6130ADEC921D66E79DBFFC772D8E9A83444F1864F5
69465D5E6ECAF1110AD9AB9F59DAB8E7ADB11992E840DC1FFE296014991867E4
38FE6F0E46AA09040931A86060989837665CE07A5BA8A7C99697A210DBCDFF1F
579C1BAD94806D40441985B2096E871451B60904ADF4D0F30DC9C3184C02899C
ED49F897C48AC52BA9AC70CAECAA58F18BC8B73B2A80E12C2726D715E54813A4
3A9501C1B807F045FE13AF3319D4579AF44439516ED119818D0151BE95625A41
C62764DADAA0A8189DDCB2BC12CF6597A9EA818C37A221CFF683BD26613339AE
ED71A74680112CE6E85CE01757FEFA59D077A57E99FEB8C9C87BE0F2E6D94B51
E3B3B74F4D615F2DAF392B448A307D18019A2963E818FF0537D16201311EAD58
3846194C8644935C2A0AFD88B11E85BB2092CA112984A82BD58294B9A2358C4C
8E02B22CB57D5A5E24867A694E6DFB16E2435E60AE3D438589A6FD6D8264FF87
D43BF475C2D00A49DC6E97590E6631BBD7A4006CE57EE12CBD7F7D9D15FCB3C0
6AE33121DF0B59DE645D41C96297E3DEE7D69AE271BAE31F742D67DBA3C05478
38ACD3F96F95F480B577EB51FA05ECDBDC082903DA3A022DAE7AE1743C891E74
90E6B3F6DC9F39DC2D9A5C59E5865300C1D7B21BF67EADC13F2DB38D27218C7C
3F1E163F9714FE4F0FF6671F05665C98CAFE4F8145D5E918D8881E102502A5F0
0A5EB301E313F203FAC4FB5B4E8C1F52F25EC2023FBE81C4016BD0973CA79B94
09ECC316411CB2F68F3701982544BA2956FEB9A6AD59C8C4489F4DD6417DC3E7
CD30176EE12669D2E36C6E6881669FC6C8B6CC00C4AAC8FA66305F971A2F0EDC
A5FD95210CD8E9B09D823D71BEBDFB5EB7A8B267EAF06F2F12123C791258777A
68BF6FF673F1158D1A24E2E398090D221FF7E8D86FABC001E1C21689C068C796
A4B9ABA07B28BAC4FBA68B6E3EEC9C19FD26386ABD0F049B7EFAC7CAF4F8D9A3
E01EBDB5F1AA141F74618874DD411201A090B1BB2FA6A6F7FCE6EDA2D8108FB0
B10EA2784BC2A2CACFD400D08F77E754077FEF1A6FF3A260D5DF4DCD88EB4EFC
199970939032B1CB56A96335DD2DBA79238B25EC853920D9870F14B9E78E4379
9C1BD12EAB964BF6630F08599E7608C775091A42073607444B886CB612808516
4F0F000280B93E603B09BE19277B388B1B60D4BF9A103691F7656A17F499128E
BCCCDC876048F0E1930E63301F6475FB1BE150BA28C236727C274691FEF9E165
12857744FC3302CF57FC9DB56DF451CD485A6638AB8D6EB478BEC74B4A655DFB
9B704FF3BBB2E1E4A57323E33BE3F914937317D764311E075947AB97CC80CBD9
954270215D16C8DAA4F8BD7F4C823CC8439D999FDFE056C1783DAA26AC3917EE
29CF495E411CC7419DBD3E4C27644F2EDFDED8A14FC5C2C318EAB6AE6B089F1E
CB563D20B98E519335D9CC63E54991094C0943CA49058794AC1C8EF5B68F5BB2
6CA51097B18FBB338CC230000401A577A7A7B9D5AE2A489407B32890EF8A3616
1B294F6F67094C45A6E8DC1ACF27C504D1B92EF189EAA50F720838A0D7D7DC08
BC4F99B0E0EAD3E6B7D3BD43FE84829703845CD7E7D7C3C8C4A6FCED0F8B5B45
EEEF112F073850197025FDEB04C94DFF6C45500870DAA27F9B5325471AAC83FD
CC9B728E07D852C6EFF21EA867759E1427B398A5AE76A8F2FD9BCB32C4565B83
C7076A666587DC5ACB9DDD4C75AA099AB7EA97E7196FFB72415011281E67FA1D
5C53C0C58811A0E97B70D1381BA1ADEF6C1BC11900557678A9604906DFF83F74
9C6D67CB64A0254B3275287AD434FFF65ABC5DED61E73BD2DC936253E07C8ED7
070D5CD57E5EC634CAF9680833036099146E066FF7D207687A30B979CA2A324B
B7DF05A11015A89B1124CC8E51EB9097381A8117758EB313E30B39F28D43D0E4
0B063361B8BFFFC0C1E6901A0520136359963D667120786EEBA905AA3FDA71FC
1CC13E71EB8B920E5E4A2E941CBC071170BDAF231D6167867EE60AC9635D4C6D
C59C67D9D03602CE92E8510BC846FAC1C447112353CB60C490DDD220303DD3E1
DA76BBD2EF3E4F380F7D8A54AE3D2A46BE6AB8CACC0BA2ED2B81164EBC106010
07CFBDB5539FD29059607E74D0108779AFC6D12A16D7F87FF31E40C88E7BF1BC
01565FC56FDD5E46E144F0880CAD8947EA3B41F32A387996CD92F1D0FA769B89
ECB1A788FA55343D15A6F8A1F7A0D0985B9E19400D1602B664C3D5E35ED51C95
B03E43CE4DB334885031EF6D517701D8E1678341355E33D7DE04EEB63732D72C
4F0AFCA481A9214AC1F72DE5BFB3AE5C0B742731E124795666F90EA397538D32
0D4A2E6EF75F3C9F3929AC81DB9096BDA570D5BAC83E02CF7BE1DBED5713A5E5
DAA62A1EB6DC5DC47E0D1C0CB49EF04635EA13CD26A30F12133D1DBF10DB5FB9
AE4ACE1528E4AF223B7EAA157C817C8B7417155C4EB11C34668E667132CEC807
5005C0AE1D44D11A5E074A6334D121391F5671D492B6B9109EE663F0F6DFFA87
8EED4EAA018F73E38151A359C139FEDDB88B50750E29A0951D3EA32652AFB6ED
48309B461B2EC87BBC806A21FA99E0F2B386D4A6FC8BC9726A74375C9D45B985
542CAC20A884A72BDD69A0D14ABDBB12E6D422D345D735C074D6F1DF3C803401
9A1D1DFAEF2A47AF369FCBD4E2E26B111D0080290EB5EF7E8DCBC793CCF69DCC
763967749F6B96DC791FC4FF18A3FFF5E53D4B1CC84D07E57C7D053F0DFDE33E
C3DD60AFE60C5CE107AF33A3CA84FC467795FD182FB99DF8A2C1856BE42308E4
7E155E966974389F2A0DA437731DB23DBF22E5B824B7891E3D1D139BE29FD9DC
C04235AD690B1654C4947A7C53BA4553121AF36F959EB1926B8427E42949C55C
8121A8E56D22DC51982D6E5CE1856B06352E2D33CF74DC13FDE4092B3A707035
BBC150C571E7F2B9E1557C51D4F7C4B0D7B8F457F460F7C02C8C0022FC04B1D3
2542ADFD84BADE2F18DF2914840A1DB9BDFDCAFB4DE31F640162230D2CFC991D
D5EE846B08E688DEA39DB130DD26284FE7E20D09BA7AABAB57126CAEB8EC0781
1BC892AA35216C9D37458082D7EABA580F86962408D6CC608718F9371B8FD13B
517C8BAFDBB797104956C588E3C7E26F39CF3C3A0B6F51E82BD1A2DDE2A6A619
B9B1739F9F14F41A6A6A704CB7ACE049187DA8A718462BEBE15152AE07BFF28C
BD7C4257297E9EA99643D72AFBC9D93E48C2868743C92476E4AF168F39D7BEDA
D2A9F24D0290EC1705B5E0383A54F267017348D1434419D56723C82DF9AE257C
2EAA9EF98BDF1A2EF85488EB43F6C71DF29108D1B8EA290C95733F0C01F6A6AC
9633FC71555901FA8FBA766D2BEFB823D253CEB964EC425847519310C6F1AAAF
C8C231B9CD1BA2242626EF2071EFB34E2E8E80C2AC0A3490D9DB2187D1A9F2F5
BDB35E8D2491CB4F8992E13EE423AB13432DB3B4E05784A628B45364DE54173B
34454C1FD9EB128E78D24A6E43868A02A956E6162F5A730904D5151816BF57F6
E89B8F185F35440F4597D7D4905735BC1A974ED34B6214FBDBE22982C36A0D47
EAEBD1AFE2ADCE5F43E6EE61F3C0B0E71BAD639733F5E0801665A9FB56DB97C2
7370986848A9E2788FB4CBDDFFF3FAD9EE371FE74ADDF8D3DC983BE544A3C51F
044CB2DF76505C437C7289FCF8C638ECC9A9C4FDD0967EA238ED03FC8579DB02
A7EF3CAD6DF4775B235A194E9FF72AB15E9A2FC01D8D7D561E770FC41A1D3872
6230C7D7EC15DD88BCDE7E6FC4BFB402DA2DBAE318E82A803CF8ECA0F9715CC0
960D92A5185475FCE9730AC2D6154E3559087B985CF89D11B5A8C2642B75C08A
80828D79AA12B707B55BF0C93169379323F95FA30FBCB1198BA123ECE2583A41
A2D08D146976515C3BD36D9E3436E139AB1F5E9561C0E13AC20D2139E2B58675
32E27BD3287FB43C0B738CE75AEB022A6EB3B78C4A36E6A958F3A955EEC7DED0
041EA4E611A7C3CAF62C36DC8B09609EA83131975D2E2E554EE48C9FA58FE695
13D12F5B7A5D4A8DE2AA6CB07BB3174126EAF395C25DDE9BC902FA76F258C6C6
D2890FEAAD2981F54E6B53A39A851226B4D450EBF778065A1D7AF8C3F0A27E96
A4B03EF44C775104995D1764BF05FF40429C1A0D1C4D4A3C5DF625BE5A1BB845
A673C8D7EE5968FE0BF25C119687680D4701DB5D01A7F9B1BC3786CC5B172B28
0A186A82AE84ED4DEBF1F9F5836C40B13B3ABA9F10FD71BA44C17BCE2A26D723
BF5E3FA755A7F23AB10F004B2E43D7E3129E6B98A11C02A6773ECC894A9870E6
981DFE3E25ED56DEBB43B6325864A8D28C38E8537D0D9CAA590F841F45163903
5081D3811E0C66F471B9645A56EDE05A13A34D3F6C7634113A3F260B75D64604
AE9D53789E2D711DADE677407E0F5C592D8D7EEB8B808C3BFD30613A8EB87249
B7AD1C1B74E620188802139EB75DCBBE544F18BE36872928E84ABBCAE4664019
853A1FDA83FB164C0F737A30DBF87A3CCD0F22DB958EA63AEEEFC7A02C9FCDF2
C598C6C9C0CCD4D64FBCB1A3E3CF9DBCC3DD2C88956C6EE3BDF86991909E5EAB
10D03314C958D5D4A81BFF9CD0C97C06B7089E51E4EA0BACE590DA494B3922F7
AF305D940AE1A9166E49F3A464A6F461F970FCB1AAAE81A5BFAD5786993DF51F
8460E1F6DFA624FDFD11F466B79C41A321ED0DA5E9699D71878871CD9119E91A
4ECB9CFA0BEA324F63F9D79967EC085E300FEBD5AAD3170129ACFD3C8602AF76
1DA8BF67AD4873D0746FB97C0D7A522813F22A985790B68BF58AE3A5E401B097
D671D30F047E2D89AAA40240C333F3A85E8E3A3FC15B52903F00B09C47F2C8A2
7E8A34B4715AC8A95F6D977503D6657711D93067F40857FFE01F891EC5C65895
F53A470FBD4D43DFB9473595E47D771BF4A7211327AA44DFC0F16CF29CC082B8
05B71A72B55D0BEAC40BBC6A00C8C812E18BA9DFB0A8B6CC887F1FFD302BDFAD
D1E8560A66DA92AD724C8FA3A0709ED82FF6C34F9312E98A8E5F7A58A75BB6EF
85BEC13AE979979C417BE790B6A8AF0AE8BA8FBA6635642864FCADDF5EE7D4C5
EA25C6D326582223F07A2103EFA2F25D281B8B46E8E7C4DEC797225F3CEAD413
06992C83CEF0863FE9293FF268F2FDE509240018AC7A12489AB0EC2EDD721D0C
79BD35CDE84EB7DD73E340C1B02B8C81C618B42C5BD7DDB9FDA889F5559F0AE5
2498C16ADFAB469824A73BD2AA09A59189D83CD152308B7F028E4F4375354B9D
E4D7F6229CB95ADB2B2C140E44CB1F9D41E0E82F946E03D59B656BE0391EE8BD
9FD9AB10155EF12E163DA6ED9CB44ECE23D62746D9BDE791F71CD01E2A9CC324
9C1223BC36B097E71BC971E0A8A216BB221F378A2344E3341E2943F0C471DD90
2B80CD8FCD5CAD1BDEB7D6F2C2E3722D4F54BDDCAF96A8C265788680952DBD19
31AEBA4E6600D9A893CA8C486CE8FF13F7000621779DDE4C55210006BF52D69F
0C94AB73FFD79823EDA25139E36614FBE70025908F02EA2F644EB5D4749A78A4
5D4CD2CADED4DE652556FF51BC0001DF5B83052A15C36375A57ACA68E235183E
6D8D37ACE44928124CB1DB61A6370F54397D8B3DF12E35D253431CDE69163B4F
EB29E39FB4C0F92BCC0FD0194C321DB7CCB0046AF6EFCC11425DB7D567AA0D99
73E343F85D3A0921C2A5CA8077D9A864AE01659D50E6B69FD3F298B84A5D9969
0A46F796E400C61547BBEB8E6A8F1E1FD3D9D30751F4418463E268C1920B9E10
05C152F569B6F768E829230B95AF3900E6109C38A229D9C7CF5CB7EAB2789739
6AA1E41E16A87F5E7EF515AB8DEAD56683EEFD4DB4CA0B4699618C026ACD7973
FD2EE01DB1BCBFA08AA804D42852A2AAE8EAAA2C99BFD78F7C0D19458B0E52B5
B2284CEC560891EC58E8A5D8E0B6E0E65F1CE47FCAFB7E2F39CDF3E9F5C77628
EF67DC3E783D652C7C58BE99609C68A82DBD5428859071C963455205F56809FD
EC0DDD752CEF47713E762FC98215FE9CCBF2B29E45964DFBC88A54EC9F28D41B
B4E7360D458BEE308DB4BB76572901124F1E1FF63D03970CAE45A26B204B45EB
A6BFDF5E0F11FCF8724AB4B201C6F2768C5AACC6309F2D135D9969C0714EE51D
F14121BAC17618A4792F697E1B6C3AD3485F0927FDD53FD0567E56D7A152DE6A
8BFF2A941D6156EFAAAC7170A665CF57A0B9FD242829349F267EAB9C22964DB7
61395FFBD75DE58AB7481A561CEE5372E454D903ECEC26A777B5C4AC5227C0B6
E5FB982C1BD627339C4990FD414588D05A5FAA441A3FB35A3BA363761EAFD4AB
19C7874CD87267E59394D0B09CB36F0F9CBF0573E411FCF0ECC81388AB667BA3
759B86B4DACDE1ECD71A49B76E3BDB415361B2312BB2C72D850BBF35AF4F8F5B
F0A277A7D0FD46DC3054B81DBD44C99E8002A43A0A354B78EDD192FF1E2E8FC0
1D71641733D8241EC4E0ABE635C97C8133304F094B5BE9A47F13B7489CF542F1
8F2D72C59DCFE3A4A26331AA8EEBBC26D41CCF34BD10850D6EC8729C29115539
4002DF4820BC2CEBE107AD66C7F1EB1B7B887C06F37A5A2B1979D4BF01B24EC9
ED746D1D904C58C59F8B783DE3630B44905C93780CD0CE3005D77E2DFA403B8D
F0E0CDDA7AEDB5E495AF1B9ED2B928BA26A47076AEDC234F3D659CCB053402BE
5739BC3B73A58C600714CC593D66508A9716EC6338EBD103E0799A168E1598C3
311F473F8FBDF5630F726AEC51265AFEBB6C2412082BAA93504247199BC18FF8
E99410D87D06F90ABEE08C4E4CB26EB6F9CEEBF42DA2C6778E0A6A7FACCDCC8C
E175CCDE5AA28061DA2B2BB6664C9DEB4423F6EF3B2A23F00B9B4F19702229E4
DA035A3BFD78AF62F864CE839EBA53754A3A1589C8E781EC0785E1196AF10060
D953C6DDED44CFE8ED5340D198941ED0F8D8259FEC912B70FBF47BB19E92F80B
5D829B1AC466776C1182BF76D23CEB0FA832CBE0653E03850C48F9F428AB16CD
80233322C1063127B42E16F395D92132CAE185D7230711171634B4FD44187DD4
F3CC51046D3CA312EDCC6784C9843E6682E9D9EC3C8EA8C98B5E2626F227C744
E7C1B284EE0B75C913518C312CEC2BF5F9EEB138C6587422BA711462123D3346
589E4D4081EFEC2E86AF9DE6B7B824B91E95A345F3D6DF3E929676E667C67644
C7ED5B191944C024193614441D7E1428343BD3FE7EA79C206350BABDF3E188A7
3FF53D0F25F0D4BB80AB45C84A5823012456C44366E64E7A8DA88875D92B33E6
C70BB9A1A19B451587608AFCEDBCE78C59739D4D29B4DAD9824C47D866342F32
D68D2918D023FA6BBA0F2CFDDB7B6A6758D71F2AB38A89F3ABA72F23AA33AF8A
AB4AE56C6A32BEAF8B0A54530721E6D36352988B504A7B8902AFEC0761BBB1C1
A154F598A52A0C35D8725FB0EF2750BCCA83980108E91D070124CA4043B30938
932C9482342BB0713631224289265487E5588D51D0C1A0D5CF9812578DFC4BBD
2FEAEE32EF988716B638D3547870BFC23765295F342416A8BE03F7CF0F4166C0
55B94B80DB53E00B705CEA4BF36EBC4F6C61E20A33F2C78DFCF955E45B127EB7
BC582E6986731F43600CC93B7E66B5A81304331CE4362034B933844093B20967
D9B012ADB82AD56F653C0BF361B2596164653AA07720A0F85E4710CFE51A5105
C3ACE49C5D2D13E29399A1DA44C8E2FE38B2370846227EB5E888004A59FF5B3C
5AB7BC0932E74F6FF004B0BF8AB4A0CD0C4380C8D64385E8530CD14F65699CC5
AFAC2E61935BEA0719C6F955B6BD3B30A90F999441AFD38A1386C59F0A53414F
D1821BA1DFA3D94174427922A6EF1E1A1F10D327B25CF27A65D1D990B9BC9546
9746975FFAB76A1E686519B523E51E68E535233AFF2558D58A1F72A5B305C20A
996DD960C784C985F2A05F1EF15F998E86875CF0B32E0C38C732A2C8B500FA33
7EC0D2D7FAE2053249FCA466B774A7B2C8352D56570C7D7F632475DE74EF9321
5A01F4A7559800016682E6C611B9B74D073670982DAE564913A964F59752118F
072BE647E5EC6749248CE0603045B801AC04252750913CB52A9887D3A142E0E4
61540A93FCE51BD99778AB1EF33185364E851DEC7DA28481E66EBBF3E81626D9
E97EE4526630231F405D2953D5A35B617B2928F5D20729CDBB7F178105F38EC7
FE35EF4E931738CE52453658CDD62A313C341F6BB31408E742EA209CC7B31A1F
016C013C95597A617BF66777E89B7F8A24FE5F1888908FB45062FB0528D2A9C1
9B61A6511EE6B45B2101D0B9D75344C27D7C5121CC3E0980D659652AD4E12276
4EFF306444040B50B1F8C44E304296666CDB9DC44E1C4A54695F8F1631D7C653
7006ABFF2FD702CE790FB971EC05785AF8498D64038F3FB4B5F112F505792813
7A87277FECB55D45B471ABC10F00996E642577FD4077E1E525B641293F6BB748
C1C288403CD95A2E250697D67DFA2FAA06DB7787A181D500CC475EE39486D5B9
054FFDF0355A63A6CBDD736EFC946FC9E89D06D02086FF727463A8DE6DB45A60
4F1A6158FE839B1C2F025C75319380B212E3B8F4FCC49EBC936D01D8165A5C73
EE2471F6554153BE9721DF82B571CD692A4958142A4E7A8E2660CC299B96A7F7
64EA466FD365BA8CC5174DFE406314EA8665D434D13D6240C79BE9B017E46EB0
3FE929881DF07E60591F8571AC59E51A4B1243689896BFA26613E88089F85855
DA0FE25CE224BB20E610BEA21697C6B3142C009B249494C93DBE7E1ECC8F51F4
EE30DD1F73DCDF570784C3A1256241EEC7D0E153D8140C597FB337E2547CD09B
3A9E96E92369D91C4BB61D5B9962B8E1E0BD5972EB97452F5AC28F5E877583DB
C974524B00CB9610DD0ABCE4142E365603E61D5099510A633290FBA644BE1579
B4922CA086305654025CC4DB4884BF7EC65F631D11F48ED5CCF7DB7178F6B1DD
08B3A95A38D223038C9B30883779CE069A67DC561F4D1DE8743547E45D74F8B8
78BD8A92008192CF14FAAB3B24F71D5865D542C9CCDCB8BD56DC7F935D2BFF17
44B68DC7CBD53BCFC3F4CB6D3255F0E6EAAAAC7E70603583004E3136
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 65 /A put
dup 68 /D put
dup 69 /E put
dup 72 /H put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 86 /V put
dup 87 /W put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D4604
D58A8335BC20052440C4903786FE3E335E331CCE36A13F05F71126F680077AAD
ECAE10CB7C057C2D55F384723D5C30D20FD1358CBB61AA05EF45403C3B8019EC
6350ECB240F696BCDDD1A9F0465CB43B824457852CEE14CB39164B65A06C6F60
2FF3A2A62E9567386DA80C4AD7651D44FE76DBF369706318E0C38215CE324932
7625B5924F5370E9C13F0A66881FC91A4FF6F1AD4CABA2250214FD013A06C1D9
260541DCD6459B406C52B6CA87B3952AB81474FA48679B582C6F1480D75B36CE
F1F23E2A1CD7C570A39F1135C4E9D0CFA54B5C45CD1CA9CDF4B7EFD660789647
5027F649C3D64BC1485D91C56305DABAC0B1DE09D74D9619DEA03EE7D559D5AA
98758F28FDBE89ABED3B60FE3D7C04844A52E77F812298616C620DFBD7FD70F7
1D4DE414B45B9B2E8BF75D05932F12D68BF7A4DA96F457BC634C1F42DF0FFB91
D9AFE0CC5E393F126C76E42F1228E7F06723F1FCFDB05DB8E1CEB1A8C60E5CDE
3270DA9B01C2B51A0A47153549123F10B9BD981DF80B53EA5B10491A203C9E33
F09E0EB45AFFCAE16E7AA9E1B3E1686FD20ABB892EC24C1F97392DE774E157DD
12F163E4DDD7B9015E4C8A462AAA2F8F3CD66B05CCBA5B4B8F6AAC2B89DA78BE
ADB44DAD68B7897991C6C89AA3A8B9AD5994E179D48DB29FA885CB745604F08B
934A8C5DE1C99EB3776C2872E5C3BEEFDC22AB28E9BD7E6F53C084B8C31CC354
57264B5C3945D52B74C2634B7D524AE5382A2CCF65080E513442896D60BA170F
32CF154431E9A086186D5B2ED28A30C8932DC4D02AF81D45687480AB8AA7FF49
AAB980ABE60FD933C812A1DCF4D92FAEAB19421F43CDC503FE67ADDA409DB442
03D7291E6FA848EA6C5BDB85B34B916012E8B4B61F1F4348DD2F80F90506D13B
1FE8A920B041259E270AD661B35C929F6C818A5302809519617FAA7ADC8FCC97
DEDAF70E9C835029FD78E23E35AD781BE1F52347C6E3CF2FBDA627C06AAC52F0
8DB31C0E3F71E0A06D7C0D70E9F1BAD1D6D8D9CDBA38FD182287B166EC75762A
DDD905DC0BB42EBA539277881DA0575494E86C7FC225D06A3F74672201E03FEF
3EEA6363FE58085B97DF00EEC5264177CBD1429C728C2F04ADF0BFD9FC198E64
D3D87419CF2A185D6FF89A5CFAE626624EA1E727F5579F6455DE400F3690FF09
90783A179021105DE192C8F3565824324C88AAA617C651BFDC0BB9B0EA210761
092DB8A1FDE2196E66F7C0A7988462AC2F0F3814A97858EEE6CA373F6F9ADE9A
9A142815EFD22DE6CA6245C91C76C66B6DA3337A9CB54D690B320D528FE0D42E
B8C5F981E65FF94A1946EE4999873260757C6F372B83156A6A5E8039C6AF6BD6
E839C26ABFFF85197113F53C845F890F33CDA01F558BA97DFD57014C59A2B412
4FB3E9181F09486543835D4D2D06BC055D56D0BA61784143DA57D96246150A3C
BE55022204D31908129181AB77E3B16E6D80BB87F22364C86502E3E149B1D8F2
AE602803DAF7B918ED1526990082C6CD9C09B7EEC49E6D0B983B9EA3968847E8
C31F292FCEE4351109FBF273717561FBBAE7B14459DD81FF07746046DAB16950
C457F8D0536C1B04115B92E2B27DA013638BB885E6D72B3BCC6330049667918A
9E2DD7DBE31D5562A8E25BDA197BD5A0CE733067EB16B27EB72917ED19A5F695
6DB38822AABEC09A75B9EAC13A0FB5A9615FA413FFC3689AD5A82304FDF58A6A
DBD35B15F04452F99971E221E6696468A8CC07050EB3DDAA21D36ED970D7E4D4
F41652A40DF7EA54F30A827176EDCBB9A58765E8FE37BF102B2F0A137AF2E45F
EE9435060462251FFE241050DBE3198B50DD2B85CAD48BFD6BE6BA465574C2B8
20134C9F05E87ED50ED5DDCAAA06EA6F03BADA5ACD360460682FF68025E0BEB9
C9891D2C9F1234F25A53E295D62DD6CFD3D1C4F9FEC548E2639EC24FC61CBE05
EB63D2B34022153D2E5B8F9A585B1AC94E1386822ACA9D6DD1F2B9D1A246662B
A0A0D0856F1F010456631826019735C8D52740C6CE6D569783E05EF34152017C
FBD297185E1A6A9A944D71F986C0E9A49AE8E71FBF4B2CC51F1E3BCB4702E18A
725E5A17E7EF328972DE8711774E8028EF695DBE6543767C567B1E053CC290DC
02459F5FD4A862D6614B6B6D415F7B998876F60B751BC722DEDB04C83941A9B1
A5EDB41BFCEC89B3348072B0E0C454C8AA2779932AA43113167DFC1E7C9EEB67
F4CD6238EEB66012BBE4FADAC9920130E93E1FD5BD78C255798E7DB2F52563A4
5178C278E7977A9B795E231DAC1952D7A3CB3CF84A0DE7B402D3ACC45B83939E
C882B8EB571913E52CA0A9F72ED098AE1C47D172DF60022AC7E51DED85FF2F85
798237878C83AA65287E20953F6E5E03A3A35B5D000B07ECC7889E8AAE4FA73A
5B47791C561861B3A3F019DE7B7462AA3573E7BE6D5BD3E5D8D8EE7849EAA3B9
717B40E412956989FA256DB103A06BA219877A6E21294A7991A9108D971A25C0
303EC8D0D854C0903E8BE3F308935F08C92257FF61FA11C8F77F6BF3CE38FDF5
DDF5B87CC02CE1FC48A38401E076D4E9BB8F59D771A98FFF34AED70690559218
7DEB79CCAD0D1B2A755CFCDD7E526A3715ED39A9D726666400F4BF04A07FCA1E
F43B7DC118AA40CFA43168E7DF76704C4463E210B41F66C8952F9D27E6AD7407
DE0FB882E0204B756ED3A444A76E029DB4E9975D214C5BB0B9255E57EF89FE5F
AF93A5DC687E0B2294962DD12CDC0CAC157BAA84D5F3FF90DCE033E6E5E7EEE3
1315DDDC6A1222840101493D0E9FB0BC043C5AE44AEE653CFB1088FD738783BB
1EBEBB71015EFE208DAED8C16A250B90391B9F5806948F55C2F11CAABF0B2FE8
6215329CD963F78218B8CFCC8B1295C80161E62052652CB81B5F858CA38C98CE
E822E9AE554A620F9A785097F89B23A8933AD5A420CD86386ED5B157C0B7D6CC
B93502303AB7C1A7CBB22F57B74E3125BA320C177DB3DD83808B2D15C7D4B417
FEFE3C093C87787E7FAF86113E31B1C667ACFD230E2E9B9E6B54BD203F31CF11
25AE343A86166E3660B89034F7BF491FCDDF1CCF8A8B7BC77238CB4031BFE7F2
173056F8D2B3E329FE24C8AFC9B1442C3D6405EF9161289473FACA9C561D2C21
9981F3F3688829A0558D6319FF42E1A0BFC76803DB2C95954264B0BC82BCECA7
523C5E72272D61395A31608739AB88A8B33F409A913C4A139B78691EF8A22BE3
B145A002524D28A2DD06BB49208D0D2D31608808DE95B4FBB94E0F2B82212028
9073B52F031070FA7563B43EA4FE2EBAAC29FE8A18081186029BBCB4AE2F7439
584BF18CAE4F989710F7A3D080DEAFF2FFE4D42C2BDAF01D625148CE873E2B3B
0F106C790789FF05B920B8274BD3071D5F6DFF5B0655AFB50FB8AE694924D5A1
D8092D2E8A814B3AB69A218BEA0C172C38E6853E2BE6F5FD4259C07B127765F3
7633018F3DF20722141D2AA86B7347EB2525B8BDAE3D21D7B8B1E55052AAE0D5
075530962D9CB718BDC69E42A6BD773D5558A33959C464DF8CDEC8484B832FFE
94071C93F6C5D1D2A8A1CA0109096C6DD5F8D3CABB756E5B1FBF12C2038F57AB
8C0751C08CAA69E3228D0A4F8274C9FC954CF872FF32C9FC8BCAFFFCACC27283
9F04D63F2AE68015A7CB5326B445F8626B7629FE923132DCC32EF8BBE6D02732
2B9C7C54FDAD74858ABDDB21AE0BA2C7842FA54E8F07D48B2D51CBABEA4DBE8A
77D16D8F574A2FD3D5E6DACBD7AECF93C882B186C7F63921CFE62451643B45D9
FDC9AA37A434067BA322676D6B5802C65B86CE4BA7D14AD0008608B2BB736F6A
B0EA2B89AF3751F509C413926F8CEFAEFFE6721E66E208537147337018F68DD7
84845BFC9B527D5C50596847FEF3500480C5223B43A9DFCEFB77336A4638499C
3BD492DD3820A259870EDA709EE182D12A00E4ED8630BACF47388A315791C73D
CC58D18BA4B8598EFCFBE46FE81FFC3FC8488DCEF1A411FE3234CC54D7947C06
ADE7693E4E76FF2AD2BFAAD5D055698975D09A23D3779242EB279295730E11C0
F816996164BB31CB18178AFB9A5BA08A6AE01636AEA2094072B89F71C95EAD11
59F1172F224A34FA49B64F4C347CC375FB3D698BCCA3E8373A234D242DBAD024
4390B47FA28E0F26C38D71294DB487EFE58D018AC3A2EA69C1DADD10A154B1BB
99E23A589B8F525DE3FA3E16233D71A916045247DC85265C190A4766E2B553E8
D57D5D2F8F13D117DEF5291DEEFE3B7DA97BA5F7E3FCD90FBA5D4D7C35DCFDEE
26FD4747015C145A376BDA1344692A0D48867FA2841FB5A9A33B071C4D65BCEB
D230A466D6082B33ADBFCECAD8C41B169515C0606EDB3E21DF50BE20A616CAD6
B85003EE4E462173CED92E6AAAED9CFE0D371A10CBAF690DF1F00CA99DE91BD0
44C95580C00D3527DD0751E0C0EACB90C50572BDD7B10C7B21C09C8BA7A2C900
4EEE4CA64E10DC7EA180811BEA3D2DB6981727EDD6D04930E33B35400FDFD9EC
A51D62607E1213E15AFA11170AC3F5EB40E2ECC0603EA47AB52CDA2DBA854B63
7049518A05B6BCC81691CCB6475E5C286E9A157CEFA6C7D32F81FB853185AA00
50C8FEF972A8C0496E8CE30B9712F37EEE7BBEE7704BE898D82ED6CF5594DD16
A45DBCC671159C9461304DE1DE20798344AE1BD6D62DA1A55375CC85A53DA13E
775BE99AF61D761217025D10D9A0B40D912BF8DEEFD730AF769F54F58BE8B9C7
8D4B95C2927A2594AD7341789E85A70ED2F30ED51FCE9D3E2F57B5E548909511
C2F0AC2206C99ACDF7962AD6F959DF97C3B358531129581BBC3EBDAD5CEC2A7B
F5CA322F1F9E47E648C96CDC955D0D0D737897B8D6D9997734FB2B954AD5AF0B
C3408E60C8315AC195E2A9D13DB165601C72CBAF53D57750A2CEF975BD0A5483
47A35A30877AAB2D4F1589D86659243777AF44ADDB485B6197BA1FA6923B9EEE
C168C80881A31C4A13B3EDF07A41F29C3E1645853E399DF499FA98E9DCB2099D
569C3980A31C9B7A73A3E469A60438C1FFCBE36FC4B945749C522CAB92848FDD
017A703A5D43D3FF2FBE85E45A20CC623DF76F562AF0924075BC5CDEA6532BF6
1AF7174F733047FB5A518901F4B1D89D44DB521A673AB8BA56829E509BAA71F3
46C268DBFA2327F5623681A23AB706604D9B8EA99901A231E8EDE7800666D990
EB8F5A8642A563528016A746C359EE3650151A9F2DB5916DEFEB5FB46B21E077
65E1FD2FD8E000CBA56F3693093027AFB6C1A593C8D037BBD662A07EC33CEA4B
FDE1F0D1C1CFAC8B94FFD98EBA2F208D0A3DA1C64D7D27FE6B6286D12E5D6CF0
DE405191DDEA0B122EABF924384E469D5D462658B7C9408D4F744176FAE74D18
BECBCC392B5DF28C3A7C39EA63D0B89F68D8EED8BC823BCE93B91E96C0BF9177
BEE5F830FB29A542DBD36D2280724C5ABA81FBCDBF0C456F733DA18604671EB1
816C9CC296020B5EC1067ABB78291DAA3FEE88797622CB379B45E7A42524B684
52D93FF754B6965D35523E1E1E25AA45169CD617EAC43B7F5DAD836D71936998
6F52E5417E344EDE605D9A57BB12AAC6696B153A67CB7D4200DBBB81E738666B
52B4E5624B1C3FEE1EF8AF245DE262B8F57B0C0A0DDCA9DE49322886D60233CC
EA048F585E50787D381F5784827C4F2211C407094A98F30F48525EA9AD3CE665
CD30A1252F7AEB1C36C47A5F8E51AA6E65EC3E8E3C37C3F6956C31EDF824D4DE
BE4AEC3853196DE1CE0BE12F5576D9E3C4AEAFAA2047859BB10BB3109E6F1990
396BCB3F539F525946A3A26B79BB33B7E4AF9458A26D248AFD68E124B13D9806
A0EF723CC8B7FD4952EE55CA987105A7BB24B89D7E7AAB2789260C9870231780
98DFBAD035A399E00D9CADF217F482E013711498A222E05431F35223DE31E4F2
BD14C12C3D4301596865383D7A73EA575ECDC1C7D727F9392C89A3801980E733
C62913AD416AC3E5F3CB5B124897DBB2F1C374F0638D504DFBA5CBD9AA96A40D
AAA789EA5CC7A7E66CA69E107F9ACAC28BFF625D3EA293DF313132B7D4F9626D
20D58DDE2C7DEF3CD4FDD727568F66595C4E446E5EA26CF99637E8D54FEE6214
3D419CD4A84BBBB1FE7A7E5260AFEBCC74D43D520B781EB55A68424C63AA7C79
010C558AD9CBE2898CD1322ED48ADBFAD049DF9F569E4CD728DD5A43C3FE60DA
0424B98F46C1CC0AEA63F4E050B386BCF03A241210562FE3C116FC4668964BC1
21E7A86D532812175A4DA51A23E16AC40FBF50D55086AF8855D7ACF55515AC7A
B546F826DBC4725421540E22554F7C9583A73B10D7BB8483D440BFCF800E1B2E
42ACCFE90F6DFE5630D1C665E277599B628129E27BD4E2E9FD6AB2411CB3A51E
10225EBB2292A004A0AF33AF1C86DB09D28796C6DAB046EACF9EAC0EBFF02E10
D4DDC13FE936A72623EAF6EEDFE8DCCF117A4C38D5DBBAA3840C3E0D3BE4FDDB
D72E1C61B4E2136059A1379B2B0617E6F486711F831496AC039C9F1355780B83
711EA2AE8EAB5A70346CE784F95B0C70B4A2B52DCDD5629B1ED7895B680ABE7E
0A51EA493B658017CBCE72A6A97BD8A809190CE33774418118542E1052D0E006
3764547543DFD2A44AA3FA768F8947E23766DA0D2560CED4C87C4935BAAAD857
807BEFFEFF971E6897BF7D2EDBEA7A8034382A14CC795D4A021824B6490E47AB
7CAF812CD12C780641D97823FFD37208D2747A321338803B5CCDB656785A3890
07139EDA4D9A7A21354B7AFE93E6331EDF58CFCF02C7799A218971F6C18CC257
1DE04D0217EFEBCFD62CD5B8C02DB911BFB5BCFB0071A9691B45B12FE69D23E0
4D12603E7F7C5993F27E5BA1E24081B95A973C9465CFA3658E17EFC96BA25BBC
C4DEA297931AE10B29E04ABB2FFB1AC1AAD47BB3AE484F1A15B28D045C6E5E01
38768911140633AF68D9198995BC1A239067AB2D709C03E93DEFBF5F97E0EC4E
5C84FF777A4AF8A206E143D01F3463C977194E89139ECE3874B13ED6F1132B22
3AC3F340543078E11E857261A18D573EA3609A4FD192307360621FB3D87BA028
8D1F63A608B066DF073E53ECF36F0EC808926F96D923C222F0E7418C07824958
ACBF2B9F30C5A9481CCE0B3C913EAF3A49F83116B215FD85844AA4C1FB868FE3
5190EFD552BB041792491501B8DAD3F04ECE1DE529E91F7089906F4910873E03
B95B0D2FC1903F8CEA460533845BD46FD64E4CCEB8A52F51DAB58E9FF45CEE2E
67298A3DD0F393E9F49DDBC8E5A11C1A021C6DD99C32319231FBF1D9C2875972
04683C9AC2CDA82FECE96BA0CA843C33CB37FC2A9F80076AEBBF0DD21872A01F
D903560F67F69F85D50436F9A4557FCAD373516405ED89C8FFC34C79E040C4A2
0CB888685D1CE339C981E6A7E222CE3F79B458E43590DFF17311DBCF9A0613AA
0EC044F467EB76D490B906C1E8B647B2A9630D1E373479AA63DF3D6122BA16F6
8AA7AD2DC050F0C12E6BE82528ADFB4B0561C5F71227B050123630EE73541550
88D144E8043C47AAB5F5CA4BE325FC78F21A307984A0C9B89D40E51BDDB5865B
FA9131391F5403DF744E6402D3DBF1218B658A53D3C93729E20B6B73063B46DF
2A9459FFF097BCEBFC7B48E7795E6C9943BEB5B11A1A07FCCDB753C40EAF23E8
17DC686A62CA858BA3F22776000B2D8F572E71D0E654B3E4BEEABE0D8C1BD45E
8933A056A8FFF4C158844F54500955C817132D6DB5D856FFEF3A88295A74E8BE
D1594EF39C946C097B104C10E601CEB7B55522F8CCC1364FB4163B181ED2BC2C
C86B8DCF858A07401A21FA55898F22A37C1EF532F45CC0D489DCC3BF3B94F2D2
581157AA19E8313C394FB207A9A1EA0A223F2DE87B18FF79C9A75831D79F4689
49222F8435BB4E82CF08528B35E2B767028E5A89AE5A99CBD7A7D28586F21A12
CA4BA3F9F4438BC279FE5022F40857737A9D9E9120260D7018555CAA6527AF23
890E92B22E49DF47C1BD2474EFAB20A9AFF79E9ABD759A53D94A81CD251215EE
9EF10A4C2CFCC2631362CB9864DC104668A17F66A909F163C090F1448F0B7392
73EB971754F5070949733B9747B433E2FCC157CB7BD6E694597450A894CCEA32
2707DB0FFFE16827743D7098014073B9BFDD186438403D80CD926AE484354254
9A392AD3F1D538AD9333DDB7A3A68D903C8024AFBF5715190F19AD59E58A3DC6
C11BECBA1C526798090FDD36C4FA216412CB73F56012C4969ED577B15AC870EC
D624DB347415B63636DBEA23B6B98A240E8D45ABF1D2C6D044F07491A87A8ABF
EC6AF396A2448C0755E7C88C01882B44F82E36FB7F17FB5277F5B430BE8C9FA3
49E982E8F8195862CDA1199996F3166B767F10A685C955179D70A03176E9CE23
458AB6B9CD7C85E4B5C9C16174FB821465D5F909A0BD93AB68C27AF2EEB213FE
50CC86CD9125B600CA58071B5C19A83FD733563E60A65B3D519A2CE0B3C4D56C
086DE21052CEFF9CE95272299B4EDEBD5D967215662F8B2A1BB1CE8D686A4B16
E2EBDF54A490D0AAE226921113ABF33C4CCA9D9DE9D9BC30379DEE25BAD4E6C5
5F0C97C48B2EBDADD7EE3C08C18AA829BBA6F1A17BA307755C99920A49DF55BC
14E2C98686071FDDBAD9F9C8424599AD7D2AAFCD7B56F217A1CBE03CF3C20E52
BB3E544293A60DDE05F51F680661684E27432F86929BB31960DD93F10862B399
07CAA10FB9234EE0392E4964F41AF0AC671B10C7C0E1DA55260307E6F0E2F57A
C34BC186F857B6142554B847547E6C1C077EF5360BC18F1FF1E8A9A7C5706873
4224BF5790C1A80E20560E4194AE737EE455A900D7B521D77E86909AAC8B0AB8
A5AC64CD89CA8474769185F3A57AB253E5AF0A0D8B793B3C7B78F63E26857CCC
3DE7BBE3B2581196869FC9F79F787259B321F5DB9014E189C5EBDCA1B5C12859
692383B90C6A7974B74AE3B08C25353EB340A82B8FE964E7AC20431FEE6535F6
AB3370E7C1D7D400A20E89354C1120F3D16F9AD8CE0AD42811339C1EC0002986
E937EB592B872C3DEA7B094734D8C06108AD0EA7EB4FA5C9010F658E6140050A
1ECFA6BF057DCEB9CFF4B92907160C224B96CB0BE3B4E75E874BC27FE00BAE0B
9CDFF2255D079CC3FE07FCBE090F31C7839F4289710A8E8CB82E686B54447F91
C72C02E514EDE0463D0DD757913E75FBB1927EC0F2B2F02339FFD4C0A7AB5AB0
82164155C5176B89C6E0731867F8F1A5B59E04B9952CA9863C24A756173D4311
8EBC14D10CA7790A1DD16FE7E96CD3493D4090822E41F9B2292EE2DE4CCD2F93
93504659B4F8591F2FA712D882BF233FA968AA24463F48DA645E2C38DBCF1F38
9FB81E94667455E996DFF0859D258B8162BCB553CF5E5AF0A1A5BBE1D5A5712E
F045A490D6CE5439EEBF5CBFE3321D37EC4C89600175D7404FE29C96FB83675A
06F71FC7B6A59C6B02581541D2FD25E57B79E298A1BAAD811CB68A7A2F9634A8
32909C33CB512980E82EC666D2C74A31B5AB997271E7FE103C5AD546D0DC2098
C3DFA4B42465BFCB949AE41F2982D9DE0751F8652B6A3140490FC40C7A92C0A2
7686511D41EAE6A8EBFEA7F0DE4E55802A4405A816531C9ACD183039B1A783A8
EF4513BBC3CEB745D03DBCA0A4ACA89DE690D779DA2FECA1375B6EB211E14A4D
B37E91909A9F0CE3078658BD8A57652BA6398A947788EF69628519A3D34DED5B
1402DC0C955609930C68B29015CD1F7BA6C7738F911F180BE8EAA845E628B4B9
D11B46F6B9D6380DB3ED024385BAE4C9F7A569116F000D3A6C5A65E489E300A2
54DF23C3C50CB8157EB1A9A9CDD27AC3CAE78A22EC1F88EAF61306D1F0F1CDFA
28DF416FDC69BD527883CCFF6564CB932EEF9A6EFFF5C5B05E9328E5AFCB3CAF
75A349DCEF6A6F1077DA9C8CE7FA59B9313A44859F36F9326672D71559B868A3
9DF3B0F68961AC7C0716857F0B00966D847C4B96CA762D0D5E7C6D77E1FB8DA1
D1620D4C25B412C1DC1F86B1F1E2600F87979C01FB50BDAE951E8066F9CB2643
35E3CC1AC53D4F4FB4E690F6C76C646B25355FDBB2FCF7AF5309BEA217038C27
C315163C90E1E77BD36EE6586D8E3AE9ADC54300B887F5A12144FDDCF9BF8D2D
FE6A22E95EB604A069E78A598CF518AD4526A45D74BADC8DEA6E93DDDD81F613
60D989F6D756BC4A4F86E26AA85751420F14C1972391F68C5E127A0F59961141
B98A8F2F6D8DE17E9E6EF0F9A28AFD68074F346C3CEE266ABBDDCF0C8B861CD1
94CADA9096259FF2AA900F29A811B41CD1E91662C442DFAFF46DB7C16BA07940
567D0E2A420C43EF976DF050CD4D062E2ED7AB9E9EBB4EC033492BFBA2863847
0C9A5F2A3B0E51DD7261C4EA03937D72E64823CA18D07B7869DE624930189523
1DB3FB5DF1231376BDA559856C42B5A53F19CAE9366FE6622EAA46ECFB8FD20C
2AE343D8672C56A33618D9EDF14DE549D47E1B6406D28CA942919F2F54E45946
70FEF2ACE03C10CA6703DFEB581A3014CD86178A60B7C18DF339FC325EFCAEB9
26839F02EA45BB153D757C9D1DB9BCC15DFE9191EB740744CCCDD0E443399500
558284B42600159D70A7060D7A33
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600 (CS444_Writeup3.dvi)
@start /Fa 148[59 5[51 13[116 31[56 4[56 56 2[31 46[{}7
99.6264 /CMBX12 rf /Fb 134[71 1[97 71 75 52 53 55 1[75
67 75 112 37 71 1[37 75 67 41 61 75 60 75 65 9[139 102
3[100 4[128 4[105 3[103 97 1[102 9[67 67 67 67 67 67
67 49[{}37 119.552 /CMBX12 rf /Fc 134[44 44 60 44 46
32 33 33 1[46 42 46 69 23 44 25 23 46 42 25 37 46 37
46 42 9[85 1[62 60 46 61 1[57 65 62 76 52 65 1[30 4[63
60 1[62 9[42 2[42 42 42 42 42 42 23 28 23 2[32 32 23
26[46 12[{}53 83.022 /CMR10 rf /Fd 134[50 50 69 50 53
37 38 39 1[53 48 53 80 27 50 1[27 53 48 29 44 53 42 53
46 9[99 72 3[72 3[75 91 4[75 2[63 73 2[72 9[48 48 48
48 48 48 48 37[56 11[{}40 83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 3) /Subject (CS 444 Writeup 3) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Design plan for RAM Disk device driver) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (What we think the main point of this assignment is) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.3) cvn /Title (How we personally approached the problems) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.4) cvn /Title (How we ensured solution was correct) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (section.5) cvn /Title (What we learned) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.6) cvn /Title (Version control log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.7) cvn /Title (Work log) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.7.1) cvn /Title (Week 1) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsection.7.2) cvn /Title (Week 2) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150
0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150
0 a 0 TeXcolorgray 0 TeXcolorgray 1738 1009 a Fd(W)-8
b(riteup)32 b(3)1707 1227 y(Alex)g(Ho\013er)1544 1327
y(Nehemiah)f(Edw)m(ards)1821 1615 y Fc(CS)d(444)1735
1715 y(Spring)g(2017)1767 2051 y Fd(Abstract)161 2269
y Fc(This)f(third)h(write-up)f(details)h(Alex)g(and)f(Nehemiah's)g(w)n
(ork)g(on)g(Pro)5 b(ject)26 b(3.)37 b(This)27 b(pro)5
b(ject)27 b(is)h(to)f(use)h(a)f(RAM)208 2368 y(Disk)h(device)f(driv)n
(er\(either)g(sbull)g(or)g(sb)r(d\))h(and)g(add)f(encryption)g(to)h(it)
g(using)f(the)h(Lin)n(ux)f(Kernel's)g(p)r(o)r(orly)1501
2468 y(do)r(cumen)n(ted)h(crypto)e(API.)p 0 TeXcolorgray
0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fd(1)77 b(Design)30
b(plan)i(for)g(RAM)f(Disk)h(device)g(driv)m(er)1974 266
y
SDict begin 12 H.L end
 1974 266 a 1974 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1974 266 a 0 TeXcolorgray 1728
w Fd(2)p 0 TeXcolorgray 150 448 a
SDict begin H.S end
 150 448 a Fd(2)77 b(What)32
b(w)m(e)g(think)f(the)h(main)g(p)s(oin)m(t)f(of)h(this)f(assignmen)m(t)
f(is)2439 448 y
SDict begin 12 H.L end
 2439 448 a 2439 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2439 448 a 0 TeXcolorgray
1263 w Fd(2)p 0 TeXcolorgray 150 631 a
SDict begin H.S end
 150 631 a Fd(3)77
b(Ho)m(w)31 b(w)m(e)h(p)s(ersonally)f(approac)m(hed)i(the)f(problems)
2151 631 y
SDict begin 12 H.L end
 2151 631 a 2151 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 2151 631 a 0 TeXcolorgray
1551 w Fd(2)p 0 TeXcolorgray 150 814 a
SDict begin H.S end
 150 814 a Fd(4)77
b(Ho)m(w)31 b(w)m(e)h(ensured)f(solution)g(w)m(as)h(correct)1827
814 y
SDict begin 12 H.L end
 1827 814 a 1827 814 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1827 814 a 0 TeXcolorgray
1875 w Fd(2)p 0 TeXcolorgray 150 996 a
SDict begin H.S end
 150 996 a Fd(5)77
b(What)32 b(w)m(e)g(learned)990 996 y
SDict begin 12 H.L end
 990 996 a 990 996
a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 990 996 a 0 TeXcolorgray 2712 w Fd(2)p 0 TeXcolorgray
150 1179 a
SDict begin H.S end
 150 1179 a Fd(6)77 b(V)-8 b(ersion)31 b(con)m(trol)h(log)
1065 1179 y
SDict begin 12 H.L end
 1065 1179 a 1065 1179 a
SDict begin [ /Subtype /Link /Dest (section.6) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1065 1179 a 0 TeXcolorgray
2637 w Fd(2)p 0 TeXcolorgray 150 1362 a
SDict begin H.S end
 150 1362 a Fd(7)77
b(W)-8 b(ork)32 b(log)658 1362 y
SDict begin 12 H.L end
 658 1362 a 658 1362
a
SDict begin [ /Subtype /Link /Dest (section.7) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 658 1362 a 0 TeXcolorgray 3044 w Fd(2)p 0 TeXcolorgray
275 1461 a
SDict begin H.S end
 275 1461 a Fc(7.1)83 b(W)-7 b(eek)28 b(1)731
1461 y
SDict begin 12 H.L end
 731 1461 a 731 1461 a
SDict begin [ /Subtype /Link /Dest (subsection.7.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1461 a 0 TeXcolorgray
21 w Fc(.)41 b(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f
(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)
h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(2)p 0 TeXcolorgray 0 TeXcolorgray 275 1561 a
SDict begin H.S end
 275
1561 a Fc(7.2)83 b(W)-7 b(eek)28 b(2)731 1561 y
SDict begin 12 H.L end
 731 1561
a 731 1561 a
SDict begin [ /Subtype /Link /Dest (subsection.7.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 731 1561 a 0 TeXcolorgray 21 w Fc(.)41 b(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(3)p 0 TeXcolorgray
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(1)135 b(Design)45 b(plan)g(for)h(RAM)
e(Disk)h(device)h(driv)l(er)150 265 y Fc(W)-7 b(e)28
b(plan)f(to)h(use)f(a)g(RAM)h(Disk)f(device)h(driv)n(er\(either)e
(sbull)i(or)e(sb)r(d\))i(for)f(the)h(Lin)n(ux)f(Kernel)g(whic)n(h)g
(allo)r(cates)150 364 y(a)k(c)n(h)n(unk)g(of)g(memory)g(and)g(presen)n
(ts)f(it)i(as)f(a)f(blo)r(c)n(k)h(device.)48 b(This)31
b(will)h(b)r(e)g(dev)n(elop)r(ed)e(in)i(the)g(driv)n(ers/blo)r(c)n(k)
150 464 y(directory)-7 b(.)34 b(Using)24 b(Lin)n(ux)g(Kernel's)e
(crypto)i(API,)f(w)n(e)h(will)g(add)f(the)i(encryption)e(to)h(our)f
(blo)r(c)n(k)g(device)h(that)g(will)150 564 y(allo)n(w)i(the)i(device)g
(driv)n(er)e(to)i(encrypt)f(and)g(decrypt)h(data)f(as)g(it)h(reads)e
(and)i(writes)f(it.)150 705 y
SDict begin H.S end
 150 705 a 150 705 a
SDict begin 12 H.A end
 150
705 a 150 705 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 705 a 133 x Fb(2)135 b(What)45 b(w)l(e)h(think)e
(the)i(main)f(p)t(oin)l(t)g(of)g(this)h(assignmen)l(t)g(is)150
1020 y Fc(W)-7 b(e)24 b(think)g(that)g(the)g(main)f(p)r(oin)n(t)h(of)g
(this)f(assignmen)n(t)g(is)g(to)h(w)n(ork)e(with)i(a)f(p)r(o)r(orly)g
(do)r(cumen)n(ted)h(API,)f(whic)n(h)h(in)150 1120 y(this)k(case)g(it's)
g(the)g(Lin)n(ux)g(Kernel's)f(crypto)g(API.)h(This)g(though)n(t)g(is)g
(supp)r(orted)g(b)n(y)g(the)g(fact)g(that)h(Kevin)e(had)150
1219 y(stated)g(in)h(class)e(that)i(this)f(w)n(as)g(the)g(p)r(oin)n(t)h
(of)f(ha)n(ving)f(us)h(do)g(the)h(assignmen)n(t.)36 b(In)27
b(addition,)h(this)f(assignmen)n(t)150 1319 y(will)h(mak)n(e)f(us)g
(familiar)g(with)h(blo)r(c)n(k)f(devices)150 1444 y
SDict begin H.S end
 150
1444 a 150 1444 a
SDict begin 12 H.A end
 150 1444 a 150 1444 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 1444 a 150
x Fb(3)135 b(Ho)l(w)45 b(w)l(e)h(p)t(ersonally)g(approac)l(hed)f(the)g
(problems)150 1775 y Fc(T)-7 b(o)27 b(b)r(egin,)g(w)n(e)g(b)r(egan)g
(doing)f(some)h(researc)n(h)e(on)i(ho)n(w)f(w)n(e)h(could)g(implemen)n
(t)h(a)f(RAM)g(Disk)h(device)f(driv)n(er)f(for)150 1875
y(the)k(Lin)n(ux)g(Kernel.)42 b(W)-7 b(e)30 b(to)r(ok)g(lo)r(ok)f(at)g
(b)r(oth)h(sb)r(d)g(and)g(sbull)g(implemen)n(tations)g(and)f
(ultimately)h(decided)g(to)150 1975 y(go)23 b(with)h(sb)r(d.)36
b(After)24 b(this)g(w)n(e)f(lo)r(ok)n(ed)g(in)n(to)g(the)h(Lin)n(ux)f
(Kernel's)g(crypto)g(API)g(to)h(add)f(encryption)g(to)h(the)g(blo)r(c)n
(k)150 2074 y(device)30 b(as)f(data)g(is)h(read)e(and)i(written.)44
b(Once)29 b(w)n(e)g(w)n(ere)g(\014nished)h(with)g(this,)h(w)n(e)e(lo)r
(ok)n(ed)g(in)n(to)h(ho)n(w)f(it)h(needed)150 2174 y(to)d(b)r(e)h(in)n
(tegrated)f(in)n(to)g(the)h(Lin)n(ux)g(k)n(ernel.)150
2315 y
SDict begin H.S end
 150 2315 a 150 2315 a
SDict begin 12 H.A end
 150 2315 a 150 2315 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150
2315 a 133 x Fb(4)135 b(Ho)l(w)45 b(w)l(e)h(ensured)f(solution)h(w)l
(as)f(correct)150 2630 y Fc(T)-7 b(o)25 b(v)n(erify)f(that)i(are)e
(solution)h(w)n(as)f(correct)g(w)n(e)g(used)h(mkfs.ext2)g(to)g(create)g
(a)g(ext2/ext3)e(\014le)j(system)f(on)f(a)h(disk)150
2730 y(partition.)56 b(Using)34 b(this)g(w)n(e)g(w)n(ere)f(able)h(to)g
(c)n(hec)n(k)f(that)h(are)f(blo)r(c)n(k)h(device)g(w)n(as)f(p)r
(erforming)g(the)i(encryption)150 2830 y(correctly)-7
b(.)150 2971 y
SDict begin H.S end
 150 2971 a 150 2971 a
SDict begin 12 H.A end
 150 2971 a 150 2971
a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150 2971 a 133 x Fb(5)135 b(What)45 b(w)l(e)h(learned)150
3286 y Fc(W)-7 b(e)37 b(learned)f(a)g(bit)i(ab)r(out)e(ho)n(w)h(blo)r
(c)n(k)f(devices)g(w)n(ork)f(and)i(ho)n(w)f(w)n(e)g(could)h(add)g(a)f
(form)g(of)h(encryption)f(to)150 3386 y(it.)59 b(This)34
b(exp)r(erience)h(has)f(help)r(ed)h(us)g(\014gure)f(out)h(ho)n(w)f(w)n
(e)g(should)h(approac)n(h)d(w)n(orking)h(with)j(other)e(p)r(o)r(orly)
150 3485 y(do)r(cumen)n(t)d(API's)g(in)g(the)h(future.)47
b(W)-7 b(e)31 b(also)f(learned)h(ho)n(w)f(to)h(in)n(tegrate)f(a)g(blo)r
(c)n(k)h(device)g(to)g(b)r(e)g(used)g(b)n(y)g(the)150
3585 y(Lin)n(ux)c(Kernel.)150 3710 y
SDict begin H.S end
 150 3710 a 150 3710
a
SDict begin 12 H.A end
 150 3710 a 150 3710 a
SDict begin [ /View [/XYZ H.V] /Dest (section.6) cvn H.B /DEST pdfmark end
 150 3710 a 149 x Fb(6)135 b(V)-11
b(ersion)45 b(con)l(trol)g(log)150 3965 y
SDict begin H.S end
 150 3965 a
150 3965 a
SDict begin 12 H.A end
 150 3965 a 150 3965 a
SDict begin [ /View [/XYZ H.V] /Dest (section.7) cvn H.B /DEST pdfmark end
 150 3965 a 126 x Fb(7)135
b(W)-11 b(ork)44 b(log)150 4196 y
SDict begin H.S end
 150 4196 a 150 4196
a
SDict begin 12 H.A end
 150 4196 a 150 4196 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.1) cvn H.B /DEST pdfmark end
 150 4196 a 93 x Fa(7.1)112 b(W)-9
b(eek)38 b(1)150 4443 y Fc(Alex)27 b(and)g(Nehemiah)h(b)r(egan)e(b)n(y)
h(doing)g(some)f(researc)n(h)f(on)i(ho)n(w)g(to)g(implemen)n(t)h(a)e
(RAM)i(Disk)f(device)g(driv)n(er)150 4542 y(for)i(the)g(Lin)n(ux)g
(Kernel.)41 b(W)-7 b(e)29 b(to)r(ok)g(at)g(lo)r(ok)f(at)h(sb)r(d)h(and)
f(sbull)g(implemen)n(tations)g(and)g(decided)h(w)n(e)e(w)n(ould)h(go)
150 4642 y(with)f(sb)r(d.)p 0 TeXcolorgray 1929 5349
a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.7.2) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fa(7.2)112 b(W)-9 b(eek)38
b(2)150 236 y Fc(Alex)26 b(added)h(encryption)f(to)g(sb)r(d.)37
b(W)-7 b(e)26 b(b)r(oth)h(then)g(tried)f(to)h(w)n(ork)e(out)h(ho)n(w)g
(to)g(in)n(tegrate)f(our)h(mo)r(di\014ed)h(blo)r(c)n(k)150
336 y(device)k(in)n(to)f(the)i(Lin)n(ux)e(Kernel)g(on)h(the)g(os-class)
e(serv)n(er.)45 b(Once)31 b(w)n(e)f(got)h(this)g(\014gured)f(out)h(w)n
(e)g(made)f(sure)h(it)150 436 y(w)n(as)c(correct)f(b)n(y)h(using)g(the)
h(mkfs.ext2)g(to)r(ol.)p 0 TeXcolorgray 1929 5349 a(3)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
