%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_FinalPaper_AlexHoffer.dvi
%%CreationDate: Thu Jun  1 00:58:26 2017
%%Pages: 5
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_FinalPaper_AlexHoffer.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.06.01:0058
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /colon put
dup 65 /A put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 78 /N put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 88 /X put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C4DD885310A706B320AB25C8D742C6F29953254FA54DAAEE60ED477877D19BC
D28E9AB576B0EA088171FD000B60D73B3C57F754BC07EBC9BF751B7D2B32459D
993861B7C4B0D98C422A11BECEF76F4EFC0ECAEE89723E6CED53E3678D733363
2DF068AEF0FE7DFB57393BDAA439A6A4C396F86032A98009EAE1247B7DE83B3B
E46DF2898598FF5E6CA6953127432A967E4FD41CDD60D6E413059A58FA556EF3
309178B57C16A763CFC9BEEC276944BDEA255789EF4E1ECDE1EA43EEDB955513
F42EDDCF39AE522A1DC2DC523F046EEC4CCAE25792B702C288732F5B13B5CCE7
E8B6A1A1DB86B1EA38883E481BEAB54023EDD9BB94E7780DEEA577ADAA169E66
AB7D8607B409619E79F242CF52E618AC0DAE43317C507CDB27EA8A1472D4E8D9
17E62C98DFB049C78AD15560CE44A39581BD6B555165091C5D41071212A9D2E3
05965AA02B8A67AEB04D915DADC1B84A531A1D60569ECC2EEFB7B6B0263B8B5C
E6EE63CED9FA74FC7C03610F6394D64BAE1BF3B50FB613A39C300CA5F4F16CAE
F9B9F4DACFC69B69AF30E4FE9E41A6DB0FC987A13A3AF3F99127E5A44E7FE781
399BF303B773BC0096427B18DFD0DEACAE196EB3927A7EEAE0F6DE8434EF0873
20F134579D9E18D1E0A10DA116F544FD2B6C6917FD8B2BA682D2B27DA99555ED
7C47B44193C623C871703226039460A62C80D6FF14121F46F03F0062E0E83ECD
C37CBF62603F7C3034C291180559600A92F767A699A0F713564550C8279F3A0A
1465E7F0A96AEEAADB1742E96B15A4E525ABE6B90A2BCF6D39DFC0252E14CB95
13619552DB5384BF0375D2EDAA8F7CDC9ED19BB9F7C2A48BC40D0E167FA9B8EA
03645EC37C36457F6762C63E037CECE3810E1FF3B5652829BA2CB3A5BEC00EFC
9347055443F53F1AB4C8E12DD6F832F1902206138F026F2DB2AB13E11E822D11
F275CC661EE34B2221BD94206A44AA86915382F13A5AB644FFA1287E0E96744F
AB1005243363224216F3E49517FC2A6E022B8A192F248110925F3ACD1192C83B
8F81EBDDC57EC70B0AC416B04C281C717931F04A5C2678E4B771DF550E7A6CCC
93655D29B22D2BFB1F95109C6C4F8349A09686764C7915CD5B39B431F5B38437
D5326D91E2C465186F2B19C4119B5A3427958C9F2C368E1083AD561C83F404CF
833DD1F4AA6E80C0B833313910D10BCFF854B923ED15E8692092AB342226F1E9
0F7463499C1D0A14ACF344DE4E6AB007C1B7543E15B3579D8EE480E6DDC47B89
6DCB815D2B49E107E9031042D4DC173D267579ACE158825B1000B8C8C3F66A30
DB8D79D3AC0C3CEF9FD9C3E02AD742F21C63D30C719A74391B84D12F804F4F1C
F3296870C332F123446159E9034884F395DAED0643F776229C43EA5EDF7380AE
0B0A0842E3CFCF5E56171DD7B8A4D7AF45135E4ECF4265CC70E181A8E9C0FF26
4CC76ED1BCE5E948930D013EDB825FDA7D42896E496F1329B712392D1C8EF528
AFD6294348B8C1F467CA6206D42962623563623D2830026628AEBCE8950AE30E
E7AC9B05232FE7727E7EB676D171C87D902BCB95AEFC37216820EF6B4A4EAA09
01C7FB494FC87AAAF1AB49D636ADBF4CE74C6F3F0FA53E3946CBBCE06F86E2FF
7540CAE69745E11F4068C92B01F95E9A237A9AEF2D4CB80D6BCA47D93C239154
E3B9D61F200A5CF5FB6109A6CB65F64E62186A29AF0A70087EF70AC7DE383BAB
3A55B740FE43CC67E19FF9555C833D8AB4F91AF54FC0038FBC5B8AD3AACFD1C3
142E2E556FE69C00FE05DDEB554622750CA6E2E220E3019A62EEC761A9DD15A9
4D0D3424AF97ED907BBCA0C41E1CF98EDB99959CB3C1EC6F46B3CA5B09281BEF
AAC21BC5BB6E9B5C31D2F79EDF1F48A79B8C1A1B97E4FDDCABE76905D4723F8E
72CCBE1ABFE11161B1CF8D09DAC37180AB05AEA2516D0BFA74797C2A60241EEA
B0067D529F7665A925A930B8DA007754423BD78ADBA12C298D20DBA2220CF192
5EFA391FC1CBBDD01BFCFE293A63ACAF201FDDC013345A93B09BABEF3762DCFA
25C0F7B89B4533CF8BC15FC00660260B600180E3543804F13DC3A126871E6036
6A3BADBF5DDA2823A253F39BE78E6DA1231F29112C2964190568D08FD910AF35
FAE4584C04FCEA3E7949BAA963C9DD5FA8213808F531EDD85B8F068AD61E9709
AAAF77B0BC3CF22A6D21FD113C9259AC1D3312192F5B94A6A88B1FBB2A45AEE0
85AB170A1558475B67DBE5C816A60D15CF60CD1011EB195E547C9075302FC260
480FB2B3A6DB6D2BB897C4873C8A8968A8084BBF0D6D9ED2D4725DF0D414C87E
9F56DCF9B9953CBB65231604B002CCE7AB4B2743ACC210295E592529E9CFE2E9
520B1C1B8361FAF9A2D34BA9BA1BF1EDB248FC15FE7D8645D67E9A635EF4F0BE
D2AF936CD50CC1FA209433192C904884E2D6B13192C4EC5B184A7E6FBD559623
E670B5306E9D2E4F86BB4EAE11F70494C4893F83255429CBD47FBB0D2FAD1F78
68152D301F7035D204DD6F5FBE066EAEB84FE1805867CF8991F16B918EE9901A
7E6E84C261230905EFC16ECBC8C440FA54DB9D34A81FBCCFCD31F62D718B8BAC
99BCE70847F3884381A1868D1DB27BE228B0199FF88D3DF9F49E722853AE7D61
C25FA3BCBAF43CE811F4B358C8E48F3BF1FD3777A07294FAA48BEF76163F4E18
7C906AEF10B2729229E9907BB68850C0DBB2533B2BAE4BE34293BF8D13E52881
01C2F64AB8986F068427C1CE4E1D776D5D36BCED9239B2D0DF2918D17742C8C1
DE79B87B0985F5858875884EEB6A9285E92A3CBCDBB8E336871684566627C2C4
590CAF830CEDEA0FCE61035BD4D847CB775ABB10A4F77644B7E02524A58FFF19
93D685E7BFE303D5A00BA2FE4CBFC702D417F9F4861D8562E043E6A84F6CED86
3C20BB119C7C20167D5EA94FA6181E99E35B9B1482F2277F46DDDBCCC5B978FE
2C37BEE042F808A5584E61AF49177094E8257A9E7276BFFE4C86B5AD2E357C0D
3A96701893E9DD5CBF7017EBCE8CD32366014E9835AD3B90304962BD020EE480
E3F100118B3437F61FA51C1D45C90EA0D7C96571FF736EF6A19EFE5DBC5068AF
DDF6A9A28D810897189E34C236A17FCA6AC89A93732EB148A6F1BA454FC58C89
6CEE5347CF21A1E96F8DFFA13AD453B66740F7859D4F0103E59F3B6ECD9A7C91
3EE76B48AD7BC93FCCBE125E15C5A2B3FE4A22BE805A3346637C04AFE62339E4
6AA359F48D9DF3CB1A02F16282AC85F839394196D6E8E716C044604FEFFD180A
CFB5986E0C700B2C1726F8C9F87D1A0A95EB70F6107F63CB3865C49785506575
BDB6F956EBAA225A546466888079E71A522DA2871FF5C3567F1C06278CADE894
4AF9D3C5318D41737C57E22A9BA699CAAEF1608D4CB179FED1BAAFA5FBDA0F38
442ACB53D1D17CBDDF4767042C7768790FE0BD81F4D1668BC162367FE28BB4C7
EC27CC8F804CA5EA10E1152F6F17657FBC92E0F4B2034B169D2EC1EBCB74B599
0B1C92C964A3140BCE0C8818F7EB9A192AF9EC4C232CB46E9A33B035CCF52B65
37F9B077AB3F37A604F42D79F64972BBD18745C83B60AEA463EC1B6FCCB2B3BC
7212F3F2CBD5C575C5762FDFAADDE7E89722743F0ACD2CC30E63DDA9CA6C076C
4401EA8F1354F4B9249FEB355C149B478D82025A576195B624E0D53DB1C3B1B0
377090A2171630C33F4CD3B67096BF1338E5BDB4F269D7F127DE2EA8AE7E74F8
AD673576197D1F0806D3D6F12C803E244CA00EDF4B7BC11B7F35269914708D9A
C50D01596FFCCF8AFAE14AA87E3C4AC39BB0BDCB5417027EEBA8BC87DB51BB03
0F4D35EDF0AD9F6BD21143610D1CE8F0DFD9FF604BAC788E26E59D8D5CB5B7DD
F6890ADB6C572467CD45E707DC138DD41379DAD9B6DC47590012B1D54DBAD08B
AE5C289956A9C2DC80A38B3BB571EC2DB4B4DA0D9DF5EFF80D34AC0A96C38CB5
5FE31288F73546D12B3AB781D3B8263BB74BC1FC44CEE95C001CC5F29599269C
8CA6EAB726F7FBB5A2F28651D424F111586DAC4418DDA36A3799AEDC4A250091
0F291CB64B4235596677B9AF40707BD02AA18117ADD2B0B501A45E7FE1F54E07
208EEE43D2C1D033AA577C9FD634748AF42BFB2250C48A02C8AAAE161DF8F5EA
9BB420245CF57386C96569EE3C8B8E66EF4CD59C386BE11303AFDCB36AAA9787
523E9A5E1DF580FA7A6944CA1EC339FED73CC5E51ABA66BFF9567BD76B6A84BE
E30F45CCA171060D60835580CEE9A2B8AFBD4D14182CCF6795367E190369E8C4
1967C9EFECF110F233A5AB7DE7330CBF7C29611711281A6FD557D2FF28B1EB9B
E69597F98323939C51B2BA3A0E9198775782DF3495DB9C4AA670EE0588B98529
58EBC41806ED1E26D49D3CCE1BFCAE354EE4F962B6B1B24431A6B49220E11B0A
8A826A2FD86CE7760E423010A7E839AFEA651ED0BD83802B3D2C86DA6B08AA3A
D639BDF8E85F806E7E7F71152BB439AB3A328EDE209450C4BFDA06E997FC8D1E
731693FDD38823744597E4AE859D936DE283120C91FDE2613A1A20A47BA08E06
48DE8F26750E6F8A969E8C4162897968C6BE262E9E827CA95708F1D87A0D7BDD
006E3D13DF109586C97BEFAA581B3D9BAECA7354828A0757BBBA5FF470D20B42
957148CBA0FE5D3C5B86E08BB321957E441B2C1F4F45066564B4BF3AA60272F3
4D319F5B26AF54B8ED73A840C736FCCCBCAA1C928C08CD54452055E2AC00CF79
118AB540BC21E1238CC3401C1360DA78FDED7A21B825333C71C50CA9D44117D7
06C818225B6CFADE7AA29AADC44F418FC3A4E993BFA8E875B6A6394D78B4951E
C929D379D54EE4DB778021723C9FF5251EF9213BE63A1C859E383125DCA2B3BE
252020BD4496C77C1FFE5399171B27CA74945F38D664994B00415204BCFF7723
F0C3F70901EB126015682A06E94F3F6E476FB09A28EBEB9C0BC5E886554872E6
BFCE5D3D179723B194E1BD47320C95B793A9607F657F6E327FA74C07EEECE5D6
25DF6397D422A407B9320B35BEDF30EC0CEF20B71CF3707EC08820F07EF2DAEF
666CE0595964BC38950AFA45D9FE4D63873AC413ACB7A6768745787A635FF5D6
5307B52DC663644D66E51F6B684A9BB7E4FCDF11DD5D8D2EA109B727CE347CB3
16669E2F34F2F840AF42BB1558402FF02C3F93CD6C673ED5E1232B73FA1393DA
1456065E41E29FA3BBCC9799B28E226FADBBF948D64132D849F0F9014FE0738C
DDA282BF342A542898DF326E62ECBC2F16ED9D1E8FE04B4456B92101D1A77214
E76694F03FE4C1E123A6D5FE9445DFFC59BCA58D19188B78BC7F4DBE07287C11
833030AD6FE0E8780B5E0682044984EDF953521FA413D9A14D32A43153FAC1D4
C3BBF919C0790C39C0D1E2BCE04A389A504F0E2167152F600486EF23EEB60066
83020BB8ADFA5E924309C90CF8554353D8ECB8879AC04A0B8F6DBCA47DC47E56
D2344EDEE0A37CABBDAD3D5DE04BB3D42B03AAEAC74005DC4AA0151F7931CCAF
93C067EBFEFDCDA10E6DABE5D2B104E1372C4AFD337B3EC17CA40FF282688EB7
5D2CF8C2B1391DDF11A9F82489869DA2327B5F4DA1CEFA4E3FA508E96132E1ED
226D49F82329C0B28D0C347A4516FCEC17A8E9591E97A95EA236D7EE7AC6B592
FD290BC0F58EC8A1C2CA260A8FEAD7CBB3F9AABDF03735F57087302AB008D470
79C8258481FD6E706DBED46531A107138D3590DCF521159F6DB0616A69668415
73974F3B90F93624E9B6D4AE0A9A41B8DB890AFCE6C6FCC98508716011A36413
C5202951739D612E1222A964AF6FE7ECA67F0F085B99E53D93476D035DB4AA26
C993EA68D3A51155513A5F49B1DE9A10D006004DF4222E126B70027A8F99F8EA
FEC5C06DC216AA2C4A58C3B3FC63EDF320DF5D06D4C76AB0C57836A58F3FD861
6D1D8183E270AB9A1F449AACDD6025C7B93F58C8E457FA1C5CE39C864BCFF4F3
2C3D0F6CFB08A02158FE9C9703C82CBA064F4AC350302E2EBE785A309D30A294
9BF8E493AEE647EC5DF1A7CA63D6C81630B4A6310EA9212B6BC4D5BBC686F78B
4610028555618F8478155957BEC87CE2FAF7422EAC8C590603C86AF57AD25B02
A369E92147F0C56219BECAD72803A496F8A0E8948540CC6BF26518A13A2A6886
C8A7FF409B2DD9B50F094CFEE36140489391853C210A7F95256DC62A12664511
F503CB0D74B79FBA47108C281D5E4B59D00E4385AB098CB9CEDDFA990A114218
B7335CC5CC35AD326292138C9227C15BB118040D9AE8064E9619F2A0EDDC541A
DF2F8AF15485DAB6462DDB244FBED71A02889A63B8E647D5D88BDE63739F9755
1B96D48F4CADE6C3ADCD645928CFCF82430B3D9443345F3761CAD9A65D14A3CF
5BA717E368BA1E0A1BE3BBAA892787C54FE30456CE639F4D26A1A408BC2C5060
AFF57229187205428F1B2F52A747DEB3E3B6FC7DDE4E57367912A975F8F72E5B
06E18AA74CD27C3AEEA4AB6C8F2E818CF0B08870CED4CF81E81A370B3C5DB12C
6D68F39002F2BD839FE0710CDADAF65C265BD0AD334545B9C2340EA4AA741235
530EDF15AFDCEF1CB72A0FD9B8E5F36A6116DDF13CF4A26DD717C4F4A506C548
B2E529B6D02E5B6D549B8AC510B00C09E2189499E655526CA1D8B7513326709E
D5C7FA169B164F4C4C0196C6FF8CA6CF1EFCEDCD202686A306A081AC943CA584
6F4D8A325D44A7846A45CC916AAE0121A13DA72157B261C6A5C7165433EA91EC
7244B4DC74F9D6AD4F42B2F69FBCDF3E4D9DEB6A2ECEF4B7B24CC3B34836AA8A
385A20A6C08B8C6928E0C038C34897440EC0D2D42161F3675B0CACC385A010FC
90C139B381CBF4CD1A17EA89FA073ED01CF8D42A78D6BDC61B9DC6AFD1D552CF
DB2F9006B050729F2844EBC0507C9817AB31C092C52B4F52D4F0F5B5C15628DB
2100C6C1770ABC1E4FDEF24DB90B01A33DD7F8864FA81381DAAF1B8C096F053C
766D1834BD9FB631476C1F02C9CC58AF1D396BC9A7D3D2BA3B82A1BD47B7B597
DEDEB1095936191D463CEBCE7EBA34AF4EABA1BF04DF00A3066F4C0C588F0AD9
F769B769311CF2B2F175029DCAF2AB838537AC9BDA098963903849132185A573
E87E79655B114D95CB1B934A0613E88EE0439FE24DE4D8157D95C5B044FD54D3
ED46D1B5EC3552399F691CD1E25396269783FD2E809B982FF5F929B5FD143AF2
E3CB9CF91C43BB57B6FA4AD452FC31F2E3FDCC700BF117D5DB64017F617A497B
4CC91D86B0DC417BF8C8D4E845B4A32AA6B49DF1335B86868FD9C849465DA2EA
19A02A9A2FE53A9E62320D1C35C9D42D250BAC0CA177264263C12378CDCEB772
E23CC473BF45F1CD5B0BA4B1B0850363240089AA1C47DA099635C191DF0154E6
03323FFD8F12F5A5D162C395B4D548E2EEB9220FE2C243D54BA6760BF854DF24
40C86846581300E81CC362D489E39F83AEED6A94F4A7458F9080C79DE8C12E62
757BB92516C8168EE95331EB5E060405D3CDBB046B968C76B69E95CA9A86A680
9321402A0C903D8E84419A7DCF51CA2A8BF056C8E707C63B59ABC466F66BD279
ED8DE1E6437AB99FF9E5A4B3BD46D32F8DFDF79E29E920C73BF7B57D1077ADFC
DA3A061ECF479F3BADCE7E92E001D6A90F5BF8585B694BC9650118EA09E978BA
0EC39F92821E1C62A007573CD5F6D38239D71467F56735AE1ACCDBDDD78682CE
13CE10ED7E6A9B591C7BD5E7F3109BB980E43BD2FE7A3A52D571DED2CC5DD3A1
0AB4DEE00C1BFAFAB762930D43D2930C5713FC3B14AC4F4E939E364F0E5EC38A
F8ABF2BDBD981409A058160B88AEDB89EF421267F36DE7A01824424BB8C4240A
D3F632C8CDBED2C5FB5EBC0DCD566BD6AE65F782533BA05F533A583F8E6AE38B
834A3B27722A56FE04F23A14C98218643DED7AD5785E47E655E859C95486E470
749EC7CBE3C5BB3FECDBBF09A6970337D96682FD1EF3A88D2F0D9299B96638F4
2DA7180D4CC02D981F997034FE637FDF5CA8F87D5140E793C34E006B44D5DFEC
2EA6A59404782432AAAB446161D67E2DDC3C9607D2F0CC6C323351F25785D427
A024EA6B08AED0DE887552BB74CC3DE12C3B64365A30B38F39876D2DE4411561
751039B038FB0D6A3C3C629387B67F0C18610B13EE241D41A415C00623941058
9541812AF84DCA49EA3C363B024925C34CC03814E0A2AE9E9C3F97013C728753
7271D46C0E277B7636F326E158BAB5D0B68D8FD5266CC560A6BA7F0763045915
9F53283F3B80930E321709560F6FA84F815BA2918A77A3CB9FDDBFF57F088299
314EAD588D38321744BA913EAD59688A15FA36A745662A90EB50A8C5613EEB58
8285BDDC400AD7B391F13B61CB39674D28EBF5A29F583C2A37AEFAA9769DAE85
BA57ED9A86C97EB7DE9144768636D22AC83A2089327D8119EAFA3E39BD496913
447AC24FB5420F155E778B4BB0A3B3BC0B61342F7941C21BBBBD47DB12FBCAB1
BBB19B23237EEBA6ADE878835029E640AD1B23AD6E421EC26140D21E8E65F9F8
31B6E18F60381E9142FD87BB79AE1A530211766367436D0BE931F3D784B63C55
9355D43B9B26807C05F6710E88636344F20F7D187CE743AF42BCE0142F010C4F
AD4D79720A3FDCA307671DE4E3CA2D171FC2F0AB4BCA7129A160C4B1E209DABC
E73B817A68ED11C7AB1950086FE09D1B8B4EC6BCD24E55A599D3315E1C4979E9
D44AD033793A327B23BFF2C8D1859084DA8E80EFA99C28EF2526827963EA19E4
25E8BB92BCCD550344E858077642798AF8F3CEF1B67B03241826EB5E30E2FD86
576FDB1BE490817EC88BEEBF88DD3865F90078C98BAD90354AB165CC355B5A09
9D19373EA9AEB39DB5F072D6436BAD68903E9986DCD1F232C564553B4354B47E
B905650D929C9FA2AACBA91B72A021ED0CD4FC99AFEF00FA3B9FB3AA58C1223F
DCAD9372C5D1E518F895EABA18FBBF800D57621DD79D3390552314A2B1CAAEF3
D5547D24CCF1B69AE2BB221A4DA37ACED9BFE8E96E7FA49405BCC073F3CB2D57
E710957BD2091693615941C1FA3F6E4F0DE4CB481604214767C1A0CEAC62AAAF
DE24E70ABE91DEC9A2A0FDBF3D5119074D2ABD3A086610D56DFBAB3D098E1594
CE020EDA20F4A925E134C865DA968CF09A7F863D62E86ABF736DD40316ABB0E5
017453BE7F223B3FE1E828FBF28FFDF74977D6FE3BE45D911BE25C1F5C662353
5592B339D6965E10DDF26B7ABCA5DAD44D1E555823ADBEC4177EFF8C5F2E481E
C53E94AB2E9C82F360B12742B8DE520B6A376644AFB0C3B3CD13E43BCB7957FE
C2E0AF6BB1F60D31480563914F8E44A54E171A53BD8A50A38A86D44C6D52BAA5
56AE165160EE7DBDF2F6A25165E4B24819A459DDB1FA9DBD1ACB08817FF46F41
D3CC2E89132D3B56AB05BF05646FEC11849CEAFAF3C8D35753513A7B8F25F2D7
AA17E3A95FAE6E5F779847BC5ADE310F40FE6B888F383F6E0C7156E0BA4F05EE
83D66A031352B72FF0E840016A5180EAD5E3A9473C9C55FB232AFAA00BF842D7
CF0CD0AB6A63524E4DC7767AA4F38AE469FC88C4FCA177D82E064EA0216729E3
0B3D51D792286412F5FD0133B4EBA11CF7E9D703C2635FFCBDD1DA113272262E
D45A77E11D51049A858B6B55DDD471754B6176CB57F1619B6008A2A4EBD7462B
0062013BE986C1E11B1503BCB61E90F3BF434D3A29DE648D84467554E578F70D
31AB80841E41DE71F37965BD4624347C6DF69833AF496E42D18960623FC33EBB
394B014E3E6BE7CA758E3D774E89896E846BC56E60F4B0C462AA95283AE11E11
1D50A16BED5A8AFCF9A4821B522084384E993485F9470F1E9208649613CA466F
CDCF6048D0A83C692AE9096A421CCEF2035901A59AD60BEA8542FED173FFBD3C
0E1449F009CED41FF14BB283096BD223FFE300C4E23CA5C10864DB0B1DF11F66
3CAE41D3B0C00B0BE2FDEE249CC0E08FFB20E1C9FA79D630740CD84AE650A856
CC203CCC84C8F96EFD6EAA0B02633AA00121FB70845680D3272995F550EC8FC0
44C10051F86096C7559D691C4999A4E775C94A297130E4DC6285F9AD95768983
A1AB0DE35E434F6F8F51B76DE7A9E489ECFA5EC4E0AA009B09A4C2E0A03299C6
05FF92A384C22D00992286145ED0B19071E0A38181A0343FC211CB6546B98F8A
2301FED706F65AB1ED2AF61BE3277A82AA5C049ED00EF1F39D1C8BEE484577F9
AFC27D7A346BDE7B496F9F0F545E5B397122F4651627BFC153B983C6FEAB8564
BF6E800AC8B5FD992ABB3D905C326704
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 67 /C put
dup 70 /F put
dup 73 /I put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 82 /R put
dup 84 /T put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 121 /y put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
35FA24D98A22B25EA5D79874E63DEB7DA3B1671C9F433449694ED1EA51FC6D01
DD1573492A165F183D7A1FDEB3A10706CDC511A92DECFA9B8540EAED3B310EF6
B9EE5BE37A33260BFB7F14F5E8A948CA30EF94340C1191ABBD3A637C6FA75E38
07FB72AAE473AFB919BC6DD793D000EE1C65E7FF7110BFAC4B485BF5672C1ADA
A0DCE484B4B726C6F0341CFC4C4AEF76AF45BDC9BBE340FEAB087E35820C2DF0
6D456AC9DF9F3DD0CAD4810A7C5BB710862775C6008CFDE279C2D6BD9106B4DB
2D11442A6123178F2C34BD331EA6AD22BA29D33EC4D05455266B7C97350BFBD0
26A675E7CAB759529A015FEF5B602F966128C28341CC1FE0DCE8EBC77D46B0E0
9BCB5A7AD599AD476D602EF70DDC6004708FE53CA31C79D955DB26E3AB37800A
C0D8F316B244547EEC60995486C4C112DCB0F58B0C1AEEF8EA491899C9EF5E87
EF2403BECA94DE5D063C4067F61CE33B6384B6746936A2861976BE1958C72751
EEE8D41331960F133390E66CB2980EBA57E229F45A75F3810BE4F9C7E943A434
D428B75B0597D84CB5967ECD6F94A4EC2FFFA06010431E505EF93C389FEF9958
53DC38BAAE34B4476DBC6B81225DA89831F620F59EA85AEDCF647F7D8CCA35C7
27DFCCCFF0CE7C6A04D4D649A8595299001146F4A2C200C1F3B5B4E532A27C68
4DC562F2897E34BC0910ADA2D7B48736B686161A06277228E914EDE5A52C48E4
22FB53D7F8258ACF9A238D4C0935C78D64B3B307607E1A8C2FAA1C3063EDD969
6D1DC4D831A8647D91D79C845C96C1633DDB963ACDBA180E1D60B918D05D0F5D
259BF65B8478B8DD55CE0B974348543870D2D744548B8016ED1C500E42460B43
73328AB6D636C04D87E2473467618041E451003D7EE671E72E07C69576F6D9F5
6CCC4A2D3FAFED146BA0DCC1A10CCBDCB55A1FBD24FF1A19C473E857D16A4E83
FDCAB4BDFE668C794CBB1EB696DBB44B1C925E92494193C83AC3521EBE14F02F
61FB3B9134F3C754F3582483CF97620BB40BF2937B7D1F985F0B1C3C907C8EAF
84569FF74443DC8D84C75EF5142A2D3F9C4AC42D1FE36AF817279DA1F7BA2EEB
34C1BC4F46EEBBE6BE268C3E7F2286DC2FAA2AE0441367B37D76A07BC16B19D8
2E20CAA9DD9DBE7C3EFA0B83F71A4DF4034DE377860A0DC22FBE539C57E98557
B59371826D29F0BF3C178C378FAB2479A5CF18C1F442954CA77E5588737300FC
AA425B15C1076EF8A6B50C6216F7FD859ADDB9F73C14BDCB68E03B560E2F9DED
B5E3D74EBA94CCA5E8471BA5189401C606A2D651D6A147450E4621B98E70EEEA
D9401121A46C433EBCCC42B050B0B162A7E02650F1FE2D9BCBD6DB52890E283C
E50F30FBFBAAA91FADB44661D02594F15E057490A877CD1C51ABC7DFA63DC556
727DBE99F2C0D2468D03D1FF69B299CA393AF77817FC39F265C8CF98EF99D129
FB15889DF9C44CBDEE25CFF2D93B690227AB27D280D1626C7B22D2FBF850905A
7A6C8B2F01DE39BC59C94AFDBD9D1711B72773A7C6D0E289C993A24BA4AB72BC
7E3473E734F508C5613F607C34A1C2D9B16517F887E3471D9B6B198BE8581846
504DD3E76E8491BEE1F2408FD6F65E7C05AEDF7428B148EA8460597DDE244623
BAFABD9427FC3E69CA9D9CA91E9C2E2B1DF96EF3FABC1E358EC875DB25CC30B4
DB84285CE20DC49C1DBC018AAC4B0F002C5747CCD8598C024017BB1045A0449A
DDF7E1F13CB288A57478570429929AE2F82AF66AD7E50C2F42EE408AD11793D4
1847A0165CC72EB84F252AE572B35DC49EBC3079FD573C167AF24F1D4BF94076
7649CB2A0C12A9B74038754007AD36D0011C37C4396F6FAD06D39F86A5924F0E
C9F7EC9E7AA01CFEAE1AC452EE82682B31E8D82A3F8C51FD5520FA1875D3B4C9
D994625B393187709464E140CD3DE7C184A7C8B6B63EFB9CB5E25F38A2C2E402
9B16126B26D4FD6AC8DACA4E6CA5EE6B34EA77793CF53980E34F284D16B942EA
E3F8AC66C00B641F249F11B4091E0AC026CD178F4D80D543C34D0E7043364226
94FCC9C861037F9642D4F66D95CDC086309001AC2B1CBF1473D25635444A203D
B6A4C875BC65C5E175A668B9420F059B597E05F600925313E143A18234F7CBA8
EFB1101AAF35A2C562C5B4B1C1E7D54B283418CEFA4134EA7A365218E4C6B3E9
BA3189C49D822F951CC30DECA1BB7CFF32233DF5E60C3C486CF29F79906C3C2A
B6D41AAA5ACA7A7E509AA92AFAFB7D14AA387271E362F55B1A29AB5B48F4B400
A633DE30287B553707AFBD5BCC73746EE3814C81AA434D8C385F428A73ADEF42
11ACFE582AD0F872C83B7A5CCB4E7AA329D5E67C4D3A3AEC2F513DD1B62FC828
50CC7AF46FF5653526522D8426AD0B26C569021B269D212F08116DBDB226A376
B2EF61686F7E12345CA1B09244503C5AB0691E9B28549EF4E4016BDCE782B2D8
6B91CC658BDB8D07271B47B6A8337B97160462B1604DF9966F85B3D3130E28D7
02501BDFB5F375F6E16726726DD6D18FD4E040258888D951DA695CC9DDE457B0
93D7C1720490D6EEF9A37DA8AFA12A951F744F4F947FAFFB6AF8BEF727FCBC4E
C3A5019F410CC8C52C8B798D29D1B6BC43F02AAB6385721898BAF2DB94963C98
EED905F7CAB62895FC9F9F2BB0937ED50B0747DD06C906B2343A2300B50F2113
1413DD0F75C1879D6D2801D9E38D2936C4980E61E9F39D06F5CC48E815F25A16
51C1D03347E66AF78DBB94156D6FF004B6FCF111DF144F646FE90FC395739621
775C2801E551CF61B8C25E264427D4730F66AF7246D0495C959220C4955E65AA
710177A6ACB1E54C2D1E650A10707D08C695335B5F800945B297322A1AD5B984
4CF7BE75ADCC25598494449B91046A3C940520A3034CA4B31878EBD6E849281E
6B6BFAF1A8F3032B994BB0525F917359604404D0867DBD636F88B855391EA8C1
558BCF3F586493DF660E9A4DAF4311CCAF155321AC244084C05D8A03A86DAB09
2C3411E984AF999586B42C1B3573B14EAC0E753542DA74FBEFB4461FD9CC5F3E
ADC37DA65CD9FDAD072B86C1283942553B8791C43AD4575128380A20EF7830FE
6A2394EED094532401B6329F4FE70546361EE8330CA5E643DA1ED7453E3E65AA
BAFC86BF8F7059B539D2E08EAC8914AFB8BAE992075C8EFD76355E2B2B8A0FFA
D477A1D5E5FA00A99037AF796AB83AB6DFEB4CF2A8309EED6D29CCF155D501A8
C31B9E5A46D78387AD7ACC9A179E57C188825BDD6254F896997DC337B04A1A82
DBC3622B0507620E3269E3814EA05742594C59ECCA52196B7DAFC6466BCABB82
9183894D081E46FB67C7321EC0CD6506D9B9A096D4C6D9971D5E21D48A9B2EC9
891835E6F8FE26392678392F8B46886163DD18197C7170056F06E59067B12B8E
3EC526DBB64C755C8997D6A4122A2E1FE999B2799A4D6B1E3DCB19D20FD0F2FF
0D0C7D6BF2769DE6BA54C29A8B2302CD07F2DA5AD7E3A08A0842F3FB14436E5F
7F9A13E8AEA640F0D816949852FB7AAA0DC44EC28E7417A1EED15C383B7E350F
B66C2732238CD56246595F02A7DBEE850244A150A6DA8F1E3A6A44625B722DA4
40118D97CF56A93C071E7435B2BC85365839E58ACF1D39739753295C64523447
0E252FBD11F945BE61ABBF95975A4CA79B2E4E651FFE8A4AAB601F92DB598929
B2AF8D4037126605E78F9FA6E02336880074C48DE08E3EB41E0CC34DFC9310CD
51657B90869F3CC8323B22E076A88E72C74245076D8109F33FE2C7CD507C5940
1024014A39E775D52A39A397E50A8B87D6ADF82C46CA083E37ED902AA281F314
4B916A5B9AAC253DF70EDD3C3F880F3670AB740A920B9D60D6E3305A78375092
7C512382DDC027535AD1FB8B17D62F48703D787FBB15045BF0339A3B3C45293B
5270C97A3D3DFA42F87914D1A8544838F755BF0A271174C47FB85920DFB44E4E
788175501753845741535388B4DD4944B9AB2B8DCA81DBC69F70F84E20185454
3942888EC968827FB8A92613498B7D754F77CA99E5AF6B3B0DD77FB78F84F8E4
3BC037F42429D5BB75E8F92942E2B3EB517F3F61CA827695DA92046BCA2A9896
2469FC0130B3709607883DAAB07B9505CD736AB64FDDEF14C5FE19ACCCCA89E0
B245B49E3C1E0EF7B17E69E01DF9F0EB744847417DACD26CCFE5B635051CC077
E9E3CEF3B551B812FD451A66C1A08E83FADDAAB7BB4C76A61598BB40F36CCB5B
0826EE6E8CFF24333B7349F1A445063507E9B20A06079CAEF65A8BBCE470E96E
DD2C14268F8CDE715B06152578CD6A8707891E0035C2705D32F01D8B827D4B82
1F2B93FD17959BA421A756AC52E0ACDB7ECB291E7D6740C4A95ACEAE2ECDBB94
4F019829F797BCD7DA7FD7B32488D96B314002D0ABCACB0C768AB03D753D86D5
D3E3002C1F8B9447A4CC131B8976C75201096B2F560D7F646C93CB509EA40ECB
FEB25187A8857C420EE6B5761700461387200769FC8CE213E6F3D9C641617B58
D433A26F2DD8A411D5FB5BFED92C951F5BD3E8D27C066460909482704F44478C
94014D271A34C887F0F6C95D0B8C35378963801D277F9D65B44DDF10D937478C
F703D7ADD5EACF0A1B92A5C20EB6B968916BC169FFD7B316EBEB6A98486A3CF5
160FF4F3397839704AA4949408A84188C579ADFC908C7F860091332F97174DD4
F3185510BEC7010C4AF563F03C1BC3E73728C0A46829B477A29A424B0B3C5F9A
38664FA1A120FF2C530F57AFDA0619E8952F90E28A260991C7D316953D5EAFFB
2B5C693DA388ACD59967C72EB0AC9E1E62CFADC36A2B3F138D3B94D17CAF0A67
2363BE28BF3DE4D58F0951506072468DDD91896501D4E9427F8D53008EA6B64E
85EFA531BF85291C59286ABA28495E6A39976427778E7B438C8835F3F0595448
A84C2EF5E8713BEE71C019DDB7D3735AB6784309F98B58B9C892592ABA4D20FF
4B4DDE42A0F315E49D1A2F2A125568A8CB8F9D79AE10021FCCAFC56888E3303E
AB21878B288AF0BC7FFC178E2509EAFB972323B4DA12CCB96A4A426F5093B2D9
24FA1C655C622B9C46324E18930EE942BBC89E7805BD815AFEF75142F27421B2
7C9F53C1D6DD69E01C58852EDA4CF3034A570E86FC665E67FE49315A3C8D77D0
FE455FBF284146C9416CDE0678061A92ED7D5786DE17C8DCC7277385C27414FE
F075386CA709D5FF0D852E0FDCE730C7793BE3F2B576F5A025A6EDA3902945A0
AC5A07F36A4B59BC0DA077AA87728136FBEC0AE10AEACC7270829CA037502EE1
726396034FCFD178EF5B02E31C9EA3120EEB29F2E532BF6AC48AEC6DB0C0B8B9
5A024C7DF1EF5D539E1765FB644A8E8F44398F3C0F3561E6CC317171CC04093D
1DE3492ABDE257248008FBF7F8CEAAF04B203BAC95C8278D3DAC3784F3968F19
55F7B2B5B9CC75CE45C1BC2E4D26284E9BC5CF808AEA7E1ECC92CC100F02098B
CB5915915D0DE267F1ECE89FF01BB0ABD2A0A2FE11FEFAC8ECF289D47D6D19C6
1D58048AB8B68820A0C1EFF4E2BED6D7D19EB885B9B53403C43C455CC117518D
772A8579D79B73EE844E495BF2E7B940797EDC63CC60E9B8EEC06472B6E1FDA7
C72F0093E61B5A260331A35648ABE070AEB6365925556C4A28770282D12FCE2E
8654A6A70D270C9ED8D0EC69D785DD0D174C524E064E4DDDAC69ABE7B1032979
6744EF4480C42642D90E753629A444BDCD2C5C5A22110E5D405388031110D3E8
556D3E0C781230B4553A0A024517B1C6136CA9F47FBC5688EA83DCB929D10405
739C63041D7BC312106C1EC135F4CBC1D0590479DCC975F65B7D9744DD4BD763
F2437C25EA92EEF1F26B23489B330F5F6AF13A90792A208B01A51ADD52D86B5E
23CBBE4C00E82DD272D9214392CD92470624801F255011C826721FB6EA019C42
386CCF35417DEB61CC14A59B065807154A8B766B53526E51F3232822F643E31B
9EBC0F75BBE1D90E7DC36498E93652E9A177AF17F6EA07A944D7C45731B79620
275D2C40E74EF05C54ED801B531AA5FB4595622228AC9734F7D875CE74B07AA6
595F2C8C3238A9057266AF95B37C36F46FDB68B14189EC8A69761D45224AFFAD
34A165852BC20C00F0D6AD6A3A1C9899E2CBE290B0802F3F76BC5F8574AE4FE2
5301CB05FABCD799A0C5795E1D98BC2DCCD9784F4423AF56A5A7AC25E3996046
F0DCF052E4228C429A6E3BA596056333DF3BCCEF5C8DADCFC8BA6554E33F1D01
CD2080E67556599150D9CC5F0866ED7103701312C02041DB50EA4847DB3C3AF7
E6BAB9A7B3D36E1845C2D56DE1AE2D346F4825ECBB0D23552A07E353C69F7B4A
5FCA38B6DACC1AE1F0B31CA7BA65FE88B808C17B71D02AE57358E104A9D68D51
8CA8850265DA9BA68F937CC89BE58D6644D8BB1BE2157922A781ABB43DC2CA8B
5F7B96C0FA0DF3717394F54A1A55619EFB5181605859C03295C26C1AA01090C1
448FACB55A2F737F997338B6E8CCBA8B6F67F94433F9FA292B493236AE7E24CA
9616469942A2815E070D999B010AD99C8076AD220CC6FD3C722B8F6A8C73CF2A
67CCFA4B89FD2D886CD5C2152E9ED10344FA7D9F62DDFB295C3E4D7CC54B10FB
6899CB853C5E75A98512BA14C0CA4E99296D2CC8FD3B61C47B15D0CA9A6212D7
6349ED3E66AC06077A8583D5CA912CA757E3D63D48C7393C4D0FFC66F0638ADF
326D7CCAA731B3AC4DD0A0B70C7722163BE73086C0BE8D28A45D3F18F8416735
9501972C43FABA45A4AAA2CB28C1E1D36A2BD1043E4C585CB43C8908B061D87E
5C337C083B3ED6A83945AAD63D1F25930BFC8453DC17BF3A8494806B93F9FFE2
717396A2E23F6D82A548B8D7BC8A227E2D64
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 12 /fi put
dup 34 /quotedblright put
dup 39 /quoteright put
dup 40 /parenleft put
dup 41 /parenright put
dup 44 /comma put
dup 45 /hyphen put
dup 46 /period put
dup 47 /slash put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 63 /question put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 74 /J put
dup 75 /K put
dup 76 /L put
dup 77 /M put
dup 78 /N put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 88 /X put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 106 /j put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 113 /q put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
dup 122 /z put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B2F8B99FE0F73BA44B3CF15A613471EA3C7A1CD783D3EB41F4ACEE5
20759B6A4C4466E2D80EF7C7866BAD06E2A1040FAF2DE1FD6AFD5FD97EAAB614
956897A7BC784E9865B00EE8B49B918E886049F1F4939403EADAB83A4D8C332E
2221AF8F6F4A4954501CB6A6268AC96F7091245F034BD65542DF47BC7BBAD667
1EE6AF9187E298CB7AABA58E3FB5B4C7E86616C1A830A4A937C265CC28A83EED
8F3C971D6DF5A50A615B713F5332E0CF05C754FD76916FECE4DB2807334C34E1
E2418FFF1B4429A564AB857F1E23337C75E729645AEBE7F8967630A40E00F8C1
3054F2BE2768682E50D0B43E3CE3897D9EE7257E77F9894CD4395C21585D16F8
AEFE05217ED4F78C31FD635A00CE5D0DFC7B0A6BF9444B62C836087731D6D205
24A45B3C8D80983A67377EBC88C3F36121DE0957AD1610C7FFED2F5728DAA51E
A53D617553D5C57CB1722553E997ABE85A338241A35C0F08B752FE2134FF5A86
2FC683DAA0E0C0072EAB471FA444491570EBF12F70F2863F9CBC2CE3E13F3A3D
0F6A0A2483964AA9CEFF0C08B845AB92F0C55B0955D0756D91BEABC4E2DBF2F9
E98255142B63EDE17CE234CDE014444509B2B12CE977FDD3C50DB40D2B141DCC
1B61999BE72CEF18EAB4507F13960BA93FBFA8DEB729D0B8281D9A8AE5106607
64EB06C3E874B88A2E4F455B6C40B5B910E41AF4F90FD3ABD529B568E9ADFC71
83A85BEF5F37D69CC9C71C59A0D0F33022188CAA9D0ADE68BDF181EFA948CA9B
DC7028D1DB77FA63E64C2B7903BB7828E7F06723F1FCFDB05DB8E01AF2C7CC21
AB385401CA77849B67B73283A08A7CE853B6AD553805F11DE6293EAF4F145E33
9292048488706535E6BAEFA73927989ABE711605E4900FEF70867302E79FE180
E25EC9D6281F41428F7BBAA66FDD4CA0371B2B84672026B37C59749F6B93DD8E
925609F8602BC58724AB0539AE172EEC028A79C1E3258426963777A390E6D1C0
512768617E29D04F8616B3A48C0F5D0DA735647F8DF65B7449D921FB474FC0F1
CD987D5614596A955CD0527C22B78D57E2E2749E1467FCC43708614B6A6F1CC0
7ABAD3F725A77088210EF821FB9D84EDDC8B6C98929D80C2600E684EA77FB700
74716F4B7E6CF781D8F41FA4B6B51822E9C6092E97793E01486F7CAD42218765
54CD22A21D39456213359FB0A07C81B5492A25D34C29F89C28469F24334A103E
7F01B283B7AE6E3578902AB26F04A1A8B70747EC3505CADF7B5A381FF8E1C162
5F04BC35BC3D10972854607D0F7D6DA9E7C48429C5E24EA1DF7B2287C6D6DF4A
D339BA55BB19D351221FB0E9EDFB47D253A1A97AF395718E27CE98CD31C5EB14
D18ABA0649A4A4C3E44C0CA78E9836A9A759196252ED2F1DA14A3FC9DB77E4A1
77E32CAD6EB653D9C8554EBE9C3B49C3C94D1FDB0DF05C42A33B01A24EB53C0E
4FA4C1B912E0C6332B655125A5A865925EE1764C0FDDB049B730D477F5CEA6A5
0F9C3D1F0F7459C5F9F296ACE56C98BFE2E4012875AD436E955B596E009C0A3B
281458431CC98336FC80F9AF6CA65E2ABD9E10F9FACAB6708B0954999A43E4C3
FB0A5C26093657000C1A6741812B7446657E626A7C1A957FC906E103D3FA8220
1092EE1F1618072F2AE49C44344C0649E90BA6EC698C04849230747E210C6B8D
5C31DC932AA0A0A058AA20646A429B59FFAFA2DD03F6F554F64C3724D268576A
8928D7D678D2F2274CF0CB2EDE6901BD84243FCF397BC62820C912A4782FBEC8
715500EF1584FD7C70C4F23C7B34DEA43F9AE692684629A343EB5478FCC2B84B
E68FCADABB45266436540E90E58D6556A232A5A55A988EA7057837B7AADFACAF
58197CAE7EE800DC6268DCA05C2EF3C88F246A63A97105DD724A5885076EEA73
BE32ACA092270AEA6DA0263B69A73BDE469969E27F418043FA2996D26C9C7A54
C91056EE74E82E62CE68D7CA42FD4F21959D7D40AB12877D3E71DF4735F2C17B
642BFDA89DA462A72D6288110649266778E8E3B1A075261D4F1AFEA0BDD3B882
045073EFA94D78C7C7520EC3A63D73B32FA08DD14E7000E6EFD50D7F7CA4A047
ABFE5281DBAA01A3C660324A9E58BE67DE5A52F715C085B946499BE9B5CF1CDC
91A675DB3C60BEC72ECCB2B4FC0F76F92FAA9580475B2B0E001EAB046B7C89E1
6B64CB30FA14F6471F0F15C7ECD6FDF95BEA504D81E53B3B08F63CB53A24AE8E
4DD78A5CE758BEFAB546C613AA6AAB9274818F13B378BBF07A4D89E34BB4B7A0
A53AFD26769B264BB69C5BC688CD4F92041C96C5B7444470F85BF9FB5201FC1A
10DF3A7018EA5B960975DF5AB0D863404E86A8052FEC2C2565A6529E97612A2F
ACBFF6D33A7FDEDF600622B5F99F23607024DAC9120BAE478101C50B1F0B1999
E48749C121861E8CCE7E740797D4B0051F82D5507E8858F86779F2133F8B6EAC
43DCAEB148B4562DF1868DAAC5C4456B757B5176750872D1BF464577FECA8D09
DFAD1A17E8604C032D0FD234E31E57865A5BA960238F327516DAB9B870F815BF
583D11F2C80AA579C13A7ABE2904D79EA2E3DC9985E7D354FF0B5ECB57078CAD
EAA01F38A3AC9C22E69FC81F67DCC5478CDC05ED44CE9084CC1123D10DBCB378
4E0748D386ECE606A723A7DBD5915CE9CF34FE858649CEDC97D6D5A62232CD4F
B0CA6FE35CBFB9E718FB8953A722DC61CCEB5DCD2EF517EBBFB358F1AD6C3F05
88F60B2BCAAB0BD338FA7103F4FDF4075E653FC66C073C4C509C381C9384EC9A
B1400325BF4046B03E81886D3DC8F05C53A70FB22F20977C87465CB9ABCB6E6D
FD72BB894EB26ACA5B6EC4F1827DDE58A326753EC1F9133090EA4374ABD8BF94
936F23A7EFFF280B91117513632073F3821B9AA161ED72864FCEED76CAB4589F
EFAACC5CED644754F253F0F542EF9D5D384E198AAAFD260BFEC58935EE83A6E0
B00E94D1BD68EB63577A12493BC85921DE900ADD48A0DE8C0F742555A4B5D4B7
67B7A861F6D99B7B58F05793CC8322CEB75906AD0EFD9225218069A68F908646
1E0B5904F7C6AC2099DA7E5D333EE868CB1845B188FED8081C6E89860426DBCA
6E0865865750CF17A2970E19586DCBCC90B0E015158218E8904073CD825A1463
B90A68022B9AF750074890144BCB110F7C2326D7ED0A0DF41CE0342CF1DEEC37
D72A52010B0673D518D478D8E91D366F58C6214E289B238A8DBD63FB1E2CEDDA
92840CF13B6E8A8A00349D0CB936F0E8BD2BEE7475AB71CA71C2487D12E83A2E
6B0F23CC085F7D85E0139DB53048DE0B3D1EA13DA0E891369632410942763793
4727C58A21C0333EADC74F080DAB62E6ABDC64BB4F263BDF631ABC04597C863A
0AB6175AE596784CCE8925D5FC341449526A29175DD5CD4511551A0077812EE4
51A595E87F92D246B7883001992176E3503BE0B231AA2CE965380743D336B215
07AEE92165E11251DF66F77D9D52B7EB4ECEBB6374A32B800378D8DEBADA1639
56D4347EF25F364F2F066743D9E1E34DE5462D40093EA572FBE5FC2131A10C6E
F0D14D47EC67D4E360307BDBF01DCC8290F8EFC51997C09D3BD7B15BE9B268FD
E95C87C8456E3762B05753B305644687B4C93209F423B97FCDB2AA8BD1227ADE
41D2B1A40F5CCDAE69766EFCFCC567DA7F5749A194A502EC5A6C61E81ED855F3
A3D81262E49DAE0AE1F3C5321F21120E496B91DE16D513D8C92BDBEBD4032C23
48FF30B5998BDF4E9D0E96EE9E85E995F36A7F8E9B5E38E14B9956A7AF45981C
A2C59706F62EC0D532A6F77910D23547BF4A56816F59AF723265F09CCE020A7F
4B25B0BADF2043842562FF2373B41AC921BD4F6F8D1A1153D624271C9505037E
10C2141AACF041FFA93A849CC125965AA066DFA066A092500A136EE0F96753B1
1A4E3B87B54CE9E7A6020D7780E161756BDB76B1B295575CE5FCB4841D2142A5
3FE50075397C1CD7C0EF292AF4DA641173F4A1718BC70229739CCBECAFE7CAD3
3456D8054E1C3FE998BCAE22380C6FC04EE5D9D2CEBA4228E6C15650E4FA85EB
A1A201356E9F99284493C41966D6A964C30E59C71CCEED73C153ECEED9E7B8AF
B202D549BF48D2E97DC5DDA33AFCE297DA16B0A6520F98FA6C3B0656F0E52D99
B921AC5FA3409F10F7B89A28F02E23FA6DB4B2081820449070E49EB6A0F380B7
9CAA36792604F583F7C0D64EEDCFEB777BE4F9696270DFDE7BD2ACD4721A9B4C
0FA031BCD71472157D70DC6F7E40D5F7BFCFAEA4312FD569E396B742DB77151F
B6EC964C932249071FF1122F8677DE435A5FED85B4517D89BD2B7BBA97F91AFB
7F4ADAB4C76EA546818F8174E1A1C18CE34926565362DD34E2F3666AE624EF08
6EC830F90BE9B2B609FD85E8BB2ABED06960A9CD63FBBD692DD93650A268FB95
AAC68B17DA54EE3D24A9AA9DF576D2C90FC823753919E178425C8E2146960716
50D49A84D7253FDDFFEEAE4B688FD386FFD36EB63A90794A4561DA9152A4931A
BFC7F6B95F5AB15AB82F994C0DB86BC74D349B1636C5DF5C63A2B46D32FCC926
0823A55A6A00960DEC2ECDF66BCC8AAD2609DAF6F58ED607C1BF0BFAC7EF4F4D
92B6CB2979834B3209D72F00948B550BC287C8D32E1E0F75A77ECE5D411B0E4E
CA4B303AB18281FCE834FDE1AD76CA4A90759176AC785D7D4090B6EBEC1FDBF0
876CF4B6D97F87C9CFB18819BF0C67544C1C242165A2DBAEB562C0E6F5B35E47
E528B9744233A3A6CA3B92CC30B7378C42966F2B255F47A172109BACFCCFA146
CF1CD9027DB9F8188A1FFE0AFE418D7D3EBCD30ECBDFB5E3995FB4292559C1AA
5C9C8DF52E4AEC9F4ECBFC42FFAEEA2042123A2BDD5207BA3AAC3FFFFF477504
D535CC58EDD49E60B44C615332D8DAC298DF7EC45B9203EA6ADE6A1D5B20D096
5098370D413A5B8333EFE01F568C1CC28E057388E9C4E90F5763EB85C17E7F27
B29BB669BE041042CDE337D577B0760BB4884277599CCBADFFA4DBBB9BEDBE50
1EFF3B4719BABAC8424C2022C831D696B73C278141D45566F934E1EB3563FC61
625837D47248891EBE6AE07BA54D886E4DE6A518123D7A36052B1C65EEB46CC0
5F8BF252EBAB1782A374770F09FDE12B8A661B0F36850ACA6E3E2F0130E2ADDD
2F2949A742F7523798274838BAAB050B2F1C34B0DCF34EA8A10100D300913B68
EF53ADE69B181B86A98622B743223AA487A5E7751D6697CF70310B6BB54430F6
FF01CFEB481BAE43E09C57133E6E208E7A24E75F379A9AA0A0247BD94450F1BD
1ED13231F19476D2D57A727AFF6B1FAC7FFB8EF70265B152D08E4A21744CCC72
F28D56425AE68D356A61BAB556CA07A025771F8BE22C6F3120ADAD841FC73F65
A35FD4C55D24E27A3DA4E2A14EC7B1FAB9345F75098F648A6B882D78DA9D0382
A2D6A4BA64946B66DDC9961763E0B382C00B84486B66792FC557158D32F15BED
0BA63CD328F6BBB396683BE63FC55DBF06A60627150B7DA25B868392CA57F422
6866D524974F02F9E095673D4F185D28D818C7992A55BA6C3D208BBF91DC3436
59265E0994988D25AF0BC35B59C947945286C59F497BDAFCF33CD7F4ACEA1106
72AA5166A36C869BA10D93DF8EA4BEFE88852192BDC8DCDD5031572FDF4C940A
10EF9A5CFB4C8596FA440A962ABF13E7C9884FC7AF7523058B5F4D42DA8F416C
592AD6354302680C9232C9D8677981683E5E2D2AF6730D837B32EEB5AC0005A8
4CD3CE96B816AAC31CFC17FDFDE52C1636187D95A9CCBB981D16D40A14F772AC
2404A5150172A757C6C6044A0F22CA67EFFFC23CF16C26251CC025CD5FAB64EF
00585520E5536520B37E52E37E0E1CEF3E6D27FB1F77B76EA95D618122FB7468
44333D216B8A29FE548DE1FF76439E47FA136164E02953FD6591A46FE4AF967C
B645698587AF3C60D064C7E9A140F8DCFCE62B0F4946200E3EF2004C7E1C50ED
B45CF7C5D4E6B5699DD4E59F3A4ABACECF8B2391BC95868FFDB01F6A32DDEC76
4794667F35D3B941B16918A74602E84D8BE021AB3CC61EBC9712B3ED816966A2
B8163CDF8274071AA541525D5B7D413B49DCCA8D3B62C3615B144B25D80D208D
E07C664C29CF757FD202838686937007DA85129E6F3FB519621D7A9401B08A9C
E55B797021B169C9A2A3E8C1C375B45F1F9BDDD09BAAA179478E263BEF943CA2
C50A149779CD6C15E0157F693136498F8CFD2A829CD565F9E2544474E65401B2
D4EB9EC7C0866E034E279DEF0D22C3E1A64967F7FE5BB42A1FC325B473855C6F
E04F4F949CB2931399668B6DDC1EC5CA55CB4E7D30209E233542C984695149E7
47570CCBE790AD0A2874DEEAF406512198773FD856ED7E5CDBD7DF818D3BEFC4
351BDDA50DCC6B94729444664891E57DF95DA56ADAB4BCBFACF11433416041FF
95D77BD67BF5A3D7AB9CC53D31CB561029F53053F111B7D01837810A7621C0F6
AE8021B110CFBA747F0407D48911F92AAFD79261D3D38CE236E8DD486242EEA6
61342F6B283D6DB41C36389FA5F9883ABFF697C8ACE60E073BAF9829C04F084C
BA1B094CF3E5FF9C622F1042812A92F3A0560C6CF67AF332B86584BA663E37F0
71A6924959964A5FF7E0291006D0282A9EEB082FCC156F5DD77E20DCF263C5DA
1AA188D926CD38FC1FC6981D93F8742926BFAB30356C0923087A531B5480EA36
1777800403317C72EB9F09EF4ABB9554EF0CE289297FB72429F395125E0545D8
E5A17310E4CB1A3DCB967E6ACF593E2001E0CCDDDE6F909BFFCD8C5F0E763728
35D92F0AECDD920E4E58A7A8DB2519E847D4C5F8BF9C6DD13230FE38FF0FA6B5
307926C851D8A2CDAD8C34E5065BCD58D39E62D707C1A307E91D91E08FD14BBF
E0BD48E062927F3F20513BF33F0345AD7BD31A2C4C620599E13D1D84D2584488
FC950C9A3A383CFDDFBB9880A41BF2B41256CA1FC3C61300AC1E38CD67152B3E
782E1CFB377C634635BA5ADD18550426839D5D3290F96F0C25EA6F11DC22368F
7265A149F8C2BB8294E11E75578860E73728CF600C750C071D29B1DF6CD3A4BB
912D303296BB7ACC4650BC738C88DE370F790C24DE9784D16EBA62EFE1F0F8B3
548BED04B50A0B122FF860925EB9CF8B1D66D8A9A813CC9B0E1B3B0FB512A387
B004F55F47E525D13CC56EC76D5D173A531BD3C7DBFD347B5B23C03B77670E2A
572475EEE8CC33C86D3F8EEDE7733F049AE69C30F6A06246EE8EB0B45EA70FC6
2855C11DCFAE2D7E8B3409DCAE83D9353166AB2E2C60B74E855CEADCA10DBE7D
55E8C3D8B023D84414A4E6AB391878648F938B3E8B112C061278EAABBA8C6C30
AC7FACB73AD2B3BE0B6A27F0370E47A8F3F9743464930866B60A4D74CDB5CCBF
B8C9B3EDE00F988639BE197BA019415A4511E16726D4AD04D70B3C893D3B1ED7
1A2DD23F6E94FD05CF6005E71E50FA9E869E43AE14B141CC47ED9A3077C19894
F677DBEC5D6760A3701F5E135685ADD1F9D5C8619E194FBA2B8E1463DCB121BD
1CA59BA32D2D7F0AC7E72031E2D7B79E3511DAA773FBE1894A2A69E6FCBA9FA3
C863782B7029B265FD214E8AD662D2235E130403F5EEAD68F99FE751F1350EDE
676DDF1B8A71C3E9E0478AA85D2DE84F429A78BBC04002355AEBEA6D83874882
3D8FD7635ACB3C356700FD88460B64D0404A70C3879670126714B7856BC1006B
70AB330D98D6071403E1A738EE2956EA714C3106151472DA9C608284AA15E5A0
0EAE25C80D2A4A109D674D791024616DDC7FAACAF62910107579BF1D163921AD
DA858221B5350FA0552A82FEA1CAF280FB647D0DDE4EAC461A1F512CB8936BA6
12CFD9911D8ABA782DE28AFB13902DEC226F513157D808D6368FAEF1C656059A
CA3D1AC6A840B428E1B883D728EE2C2345035449C5B10B927F6F51D7CCF39BB3
B76CF3D438B0B634A2DE2B7EAF0F71BD9AB51B24250D69ACF2D28581A6A8F56D
E464E588D0F1003DAF8822B57D5F0E82CBA29437293CF5580CCBCE39291A0D92
C4C360C09A7BECB212EFBBF0D2495CB1D614288C05957547C6F9FD1373CE0A3D
0F426F5D3B8533F8EB27202964EE56B15B87A648203C4CE2F6003906CCC08DB2
6409582A542228235749BB0B66AEED44219202C598E1BEDECB9F2E974912437E
70A0DA82FFF50D666D656E1E820294B94BF1BC04FACC532F4F6308512ACE7FC7
34446F0A8BFA9651DA536165C9C7FBD3A43A8FB7C1C26B21DF7076057E941F66
6EE9AEAA0EF436D048DB6E416E59B41C5A0028AF52B5FDFE932B02708F56A838
64A710B3A7462427392F75565FD54E2A11574A906FC4606788771E37C98BC15D
DEEF5EF74805B4FE834E5747F36E454101593B8F5C944F2F6832D825017A981B
70A8E42196401C346A1D0CDC44CD2C348810A9358FD27688E56CD84562B99C4A
1E7E62940EAB3CB7326FDC667A750165A3687987F8A92EB9F70687DFEEAD43D2
42A7847533C53A314B9A067C2DEC53AFE22F31C6A3A9CE313B4882963F8FBC23
F92D2F2398E7DD74624358F6608FAE82A15289C294A3769204534FD7EAE4DB72
0B258041A801EFAF1F11E4EBB3C1BEF8D5F13B817D6C20789D3A70E49BE2E447
A9E58B4F31A76F711EB0E88AD809B7352D12A8389269D36AFCC5278B3F84CF59
CF36541837D8A0DFEA3DE6321DD5C12B910112767712D05D4668FAF258497A10
A8924FC81E61570B6D8A51F04C7058B657C51B45A81131E58D4FBCD4CF84B9C1
50260CDF40625B2E1D6D025A5717320F090318C874F0DAFCF8BE8D92FCB715F1
27CD365828194DB29C3311DAFB9A6A74F6AFF91E24C3F2A01628E2822E01F846
F3E17A54A0DBE4C6096A1098C62A048D75503F625A129C8D0486B38912DAE86E
03278A2466357C4A777849D58A0B00C6AF4CE66D3509EA009ED6FCF8716A4251
D6926AF48BD3D81EA8C96177FE30553BA1417A9B955C6C28AEC95CCA33312D02
EB9C9697E9F9B06872DB5DF4D54FA75E53E179A2DC26219C28489CE6B1DC9190
9EB9202660A7381A3A114765411914FA98EB6573B955F7D295EA077DEDAC2290
5ACB7E216838130595F66E5BB51209FAA4D78696E00BEC3394FD1228A1A315AC
9785A2E180B7229C2F3595F622F47E8FB5CF422994DF293414736F28B9846CB8
08A1EA87AD71CC17DBB55B4E2A2483AB9B329E0E6359F15D2E57FE240C78BE85
C6AD3784DF2D34138BF4F892831C4E1FA49FAC35738BC988F3CE2840C4A34F5A
7885DE18A776DB88F86C2C2964E782E199A016AB0AC4325A693579860FDB3157
BFB80BD1227A47B49881E4879E19176ED59159B7D4A6AA6F10A54A1ECB5789E7
A1874ADCCB0544AAD6DBEA813007C3367A1AEF20274F1A687AA115286E593257
00D9DFC9ED00D7B70D8A3EF7BEEC533040E2B2429DB7C8085FA12077D39D207A
AE5D886AC348A70A231F76A75DA6021FC25B543FA193EE77CCDD3D9906E95399
0398F283486850914E483227E76847FD6ED2902B40D235F90CD33B28C7DA4871
67BE59898BCB430E7641FB85912DE9BE1D43A2964A69BE6C848F6CD246876ACE
0235644D407F841D7ED60DB555733893DCA1A014F032182867E5E744D9F1D2D3
059E99788585CFD30CB0B1A0D8E938C2C30D6566D2790C97D74FD3E37050812A
0E57E483E0EA22CC321108720E63D79E80848D5A7A731D1AFB48C766906D4DC3
A34409CC18AEBA5301A98DD0A8590B69CEE66B35F4855B9BF4374A717DC6D34A
3A24AB0B635363BE9F1575846013B7F7D948797992173E49FF6BA0A973DFF818
0A1FEC4770C010FD4293F45909FC6EBE2F6FA905A8E25124D3AE6D8C47A7F7F3
5DA7A74CB4203DB0C0B384968A207AED47856C120B2A4B67625562BEF7C09311
E0431A71FD1F0D1C17E908671C34111A3E41CF746FA30B59339F61F6A1A4E070
8AE5FDA399ABAA3E6160F57948247DFCC2F6267E3FE48C9E402E650CE16859CE
6EC429059783A7A82259B3A78B6DCA9739FB9D9BB6C0471FA71B2DA007F68455
2133C1CD408EB004E42A267B17FF1D899F3A17B936EB17F1257F555AA02F450A
15170286BA8545EDF2B4DFBA6FE331C3583FDDCE027F7AA4112F609E06640EEC
15D54051C2E6B405404A736586BF54AA6485DFBB369F530BACB1E88338A4F05B
D13ECB77D8C3947FEAD8E4E85176669060752E45F1703CE43FBDEC19BC4F6F7F
A0F1784E9628D0E16ABC8C589DE9EFE5D4A63B17D1113B7CF39C5DB68AAE3E2A
9A7A4A0B1A9DB51FCDE2A83D1342323F180E795E11B446DBF579A1233DE006AA
756FDCE72F9173A7F161A05E597CAAF7E35329F89473B5133F469C913ACC2CEE
B238D0E66B827C96A4501D14DDF56950D81D314D1976771474030ACD7A5B2930
E4CA1478C7E2290ADD81D45E1705254F905ACD8C3584A69D0DA74F1A2113F89C
73FE543D0FCAA60504FE4A6A54109566BE2125CCFB0274B7C844DAF22C41D42C
661261A0BE3749C57DA38B8C034A3CC7FEC60C9209D58253F4E292B0087FECAD
C4834184B403756724C49ADD3BD87B8F9AF9220022B37A182BDD00DF5BB09064
EB681A6C93C088728966899DAA0E2F41B694D4318F963EDB79D5A6DEC9D46C3F
492F3B5BC539E52EE61B3C1C4E3E056AFA74F31DB04BF63EED0D8097ED6CD23A
F5090EFA46E6828434E9E331581A560D22DD61D20C61C921CF1F5A65302F8D2C
F0B4F398232D07C015B72EDC5C0F795CBB70F3F5EF9F7CCEB32C988FAD5DE9B8
594E98EE8405EE4D989A7FE45B7A03FA5BA73E4B458DBF3CF90FD2F59F717526
285481723C67EA17455A9F97DD4DABC495FED987D47F80FDF7871EBCE0EEB8CD
B4C7F1E7CEC0CD555A47D6260D0FB32719AE7EE083BF6B10882267E1D4C06933
121E24AC0E2B73FEBEC6D7AD578C4957351062F243C9B963DA95E826A9E82417
516E00562DAC5BEEBB2598DD182EC08D56677C4EF3EF58C3FA7E5CF0B38FF192
74838E8EA6D7F2516B688E1B47CCA6967E570EBC7C9F5D4FB11274B1021A6252
56E11711D3EDCB2B34D3C997626ABCEE9DF15A46DD1C89322E3D50F9B7DB6EA7
C0B2261499C6FA4C99E1868870E1F1B80D0849F6185E82058F62426B93390EC1
C5A6CDF5B44566BB6AA54CB6B01E010304A855BC1D9DF82BB25C0C6BA0869556
98E1AA539E04A5DE5566023A84FF79AE23A6E930CB799C6DD4966E5F7DB91C3A
DCBCA39599E2545242E2BD3E4F564AD76B0EB0E81E4CAB7B69802B5B5F32C491
5C6E861EC6A9FCB920FED785AF0046F5FC44321E21CA390373993DD8ADFE06DF
78E0E0CA0D78B381DC938CD5A8E09E70EEC716A78E0D918F39375A92169AC8F4
BDF41852D8EFA0AD883CD60371CE44A2E9194CF1211CEEE1FB531C27B3C7F353
102DB8C81B4348E52035E16BFFA36E9FFA7DBA94B2AE84C6EA01831AD39F7C4B
8BE586802AB37B3C31BBA827BEB9AF40577F5DBD7EE12BA6EA001DEF7C895688
76BB17CC1856A47965AC493DD6CA75AB401BF7362736D3CBE89BA6C5E650E117
0F8A4B8D028508AEC5F14A4A0FE84902AB10A5EC377203FEEED54A89C569CC94
B0C1A6D5255A76B9E6CBB5A0F6F97CE52C287BC5A47A083B5FF3608CA1457D68
E13EE7EA6308312C23E4B06829A04DDD3B9B29C52F4B09CA3D67AC172DF2F2BC
1BC7ACCB63AAA116EEA4EAC9F48616B239DBDA991A906C85C9EABFA34E6AC6DF
7415B207DDAF1DFFDB818032AA3687EFA92C6E10A358C77AC90CD7799270C6BF
00E82516C1F9430F7B7D357F16EE600596F6412263275555C2D903B0038AA1AA
192EDD801DEDC17A02878A7C6ED45C4A4740F9CC78162AD14654396395D95814
0BD8C26DCDDF586A42B32903D529DD1CCDDD70C9F1E3F3266EA585B887FCD281
E77D2FA65746461451A5C260219BD738440A23F31D21765D4FBD17EF51977C65
0DFE4D314B6A06A9FF928D188E6B2E62A1A40B5505D8A11628E48C97BFB5F011
AF30046539BA7E1B8708F58F2C7C8D2E56CBDE2AB0282A551CDA874365DDDD5F
3B09060577F5D4AF858158F5B16ACCDD6B396A44BFBA98AA8BD197B9598965AB
98DD983442F5E6A30638E189DC65D13FAAF87AC2A11DA7415DDE99DB87156A52
270B1BB63947FE640659412A94F30C16ABD0BC093A1A5E65AA52CD3D85D46597
15F07A1A93F980C36DF77D5B649815D0928F226E8C1FDD3794E6BE45EAD3F84B
A48867861E4EAFB2492EFEA24E805E359C31D5E73148ABDF3FA2AEE4A044CE7E
C6FAF841957CB9150F999FD49F5E9E309122CEEC56D6CE4DBC2E8E5DAF3AA360
64EE16C165F39AFEF4E2BFA0B2F6611593C909BA57C5473E78B530D76693A1E0
2BB4BD73E6C3D9F149637697AA6D7BC175CCCE9881AC7415A941BC23FDD06FF5
011C95762C083E6BD7495FBA8343E5EEFD14F2A7DB94ADBFAC0062FEF6487A68
CD74478CA04213D6F1ABDE36CC692BC13BCF50EB90FA317A7F6E19DAAA84788E
8EF069CA63C30E6B83D25945D8CDCC303A239B83D4B174D997C906F0B5883864
A6EF0B8A4A9BA9189C6A89665D1E3B5C278ABE8392B38F602F306E61975A4F37
ADDC9D25F94D244A949690BCA8650B40D76CA3DC798B81E6244B71BB5502D0D4
C0D42734E70DA2F43A11894DF8D145A9530D3C7E1B1EFCF2CB9D114783339606
95B952D96BB323AE921A0924B5CA74978AC5AE95F854FE8D79DCD1C081DB94EE
E5F89F7AD5CA5F5284AA809BEDE79C70ADA2F7B632E8788DE6FB3E83C737709A
3B2C8F3218C38EDBBD75AC229A86FB65A9940F732E98B14307E03F16FA3F0E2D
49CD8DF1CFA2DC018CEB21AD81FF025C6D05F8520DCE01FC8CCEC70944C8E0C4
F2E4AED329C1D493CA019BE9E7C7CBEBC91B778195E4533354EB942A10C4A9D4
5E9C673B81A8C8362EE3263829605812C3AC216D39CA39F2FACCB5E052F0EDC1
50CBC9E8972370859001ECEF8E21B20A3F20CE5712F94A4218E94CEF3D302D76
9B28FF359AC8D3815E5BA08F4A6E454E200B8B86190A84A2782F4FC7E1E34E30
6A609C8EA41D51B0B65DEAA12114C52054699415BAB64F3AC481A9A60368CA5C
0F1E496B37B43B9062B80FDD224C3E48E5A13289D4F75F7F0E7DE1E56583B96F
7A91DC634500F6804167106B792F3D0DBD9908E3F4BEEF2989216CC7A90D31C2
999BDB587D4B19AD46300D5B3A9F784F45617736DF3E1E856EDE86727D4FE174
33F084109A1D032ABFDD15C3B5188AA4AFBBE31EF4D245196D659B367250FB53
46ED43638C4CCF4A9E6D57FF83B1633BDA08D013B1F804DAF107FD496EE120AA
BBEC55392D68E38EF508D1099D30BC70894EB4EF5A49CF95CAF92293F3A08559
526AED343EB011509E886859A355C4B77955160872C3C6270B4BFAA2DE0A6A2D
C69B16C39E7AED287056E2DA69B0F8FBB17018966FFBF295EDE17394D1052E8D
A55340DA7F7037960C1C765C698214CD5DA810EE6836AA64D3428813B2AE598B
F192E438D48177C860C6EC1F57652F4CB2B42F0C315874E0C021961A1AAA6589
886205467C7984B561B139A7F70FD445A2BDB5506190141A65CA13B2AD3AD23C
1F12CB7AE79CB035A03164F349D046E6B348C02F2695F21F4C75D3ECB78BEE00
18E08BA594E69ED5434393F728C3DBC032AF9561B882286235AC46A112D44D79
666AA5D1AED9D037A04E3B89F997D1E4A68910BFACE14A952AF8DCE0149F041F
E0D6A824DC6BB15115AB6ADEE9140EEF31EB8E8C3D752775553EFC1524BEE3DF
B61EF677A6E5FD76EED9B9D64F0B11720E51A6D40ECC66E61A7252D0E92398A7
8649EA2D81E2322048AF3E5C9F6ECDC1569AA0E55374826AD9A945E8E8824B3F
E2F6747FD66220694E9E5276C9328F55C927C44C9A5F5F86C3B0F5F2A95FB4EF
FD29C1AA1E2559847B416ACC0E6FCE517C3F1F5B7F22AF8D13AA766A99E416AF
A19E8CA5215282C41993A9794A59D1A95AF878F408BCEC6315A80D63DDB49822
883FECAC55F3222DF9080287F56AF95D2ACFEC59D9E22F019CDF338B8AB25EB0
72C311C3FAFB60E4CD24622B34458E5801CCBC45FC0A424B618476F521DE9124
B2DCAE6699A2748E0F9491925E2C473B0D4816A24F96F1048F4F1AD87EE4EF2B
AA0107E8C0E85B3A630D8F04D85E42FE7E0656C95EA667AA74D1EA8A471D335C
8D4A1E57962F9C6139E7862420D46C13FD74B2D4436C2721190377C48C266693
B8520D2212F9A5430F65EF6C3DF766CD33241DF3A8B25779337FF0847759E6EE
ED25497FA897AAC978B437402056F8DE92F0DF85FB70FC25FCAF46338B6B0AA8
2DE84AE37108716518E96AE3C85B2B1A357C52F48CF01C09130BFADBE3AD2660
05BFE6B7A61F22E603CBA691017621A56CCC42A15FB5DA17F356FEF1CC554176
A0CA78188983D04861841A730520C2238D87F07B8951705CA870AB836218C142
32AE8022098B7FB0A812A996B4A2E416F7FA3AAEAA6155E007626ED8DA273277
C3D7F6ECDE585342780C77857EAA2A4C4024D0B42C7694059889465AE87AFA8D
AA882DA9A90DC5E57893FB208613CD71B62F9F6D74E7B7869048EC90B202AD08
7844836C768FC432152F57D7E725D434721410C31465A655997FA59E956CC69B
8AC8612DBE82C50FD49B6A03D6CD2E8B686AD9356FD852AC2300B692B8A32C97
050B2E77D477C076C160E6019AABB68700B310B1F54397F3B2947A5075898C91
EDE52A3944CB51699E46DC2C3E1FE7AF3C7EF0AD7DCCC7F33D5A30064E7E632C
C35FA99793440F43883BED41720C246EAE94072FF79B14C22197DC6ACBA750B7
288B00BC4BB7126592F51B79F724DE4C82693B9DC4957DF23F8BE00178E06063
BDD221E2886C275C0774901E9A0BBEFB863DC6092998A242AA8EAA21D590A754
48FE6A968B7D14D464072B6F40D04E4FC6DE8142A04A0C3551D167E87BDB9AF8
0E8DEA744BD1516377756F388AEA7B781B57BFACA69E0EE79F3B38BA896065E3
727FB217F6813AD2255E7E1FB97311E31CA2A36365DFB4A253B83322A013D8A9
A3A801EBD3064B2980397A6897E04BF4AB2E4C72CA9F65A2EA151C4EEF323816
137A0E8BE9D6A9EA6D8CB01C0AF474F6D6E79290844F1F8AC2F62333B5C09068
21D4D0E34BB2B09D4C0B3B3DA090A3983FB598B99F08A45496054B9095B7F2C8
0E63ED06B5CACE5A421A7F3B3E743D6D6F35B51D54A10A42F5F3EAC7A0FB3CB4
07D1B55C7F1C8EC0BD91E4F783D9D0CA1BE32D0F95EED1FADFC90B64D8F75A2D
9718138720D359C67688187445A2971990D2DAD3C25454B3A3A4EA43BAD4E38C
4F7A931D7F19DD0261CD77EB343BBF39797257A29BCF2F3A9D8057C27A59E420
63F97B01C8653492F32C58000FDB8D6BD21A2DC151CC89D5E47E9FDEFAE891D6
D0F4A5FEE590F94990A3F788803702287EEFDF44952FFE19959CD117EBA9B2AB
1E15B58CD1E4E4410C5BA0EE0B25FC4244987A50421A19AE65760A0CA1112836
2D3785CF8D81D5B781D2EAE652CB5AFC45E3DD17251E69BA715DB898E6E1329C
455D6F04159C637EE400AC18C2F02AD323E091A734F986C8A54AE4DB3459EF73
8F6EF2473CD52E2C8A2E4AA66D8C3C346BAC87C4624F071C115363973BBF1B6A
62DC39E5D3CB06B551A78538145656CF3F4F46FA4BD9AFC17C4EB8F00499CFAF
7BFB7730FDFF07C48075A12241AA9B0461CC14DCA305F16A3161EFC70BA2776E
19D99C57B4DF070023DCF105F7BA1CC7F345BF8B29B9821C634F8C866B329B76
6FBE4375CEB764D0FF4A1290E72B00E2036C0FB0D2DE01A42697F7D88C162861
9642B25386B1D30AB38DC18ADA8BEF9D17EF7F42DDFADAAF2FE56BA88EE4A553
B03229
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 44 /comma put
dup 47 /slash put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 53 /five put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 72 /H put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 79 /O put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
dup 121 /y put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE7DDA8EF33DEB81444316FB3F93EF944D9FB06745BACE4
848398BEB747E58310BBA39C64E341185C82CB77E9D4439EC15BEFF1335F22F8
F036517C436225F4125ED67ACA7A84230D4E2B6CA713FD6B3CA54BEB540D407D
BAE644AC025A9B1EE04B9F0458912B40D72D0964034C5D6F1B058909F25BC43E
76DA0DD6A25049DFAA0539291B9B8004F29F21B2A9D8EA7F0DAD2736D76E6D32
0913DE2F73FB7A9C036EB1BA040552C3594834E58172F09150757F68EE2F6D7C
E4EF454407136C4AADD69471CE6B07099AF0E0F7240A1B663AA365FEF468DE8B
F042032FE0AE9E6B056F12C57938B07D2B44B3C46F89DDFA403895D44817F9F4
8F217D5C46F4583230F195AE7E6F4D20CAB9F8DC6E18CFAF1B031726A81035CC
C15BDCB9E0FF04CE7DEDB427F6D0EABD62BF312BA39C4D88512A8506E9720576
5C83488B86B6A0306D4C4DECFEA1C3EDEAE9C1DE76B898BBB105651516776681
93DDA4218476E84A314F10E5C27A27B59664E856EDDE290103A0D490FD7514AC
B5FDDAB24D8567A8D6B9C1E3AFF6D3271E5EBBD62A257C81E338E2E3D911B49C
B9E28405DA733CA68E3C498E27493FF1368E57D1D3BB77BCA871A2411CECE147
03077017D897B4A5A99A0CDF2A6844C9F34F7F91982BA80758871D7668B50128
26C1076AA31C8E8947139C2A4662B1CEBC867B03A15ACF9E4AD52245D39EB081
04C947E0DA8CAF20005209053B640D5611AE19A2B1BBD8140AE17D9B52F8FC3A
F36F3C7FB2EC0AC2F7B9151C1ADC3E6A9C8328CDFA38D00DD18317DF8D8AE98E
2882439FA81903941B363A7D885B4830EE867238D61D75F0437499D49B3C1846
FF96CBB569AAB29B70C083790CD40007376F134F34EBC44659A9611B19B78E4C
15CCCEC39967AB61994F100F9ECBFA82B75F3DD8F31E35FE879ED1B25849624C
5E074161667F436EDABA6286CDBD70C1E35DA641DC6017D0F46FDC46E540F36C
B05E3DA33ED51155E30998CAA4A7A47BBA02C421B3C5C23A6085587569E8A25B
10201D202672DF6276A805DFFB0936772A5853359AAB413DD3DC65B028BFAF32
3BE9529987B6947DA0E23BD88D715EF368CBFBAE8B109F4A152658F4F1E840D5
08293B2C9047AB887B098E6595091B5602AB9384BF4624522F116E8EBA323EE3
582AA955A163C1F9B88E821429F7F9A655FC63792B1C2255F735F7BD08BB942A
E23B008CA80328C260A698A36E2AB3D4C4A65E6E600122B1D7423E7653D75334
BCBCA5A24A49F5B6D3E1790B809B68B7EE0B23D7B56B92C1791727C669AC3B94
6DAFF7055538D9EF41CEB96A8B891DEA1736C89B2332FF30F98EF02D86C81A79
BD71C402EA64DC11C4E8F19421033F6547601D4AD7B7E9B73C3A30201FEAF82C
42731FBCC0BA16BFBBD1A306B2683EC96BFEF18383303441455D612544E2BA54
D3FF54C72D5F19A6CE989DD755EC5137E2B13148909307888EB2E1302D2FEA61
B5712A9DCEC7F91BB6486EAECAC2C92589E7EA35A8942DD31DF18C5D24AB25C7
65E206A320CE450E8D6FC717AE642526CDAC59D1505EB8CCC47828C6CBF0B2DB
3BDC7EDD96E8FA957EC9987E8AFF8741FD1E040A0A233F36B978160CD64E2B84
ADF7DFFB59677ACAC42F15A2CF7028D7A8E544EBFF6DB7F40082CA9A0377F6FD
5DB8FA7EA46F9BA23A757C5AFD297FA0A80C519BEEC9FA94A58987F21D1307BC
E06573D03A52C28419632EAAA119B8B936D5360F033E797D1D36005AAD7C9C35
053E9977BF678B1741668CCC225C6360AC65CD13BEEC862544652EFAA5D4DFEE
C43FB201F5C28660A90767A239B90F5B51F95EE8636681A948FFEB0648CF6A36
E9BBF156E338F2D34DB021513CD665D0D54CAEFA456AFBCAF0E4380A8EACE7E6
23F6F768789C3A2E33AAB5C5EAA039D9FBF59EC97A617F43A234E929564D4CEB
BCBF72557C206B021679051F6954A239FD9E80A2AFFCFE05224DF24EDEEFCF2A
4785C8B62FDF4BB9D460A60C2AE97135F987CBE327E96A13C615827FA559A4D7
86F6BAB6E3CA42C0AF211E3B2B23FBA9802A654D7FD0B5052C2B773DD06E56BE
52B7A87E16CE204B15D4BE7A6E2E00D15DA6B3164113F1F1E0E668FAC26A810F
440566A847AAC8AC3E2026FE1A7B66B7FA14B2D2E66B9C8DC9F6B0EEFDBE8485
57E59B327F831E4E4D7E71A27121938D2DA46C6CDB5559037AF96F3143A3D835
4C6C2A455871A048C3C38BD2FFE76547A623EEA661349BF28AD7A82A35EEC5BC
539A2CE54AE7AC8F826216230F7C781C0656A1FDED8E4A26E53A9DD342FF1DA6
2B9948E9F4D0186AC287441B720AF55B9107DFC86AE31C1ECB691A61BAF774C5
660D338B85193C75C0B5B9B632D6618B7F4D54DB7BE8FFAED9A98A420CE9F380
69E1250CB6D0E7D00A40700F887CF58F86DFBE70432DC8A12E7BE069493A541E
A00EA9A7F5CCC83A8C7E44EB2FB5F9ED1B67E2A55DA185CCF91ED91ACAC3FBB7
F69217391BB7A8FF61FEDEBB063F3DEB910B53BFB72993DCC5A5665925674DE2
352082DA34557F25D7486A929DB35D93213601169D836D5E07D4A9DD8CD8BBCF
6546A28A6EDEF62912747211517685CDE7AA1B41DC50C2FC19FD7ED938774430
D3C8CE30C36B50364215AF44FEAF783B31CFB37C73BF9A15424D3A0A4C0BBCAB
C768B0017FF064EC8F6C3A31428C11A86C7D2F97B95454CF89A208ECB3EE4842
853A9E5BA2DA036DFD12BC325F5DD7F0DDADADBE228AA085787535CA7C4758BE
BD5831ED9CCFBC4564FF43E0B580F6B237B4FB4B2BF1BFBF8F01201D9258918E
A8208DD305CF49AD6AD8107F62A64D7129AB437CF23DD482787AA428C0157E15
E9DB1D4D51375B6843A459BD5C2A6BA44BA9AEA27C57E375D5B3C82B326DAF59
567EDD4BCB90BD292ADB15C8A49AA5B1C0CC9369C8E62FA831E9C8E8097BA603
8D815518B1155B82E07A500C4FF3F2C0BAC14F33D2B0EF69FF076CD6A5E53860
6F0E833402E5D585AD17CF425B31A71E2EB72F141FD8EB72BB7889E74C449C61
EC4EAEAF596D106371AC3F84E3E9F7949388C2B1EC52C27F6115FC98A1FC8405
303A95863F7DD40477E60CC0D5AD8A0C40A8AD9282C217068F5641E352AE0136
FB3ABA429B6063451F0CCCC3E110B03E79C8DE1BD23462CA9677DFC097AB8CA3
D912439A2B67CD4F4AC1EA34590D1FA3840444D57C2C81B7DED4B684F2B0EB39
6539BEC439B63F2004DA0A298682833BD07454FBB7FE4112F8D11944DD9F404C
88EA38D7E4622A778795962B19F214C7D2AF417DEC1103771B32DFED9B0DA6E6
AF17D39AC78F96F8F9DCABE1BFF2DEEB2DBACB45BEA15458B24777D83645DF38
52B7C2A74F9937B14E016555CF1C9575C40CA25D139A8A45D0DDCB36591A6154
33C92CF2A6EB4A8430973FF292FA65C5A1C198607491823E3B29F63351F08EFD
9BD2A3279EA5BAA29F90B317F1FC3F29895C218AE17642B83C43D371D2A0B1B5
0FC9F46B455D483E937C92CB723129EBC1E40BDC6AF871FA8D0A9A108BDC7904
A18D8A02FBDEB5FBCC206900591395E750DB7C28A216FEEB8C8B385D5E2D7D25
47FB210035DD0BE69B31B340D5B77893FB9EA7ABC72EA4930A7D3DA87FDBF5FD
0A6C24E8CC61EE783337B8C987805715190F3296C1F12A9EA701262E3C580734
75F2AD18141F170FD9F9A97548BED2A5612DDC750FD02FACAB33A28037D9EEDF
7C4968296D7F4D6ED07A7C35F27D3D4F262313A04295BCEA66DAF4750FA265BD
F1F5EDA09ABC14CBF3CC9DD1EE6638BD1B79D84734258BF131C39B6E0FC49958
5E6D7EB95078DED2B885304D8D38543806791A20E4127EB9FEE907D3E32B86F9
97942FC747586F4E9CAED5CB50951D3D64DC66503EEAB627B82F44A42AB27E5A
F848DE3CD14026F5E4F2AA1C2FCDC7C34BF1BE59D32D5BEE17D3E9119D2F2B8A
7D55729968D7E257B6CCA6D1D7E206AADCE2BA4CAC6F217884CB82B0C8A6242A
7294596E763F9A9247EEB28B3729D0A272632F6C4BDD3507BF427FA0E7DBAE93
0915F9251B858306EC432330568476524C93878FE62BB1BB6A15E77E9D0F097A
1DF949FB83041AB8EB365D766CB2822D2BB6BF5AFE0260207A4F8E1B1AC34DBF
99EDD6A1E043C3E3DAFE5765760AC3C558BAF38708B2416671725DC924C7EA4B
584E7800C6FE5EA77F3AD882409FA949EC75EB7C129FCA1F1DF615024BD872CA
5E8C54B449B2C46E704F24CE8C311FDA31941722262053AA8FCC142597181511
94B325A6FD9938998EDBA3D856136453D5B2D64AF294F4A5EC9F129C60AF738F
54C7E0730349B50FD281586B50DE8E51A68EAAB3B5CC2BDAF25C369F46B987B2
D1C1C5F2FAE625AC4B0EECA81F0B986483299B3C518321572BA86C0DECD9F390
A437263BB9AE058932F441991C15E96B925425FE57817B2A59A1AABDAE850C10
A7A29B8D2FE72FF51FFFC57458E3BF68F2D655C491C9869CC91695EF858A894E
6C7AD8CA47AFFD60FDC89B43C148F14689FAEAE7C83DFA01BDF0B95B07113E8C
1D75C60D09DE8C20C34B624AAF2C5629567B30E34B5DB8BA11B4654984689742
919641BBC66090B4AD1A33570770FCA500DFDC4DB7A42B9D72D9D54974D0EDD3
B034F0388DE8EFA8A70E40B843CBEE993EA130BE53051A08E87F3440382D457D
66EBB84E4FF970F4DD62DACC4A4C2BFD33692EEF53003180443B67357329E250
6F2121F8EE8497B2DE9C21078F9BEE5B5FC4DC5EC9A352A7AA0674F0485D8652
44010164ABC0DF94B62A8A72F3A5F56EDDA230353D8778B5BC6DB501C59B829D
82B089D314A728F7992F7CEC192EF23FB4EB4CD57C4B1466D69AD804A6C98EAE
6F34A4924E89FC5C4D557A040BB75993B9723C5ED2C1E9E2B6EE8AAFF460413B
6BEA78968C590AA7CF59D995DB32474A32691AD18D9478901B23907BF08BAAE9
DA7260574961557B2F741AC6DB9D3F1C9E8DC69062058F37C7442028709634B1
4970B0D8E62C6D8B467980BCEB28FBC1B1EDC035D9E13AB73FA3CF732F2DE91B
3C79F31AD24F216B0DEA6F5074615787F640987964C5259A12F45817DE8B6273
CBC3F72FFCF5B0E8B3CE48DB395EB90DCBCDABB175D9D8CE2FD5F2B74419A72E
6F4927098A4CB3B084D98A3A2D3459828DF7E2415589181AAE82214ADE3B6822
D2F32E8B4690F73ABF68D9A69494A879377C9558A98E158948DF7745CF29FAE7
A094F1B0994EFA16FCC7017EE3A3EEFAA3B4B7E7D165AEF8658E57A12959146E
353E153D960AD186FFACB8C2DF75B5AFAA2204367BFF64AC4CDE3CDCDAF63A82
5CC68F0726E64003B3BCB88E7864E8036D06A59820817182CD51BFB240F11AA0
F8785E950643059B7770C17ED2861D61D6F719A3A77E19F8A689F595EBFB6F7C
70347535F591C7CAB5808AAA7B22539795290CF755A3DF9C640E61CF5F24F9ED
7E63F126A191E6A95DB4D6F4F1C4A15503B45F3902EC290806D9414DA10F68B4
ED2D969751AC1ED040FC28BD3E4DA9E0B4B5542ACAA695D4099DCF4B1C270F43
8C4D254BBABDB49090B63F195A1AD0508C09B321F31C34C29859FFB51EA49484
B5934737CAB0DADD6763135DE956B49D10AA5C8F2DDAD19743C61A6A5851F85C
6C7BF3A4BDC92B7499C698A922081AFA2CEB44A5A36832153DA248730F40D5AC
6FC36BC546554063D78235B3554618B6A1FF3A10C027E3CB2E54286E69FC9A90
C970E3F9E135386A12B9A19E7B1D74136F0A0ED4D29B3DE7635108D5A72CC0DF
FB7B0B6DD0ED98465E64545D35B5D6184E99F71C3DE22C384CF6AD1673028B50
E0F2F5531C9FE2772907E340500994A6E0ABADE30089064E9BC53A26C9B370CF
3ACFAADE13D51C34E2B55E7A7995191458184AF8608C3C52BE089EAB98FC6B35
F92D8D82E73C718FC38E2FC36AFB6835F97333895215AC26346E258EFF5CF308
5C1A8F198401981CBB47AF06510996D5BF98A3D697F22A24DA6EB16A2CFACF2E
34F89403023AC48D4BF2682706F27D3EB26935183638D8C896D0AA195EEB8144
BC985C6DA272488300A9D61D604777ADCEF906AFFF0933E39E1C3375232B37A7
1223323F3B27438A068BFA1028301F7F2C7FDDEF9D6FD612CEE83C90C307FBA6
DEFE82C82914B6394F40C44280200A34733D5E2864D9DB35AA4802C141255C12
BB6CCF3B994B280567C875392BB8DEC250686034244B9849C3307E52C49992AA
A9E6944C9C5766CF513B527CB36DD4A5B4452A2F43D64399234D5DCD11A4762D
B1D8CFB18C10822A856B40A82218FB934A0EE603AA189087DB57325F62B870FA
BC9CF26B77A9F6EBFEAE181396320F7457525C74A373A3F9AA442C7E4654A76A
371AD3B4B57792282A83C80EC3653EE7EBBA5AF4FD9E47698B011EBCDBA4D556
C0D572C0CEFD01D2C0E4A52328150904C0E5AEFABA2F6862BC341B5682AE3B6C
E0201336BAFB1674E5E3FB6C3431CC1466C68D2FAD39D5866A377BA1CF73B24E
1F2BDE33B5B05A5C4A1A86D17DF8869B9DC6B078ADF0335BB0567E3FD080634E
B051EDC9990C88D812F4619FC765212AB2CFFC8FF161CB72484D3ACBA8467C9C
62C577A3604717B8B313FDF48F4B93376FCBA9FEF8DAA80E676AA8F5D80F4936
7D75F5F11911E533CBA87B21B9E7248E20E2BE817ED9D6629293859320BEE40C
82AE59168F0D4D7DDE4447BA0E9C5A5014B941ED759C88B3670526B1E663EA76
735D1B4194022F710BB3DA805CE102E0974EA5A76FAD4A31A06E34776498A53A
AF2588CE72F204630BE4998E598D4A56DCEEBDC79F73314105DCC0F2D54C0F82
D24F278E212A5CDAAC89AD5DC6D9B705905EBBAB8C1CFE5BEC46E285C472C617
9537C31BECA1D41946AD6A0AFAF3119A69A7EFBB1F59FB9A53BFB30AA7778469
A64CAB1D1E051C107EA100E2B27FE4FD2BBE8EB659C34870AF29711CA946CD6E
0161EEE4E404328024A187C50A3C9F15755D0885EE27B427073A013AE556C2D7
3B68EEFDD866CA9D587CEF3898741C77D9C44A0D5D62973A447D6C9A0D5F11CE
DF6D943E02E49B43FD08B2D266244C98E9E4010098E8FB54CE8CEFDBB40AC4E8
052532078BB7487DE98F11D3E7ED259FA40B92916F905138D274B74FA71A8CD7
590A142E09959C02AA9D61C1AC12E0EDD6D75735BBF4E68BF67AFC5284F11694
66ABE9A910226EBE7BF67E942DCE4F7B237E0E837C27A9732C6B61359ED11C84
FAD19CF54D82E0275CFDBFBBF89251469D2C7A83109C76848C63A85E80A93916
F67A70590E09B6CB81B915A72E69C33D11268443ADD7E9B2440FC7D26CD9FBB7
69416EB4BDE515318522453B94B484713AD62FB8AEAE5D2E1D1A2AA957E888C3
ABAEA88984277EB69CDD559CC680CA27B49D5C57910A98D2DD9510A3883764C7
999FE9ED322D263DE89F39A743FE2D028D194992D0D9B3466C8ADAD321014FCA
12332B3B708A0A764CEFD91C33850CC5E99D21D69A575ADB0592DDF5F54AED81
A14EBDB5757637BBF2A8DBB2E3395855CA67C9E5FA8188DD924949EAE9819133
F7FCD95741591AC51E35174B3072168BF9FE71417D1C287DC73E38016CAA1E0F
3C17D3DD82802E1C2FBFE9FA52D6D3ACCEDCFF095A07D6ACE58C3B36EE15916E
9D9F9A3AEE59A3646AA11C3A088DBD292BC74421C64A0E2FF4FFD5203E048A9E
2CD25600E6E174A1F2CFEF46DBF06F6F5BC93950259CCCA5353776481A492C0F
28A6EDAE15878D6A53357B7CBF2894B9641014582115DA54AC1C3B5EE5C6E01E
028EC0E5DC8330F8D9E24A2977FD187D3A8DF11ED573CA3EECCEC97868B8A766
657C6F5670254CC3B4B3585F6A7434665486889A30F68E803C46F7023796086E
170A533FA8867F7B04B972EC2286FD31CEC2B8BCCAE1407570C4D9464E9E556A
01584A56C5944A6741CF5630595AF156A04B5E9324E9F8FC17C787BF5529011B
3EDBD24B3E7862E20572B21B0445D9A025B0777EA58B273C02D8C936C228F989
9AFE555A9399B6402FEB7960A593A6CE9B489A37A35C31A01FBA6B8ABDDAF1EE
04EC1F16B46EDEF294E95BC26F63528F4119E188867452FBE80B79183829680D
C292B7C6482D8C90CCF41B3BFE3C2A043AA4A7714EEA92DECD3E8B981908767B
69B194240BE27283334157A4E707A577A040485E851247F4EE4EE32EC26CD542
92F6C65970C423640709FAE2DA154ACEBC468BDCB7EDD1F356C7F3D75D6BBF16
E005A5241F3A19D93656705713D40C1DA1D9F567D4BA7211D92FE4597D361561
5C6B5F67C6BEE0ECB2E29896D1B7E6568ACC80BF29FA822C2D81E0EF9A9770EE
6A2BBB35057848DB39750F0C48C89F76236E70F48B8463899695085D7923348C
CD11649239B3A04089DA48A41DC7DEF0E6616FFCBCC662A65E8A312319EF6775
69C629DD007902731BF15727D953F6B1DAC0FF6566812BFB9AC7435AE1A4AD3E
C7F0F29C80532EBFDFC9C3360E30838CCC8B1DE679243F660D57727A0EE2AC24
07A09D90926460178DF407CF9EF8751A667CCCC932E9865C3964BB75FB90A1BD
ECB179A6E8798372D13717E7188D5CBBC0F1ADE67A97EA6ED59F3EE48038C260
E478063C97BF42B568D07FCA296C5299750759FD0A7544DAE02AA2881255E4A3
D20A61D5038D4175E6610ABE768AAA203116677C7B21539C216A7AD052B37FF5
46F3E9DAEAD7BDD9F6D49E532B982973696E4213563FD213217BDDC9A35CF1FE
79B437E662962A2545BB398D120B01453EAA299020E62F3CFD099B0DEC5E68DD
DDE34D74CD1F8CFC96BF394C1CC2D294509D5345035E97CD66392F56542A60DC
006AA4CEF26223FFC95CB3A188BDD49807E8FAB2BEA16412BAF19D6F42FDFE8B
E8CFB4322F1052679C58A316C7CAAFCD613C56B9970AC8CAA8BA1BF667E33684
CF32A9B430D187A58DA96F3CA75C794C62AB469A8AEA6B3A8204D97E2B043CBC
29DB4E61F87A6C99CE42B9CE1BDA9632D0DA0838D93694F68D0A18DF997A23D3
8AF3910C2ABF4E006F5E850508FCA174DD0FBB61D1180E312C4A7471F8AC4C9F
C5AA79570F378EDCD53BCA7DA895CC4684DB428A6916F5530DE157FCB0865506
6681D6784B5AC04F5AEE771B0307F010DD451C698135A606D2C8FA715B2652CF
184D609528F80A1B271E81A00C32E9746685A3B1ACC9D0EE1E2FC1D9AB1F3A5A
1E7BDE71C7958A2425C86948B7DF25CA5BFE5A7C45E7F60856FE8A1862DC964F
9D02CEB19ACAD80285DF90900BA5AB5060208C73B6CE9FE442ECF52FAB580505
D7CE767EA4AB92426E9B04C718E7B70602C9880E98923329CAEA0620697E8A47
20A7025FBAF96302342A342ED8C652074826889ECAFDE5D25D5F5A0CAE2C07D9
BE655047138C636471001687DB819D1190A74ECF9256A58EC223908766B76726
BAF8A8F38DC16FAB832B34C9C144607E06CFC3C88B0DDC3D16F62105C988FD13
E35C99AABBADF4CAF9E1FD7465181ED31B9CF35EEEA83E273D7F7E6DBE35D13A
20748B1BACD2F7CBF471F2BF98070E57B7D164F411DD09D5D4E8F0D9899E64D6
2B8B3E148C7C2182A88568DDEBEE958903D9174CC9306D4B2AD247755AD2D787
08D3F0A6DC17DF35DFA0C5C56B1813F099FEB035FB4EDFC6C83A85F1D4344EA5
91CBD90725881A47B5C2D8C8CD50FAB22D2F649658EDE96D356C67D9EA9A1664
A845AF84ABD8AF08E5BE37C3F91F5F3233C74BB9BA0A71AA6AADC19FA43267D6
4312F6E07C79455EF8F15B3ADCB9415336809923BDC9B6573A62197E87A497FB
D18FDD2F77D67C920414FC41891D4811C5E6009CB4D50B8FDB2AC997183C1648
D2AC9FCD914BBF1779C9B782CC7C1332FB042386AACD91E3FACB7436E7C0EDE1
04B61F1E851C5D9AE38F8871813830D222693AFF97D99F2E03F14D571C6491B2
F356987FD49B9C1A25322962DDAD101086408EC59DBF370F2803B6DC3BE7A9DF
AE27B73AF334A51A801267AC5372D66F3E830AE11A3DA2A604F96C0E97A8C901
A6076415FB6BA3AC13777E5B44AF1131F755413D2395B90CD32CA65AE07C3245
610B69E67470AFC4313EA736A91012B493111E844B549A5B72D4BEFF6BFACE46
BA9B1EBE28EEC69F52AD87709EBF16D71D82C433D8A325BF947A7166791B92AD
4B465FE6E5357C3A2930B5319209D472626E37DCB3BE40911D178500DFF70424
9BA50CC4C3266AEC2EFA02D33B4EAFAB8C818BFF6B3E415FC7F4E8D9643B882A
7EE75B50744288615B4A941B2E9C353009A79BFD878BAAE89408F9185480D9C8
6090F71935CF34EE5A9D5170F032303F1E814669C2DC577583AEEE044B2F82DD
513284583FDAAB169E5B67EC50BBB566BCD0ED5246D3DB7E769C6A5DF0630989
719088E5F2C8CF0FF7ABABB5EA214A51DF3E46E68CBF7E4129E4400A352AB5FF
BA1653A05459D520348FB428CF25D9DE75249259F819CC279AE560417D808EBA
6470BBDD9EADC5166289C73A0B52EC36D64F09465C71D11155FE1F48966A5794
69DB2B49AF8ACE03C1ADC773F57E72834E609669238C969076066E94FF9BEC7D
82D47A9D9F11F20D4338894E732BDA1831171B8972C9C7F16C6C86C8AFD402C9
6655C08E4860052C169C7F34F06C694EE885FA942B75FC3219C7917614398D52
9689667D62738BEB036AF0DEF0F88D6ED06000BC48C5948A56327B2D8389E53A
249B78AB9B48359DC1662A124D4C8ECCAE5316D92A7A90710993DEC83BCF8D1C
C95CFB7CE04B129139E4E25EC0DA5F5114D1A2B348DCFF8E1EBA8D355EB179C5
A03D5AF4BBF9E76777859779CEB6
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600
(CS444_FinalPaper_AlexHoffer.dvi) @start /Fa 134[40 39
2[45 28 34 35 1[42 42 47 68 21 38 1[25 42 38 25 38 42
38 38 42 8[62 2[62 59 47 2[56 1[62 1[52 2[32 62 6[62
6[25 58[{}32 83.022 /CMTI10 rf /Fb 134[71 2[71 75 52
53 55 2[67 75 112 37 2[37 75 67 41 61 75 60 1[65 12[94
1[100 1[92 101 1[128 3[50 2[85 2[97 13[67 67 67 67 67
1[67 47[{}32 119.552 /CMBX12 rf /Fc 133[37 44 44 60 44
46 32 33 33 44 46 42 46 69 23 44 25 23 46 42 25 37 46
37 46 42 3[23 1[23 2[62 85 1[62 60 46 2[57 65 62 76 52
65 43 30 2[54 57 63 60 59 62 1[39 7[42 2[42 42 42 42
42 42 23 28 23 2[32 32 23 4[42 21[46 48 11[{}64 83.022
/CMR10 rf /Fd 134[50 50 69 50 53 37 38 39 1[53 48 53
80 27 2[27 53 48 1[44 53 42 1[46 9[99 2[66 53 2[65 72
1[91 57 2[36 75 1[60 63 73 69 68 72 11[48 48 48 48 48
1[48 2[27 32[56 11[{}43 83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Final Paper) /Subject (CS 444 Final Paper) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -0 /Dest (section.1) cvn /Title (Introduction) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -0 /Dest (section.2) cvn /Title (Processes and Threads) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.3) cvn /Title (I/O and Provided Functionality) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (section.4) cvn /Title (Memory Management) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -0 /Dest (section.5) cvn /Title (Conclusion) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150
0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0
TeXcolorgray 0 TeXcolorgray 153 1009 a Fd(Comparing)31
b(and)h(Con)m(trasting)g(Essen)m(tial)f(System)g(Op)s(erations)g(in)g
(the)h(Lin)m(ux,)g(Windo)m(ws,)f(and)1351 1109 y(F)-8
b(reeBSD)32 b(Op)s(erating)f(Systems)1707 1327 y(Alex)h(Ho\013er)1821
1615 y Fc(CS)c(444)1767 1715 y(June)g(2017)1735 1815
y(Spring)g(2017)p 0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fd(1)77 b(In)m(tro)s(duction)801
266 y
SDict begin 12 H.L end
 801 266 a 801 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 801 266 a 0 TeXcolorgray 2901
w Fd(2)p 0 TeXcolorgray 150 448 a
SDict begin H.S end
 150 448 a Fd(2)g(Pro)s(cesses)30
b(and)j(Threads)1228 448 y
SDict begin 12 H.L end
 1228 448 a 1228 448 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1228
448 a 0 TeXcolorgray 2474 w Fd(2)p 0 TeXcolorgray 150
631 a
SDict begin H.S end
 150 631 a Fd(3)77 b(I/O)31 b(and)h(Pro)m(vided)h(F)-8
b(unctionalit)m(y)1604 631 y
SDict begin 12 H.L end
 1604 631 a 1604 631 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1604
631 a 0 TeXcolorgray 2098 w Fd(2)p 0 TeXcolorgray 150
814 a
SDict begin H.S end
 150 814 a Fd(4)77 b(Memory)31 b(Managemen)m(t)1197
814 y
SDict begin 12 H.L end
 1197 814 a 1197 814 a
SDict begin [ /Subtype /Link /Dest (section.4) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1197 814 a 0 TeXcolorgray
2505 w Fd(2)p 0 TeXcolorgray 150 996 a
SDict begin H.S end
 150 996 a Fd(5)77
b(Conclusion)733 996 y
SDict begin 12 H.L end
 733 996 a 733 996 a
SDict begin [ /Subtype /Link /Dest (section.5) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 733 996 a
0 TeXcolorgray 2969 w Fd(3)p 0 TeXcolorgray 1929 5349
a Fc(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(1)135 b(In)l(tro)t(duction)150
265 y Fc(Computer)29 b(op)r(erating)f(systems)g(ha)n(v)n(e)g(a)h(ric)n
(h)f(tap)r(estry)h(of)g(history)-7 b(.)41 b(When)29 b(w)n(e)g(observ)n
(e)e(the)j(dev)n(elopmen)n(t)e(of)150 364 y(the)g(mo)r(dern)g(op)r
(erating)e(systems)i(from)f(the)h(ones)f(resp)r(onsible)g(for)h
(handling)f(gian)n(t,)g(ro)r(om-\014lling)g(computers)150
464 y(\(p)r(erforming)i(what)g(w)n(e)f(could)h(consider)f(to)r(da)n(y)h
(as)f(ho-h)n(um)h(computations\))f(to)h(the)h(curren)n(t)e(climate)h
(of)g(tin)n(y)150 564 y(pro)r(cessors)24 b(co)r(ordinating)h(and)h(tac)
n(kling)g(loft)n(y)g(c)n(hallenges)f(in)i(our)f(laptops)f(and)i(mobile)
f(devices,)g(it)h(is)g(imp)r(or-)150 663 y(tan)n(t)c(as)f(computer)g
(scien)n(tists)g(to)h(understand)f(whic)n(h)g(comp)r(onen)n(ts)h(of)f
(an)g(op)r(erating)g(system)g(emerge)g(as)g(b)r(eing)150
763 y(essen)n(tial)32 b(to)h(the)g(prop)r(er)f(functioning)h(of)f(a)h
(computer.)52 b(Through)32 b(this)h(study)-7 b(,)34 b(w)n(e)f(can)f
(see)h(that)g(pro)r(cesses)150 863 y(and)e(threads,)g(I/O)f(and)g(pro)n
(vided)g(functionalit)n(y)-7 b(,)32 b(and)f(memory)f(managemen)n(t)g
(are)f(three)i(op)r(erations)f(of)g(an)150 962 y(op)r(erating)36
b(system)g(that)h(are)f(crucial)g(to)h(making)f(a)g(computer)g(that)h
(is)g(in)n(tended)g(for)f(widespread)g(h)n(uman)150 1062
y(usage)25 b(w)n(ork)h(correctly)-7 b(.)35 b(While)27
b(b)r(eing)g(able)f(to)g(pinp)r(oin)n(t)h(these)g(three)f(features)g
(as)g(imp)r(ortan)n(t)h(op)r(erating)e(sys-)150 1162
y(tems)k(topics)f(is)h(useful,)h(it)f(is)g(only)f(when)h(w)n(e)f(see)h
(ho)n(w)f(they)h(can)f(b)r(ecome)h(realit)n(y)f(that)h(things)g(b)r
(ecome)f(truly)150 1261 y(in)n(teresting.)35 b(It)26
b(is)f(the)g(purp)r(ose)g(of)g(this)g(pap)r(er)g(to)g(elucidate)g(this)
h(b)n(y)e(explaining)h(ho)n(w)f(Lin)n(ux,)i(Windo)n(ws,)f(and)150
1361 y(F)-7 b(reeBSD)25 b(eac)n(h)g(implemen)n(t)h(these)f(core)f
(functions)i(in)g(their)f(op)r(erating)f(systems.)36
b(Along)25 b(the)g(w)n(a)n(y)-7 b(,)25 b(w)n(e)g(will)h(b)r(e)150
1460 y(able)h(to)h(see)f(where)g(they)h(di\013er)g(in)f(suc)n(h)h
(implemen)n(tations)f(and)h(where)f(they)g(run)h(parallel)e(to)i(eac)n
(h)f(other.)150 1602 y
SDict begin H.S end
 150 1602 a 150 1602 a
SDict begin 12 H.A end
 150 1602
a 150 1602 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150 1602 a 133 x Fb(2)135 b(Pro)t(cesses)45
b(and)g(Threads)150 1917 y Fc(A)33 b Fa(pr)l(o)l(c)l(ess)39
b Fc(is)33 b(an)f("instance)f(of)h(an)g(executing)h([computer])f
(program")d([1].)51 b(Eac)n(h)31 b(pro)r(cess)g(is)i(giv)n(en)e(its)i
(o)n(wn)150 2016 y(memory)25 b(space)g(to)g(p)r(erform)g(op)r(erations)
g(within.)37 b(One)25 b(cen)n(tral)g(task)g(of)g(an)h(op)r(erating)e
(system)i(is)f(to)h(sync)n(hro-)150 2116 y(nize)i(pro)r(cess)g
(execution,)g(as)g(w)n(ell)g(as)g(to)g(decide)g(whic)n(h)h(pro)r(cess)e
(gets)h(ran)f(when)i(\(this)g(is)f(called)g Fa(sche)l(duling)7
b Fc(\).)150 2216 y(A)29 b(thread)e(is)h(similar)g(to)g(a)g(pro)r(cess)
f(in)h(that)h(it)g(is)f(sub)5 b(ject)28 b(to)g(similar)g(sync)n
(hronization)e(and)i(sc)n(heduling)g(con-)150 2315 y(strain)n(ts,)d
(though)g(threads)f(exist)h(within)h(the)f(pro)r(cess)f(space)g(and)h
(eac)n(h)f(thread)h(running)g(within)g(suc)n(h)g(a)g(space)150
2415 y(share)32 b(resources.)53 b(Pro)r(cesses)31 b(and)j(threads)e
(are)h(essen)n(tial)f(to)i(an)f(op)r(erating)f(system)i(b)r(ecause)f
(they)g(greatly)150 2515 y(increase)27 b(the)i(amoun)n(t)f(of)g(w)n
(ork)f(b)r(eing)h(done)g(b)n(y)h(pro)n(viding)e(an)h(illusion)g(of)g(m)
n(ultiple)h(tasks)f(b)r(eing)g(completed)150 2614 y(at)f(once.)150
2739 y
SDict begin H.S end
 150 2739 a 150 2739 a
SDict begin 12 H.A end
 150 2739 a 150 2739 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150
2739 a 150 x Fb(3)135 b(I/O)45 b(and)g(Pro)l(vided)g(F)-11
b(unctionalit)l(y)150 3071 y Fc(Input/Output,)37 b(or)c(I/O,)g(op)r
(erations)g(are)g(crucial)g(to)h(an)g(op)r(erating)f(system)h(b)r
(ecause)g(a)g(computer)g(cannot)150 3170 y(p)r(erform)k(particularly)e
(in)n(teresting)i(computations)f(without)i(receiving)e(data)h(from)f
(an)h(exterior)f(source)g(or)150 3270 y(writing)d(data)f(to)h(an)g
(exterior)f(source.)55 b(T)-7 b(o)34 b(tak)n(e)f(a)h(ligh)n(thearted)f
(example,)j(try)d(to)h(think)h(of)f(a)g(w)n(a)n(y)f(that)h(I)150
3369 y(could)c(t)n(yp)r(e)h(this)g(LaT)-7 b(eX)30 b(\014le)g(and)h
(generate)e(a)h(PDF)h(from)f(it)h(without)f(the)h(op)r(erating)f
(system)g(\(at)g(the)h(v)n(ery)150 3469 y(least\))i(receiving)f(data)g
(from)g(m)n(y)h(k)n(eyb)r(oard.)51 b(Pro)n(vided)31 b(functionalit)n(y)
i(is)g(imp)r(ortan)n(t)g(to)g(the)g(programmers)150 3569
y(resp)r(onsible)24 b(for)g(writing)g(programs)e(that)j(m)n(ust)g
(utilize)g(k)n(ernel)f(op)r(erations)f(in)i(some)f(w)n(a)n(y)-7
b(.)35 b(Without)25 b(pro)n(vided)150 3668 y(functionalities)35
b(suc)n(h)g(as)f(k)n(ernel)g(data)h(structures,)h(for)e(example,)j(ho)n
(w)d(w)n(ould)h(w)n(e)f(con)n(v)n(enien)n(tly)g(store)g(and)150
3768 y(access)26 b(memory)h(pages?)150 3909 y
SDict begin H.S end
 150 3909
a 150 3909 a
SDict begin 12 H.A end
 150 3909 a 150 3909 a
SDict begin [ /View [/XYZ H.V] /Dest (section.4) cvn H.B /DEST pdfmark end
 150 3909 a 133 x Fb(4)135
b(Memory)45 b(Managemen)l(t)150 4224 y Fc(Memory)28 b(managemen)n(t)g
(is)h(a)g(crucial)f(asp)r(ect)h(of)f(an)n(y)h(op)r(erating)f(system.)40
b(Memory)28 b(managemen)n(t's)g(primary)150 4324 y(functions)34
b(are)e(to)i(pro)n(vide)e(virtual)h(memory)f(spaces)h(to)g(di\013eren)n
(t)h(pro)r(cesses,)f(prop)r(erly)g(map)g(these)h(virtual)150
4424 y(memory)k(spaces)h(to)g(their)g(corresp)r(onding)e(ph)n(ysical)i
(addresses,)h(and)f(allo)r(cate)g(and)g(de-allo)r(cate)f(pages)g(of)150
4523 y(virtual)d(memory)g(and)h(assign)f(suc)n(h)g(pages)g(safely)g
(and)h(resp)r(onsibly)f(to)h(pro)r(cesses)e(as)h(they)h(request)f
(them.)150 4623 y(Without)28 b(the)g(abilit)n(y)g(to)f(manage)g(memory)
-7 b(,)26 b(an)i(op)r(erating)e(system)i(w)n(ould)f(descend)g(quic)n
(kly)g(in)n(to)h(c)n(haos.)p 0 TeXcolorgray 1929 5349
a(2)p 0 TeXcolorgray eop end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.5) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fb(5)135 b(Conclusion)150
265 y Fc(Through)30 b(our)g(researc)n(h)f(of)i(the)g(Lin)n(ux,)h(Windo)
n(ws,)f(and)g(F)-7 b(reeBSD)31 b(op)r(erating)f(systems,)h(w)n(e)f(ha)n
(v)n(e)g(seen)h(that)150 364 y(there)26 b(are)e(a)i(m)n(ultitude)g(of)g
(di\013eren)n(t)g(w)n(a)n(ys)e(programmers)f(can)j(implemen)n(t)g(pro)r
(cesses)e(and)i(threads,)f(I/O)g(and)150 464 y(pro)n(vided)30
b(functionalit)n(y)-7 b(,)33 b(and)e(memory)g(managemen)n(t.)47
b(Lo)r(ok)30 b(no)h(further)h(than)f(the)h(di\013erence)f(in)h(ho)n(w)f
(the)150 564 y(paren)n(t-c)n(hild)c(pro)r(cess)g(relationship)g(is)h
(handled)g(in)g(Windo)n(ws)g(vs.)38 b(Lin)n(ux)28 b(or)f(ho)n(w)g(F)-7
b(reeBSD)28 b(lac)n(ks)f(the)i(blo)r(c)n(k)150 663 y(device)h(driv)n
(er)f(t)n(yp)r(e)h(that)h(Lin)n(ux)f(relies)f(hea)n(vily)g(on.)45
b(These)30 b(examples)f(mak)n(e)g(it)i(clear)e(that)i(there)f(is)g(no)f
(one)150 763 y(simple)k(recip)r(e)f(to)h(pro)r(duce)g(a)f(w)n(orking)f
(op)r(erating)h(system,)i(and)e(that)h(design)g(decisions)f(and)g
(tradeo\013s)g(are)150 863 y(as)e(presen)n(t)g(in)h(k)n(ernel)f(dev)n
(elopmen)n(t)h(as)f(they)h(are)f(in)h(an)n(y)f(other)g(w)n(orldly)g
(sub)5 b(ject.)46 b(But)31 b(programmers)d(who)150 962
y(desire)i(to)h(write)g(go)r(o)r(d)f(co)r(de)h(in)g(all)g(of)g(these)g
(three)f(op)r(erating)g(systems)h(need)g(not)g(to)g(w)n(orry)-7
b(,)30 b(b)r(ecause)g(there)150 1062 y(are)d(a)g(great)f(n)n(um)n(b)r
(er)i(of)f(similarities)g(b)r(et)n(w)n(een)h(them)g(as)f(w)n(ell.)37
b(Consider,)26 b(for)h(example,)h(ho)n(w)f(similar)g(thread)150
1162 y(sync)n(hronization)c(constructs)i(are)f(across)f(the)j(three)f
(systems,)g(or)g(ho)n(w)f(similarly)h(the)g(data)g(structures)f(within)
150 1261 y(eac)n(h)k(of)h(the)h(three)f(k)n(ernels)f(resem)n(ble)g(eac)
n(h)g(other.)41 b(It)30 b(is)f(only)f(with)i(the)f(kno)n(wledge)f(of)h
(the)h(similarities)e(and)150 1361 y(di\013erences)f(of)g(ho)n(w)g
(these)g(three)g(essen)n(tial)f(features)h(are)f(implemen)n(ted)i(in)f
(p)r(opular)g(op)r(erating)f(systems)h(that)150 1460
y(w)n(e)g(can)g(con\014den)n(tly)h(call)f(ourselv)n(es)f(programmers.)p
0 TeXcolorgray 1929 5349 a(3)p 0 TeXcolorgray eop end
%%Page: 4 5
TeXDict begin 4 4 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.4) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fb(References)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150 165
a 150 132 a
SDict begin H.S end
 150 132 a 150 132 a
SDict begin 12 H.A end
 150 132 a 150 132 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark end
 150
132 a 0 TeXcolorgray 133 x Fc([1])p 0 TeXcolorgray 41
w(Mic)n(hael)29 b(Kerrisk.)42 b Fa(The)33 b(Linux)e(Pr)l(o)l(gr)l
(amming)i(Interfac)l(e:)43 b(A)31 b(Linux)h(and)g(UNIX)f(System)g(Pr)l
(o)l(gr)l(amming)279 364 y(Handb)l(o)l(ok)p Fc(.)38 b(No)27
b(Starc)n(h)g(Press,)f(San)i(F)-7 b(rancisco,)26 b(CA,)i(USA,)h(1st)e
(edition,)h(2010.)p 0 TeXcolorgray 1929 5349 a(4)p 0
TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
