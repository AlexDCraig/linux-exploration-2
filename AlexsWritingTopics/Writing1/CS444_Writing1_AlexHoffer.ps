%!PS-Adobe-2.0
%%Creator: dvips(k) 5.96.1 Copyright 2007 Radical Eye Software
%%Title: CS444_Writing1_AlexHoffer.dvi
%%CreationDate: Thu Apr 20 15:27:50 2017
%%Pages: 4
%%PageOrder: Ascend
%%BoundingBox: 0 0 612 792
%%DocumentFonts: CMBX10 CMR10 CMBX12 CMTI10
%%DocumentPaperSizes: Letter
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t letter CS444_Writing1_AlexHoffer.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2017.04.20:1527
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: pstricks.pro 0 0
%!
% PostScript prologue for pstricks.tex.
% Version 1.01, 2006/01/11
% For distribution, see pstricks.tex.
%
/tx@Dict 200 dict def tx@Dict begin
/ADict 25 dict def
/CM { matrix currentmatrix } bind def
/SLW /setlinewidth load def
/CLW /currentlinewidth load def
/CP /currentpoint load def
/ED { exch def } bind def
/L /lineto load def
/T /translate load def
/TMatrix { } def
/RAngle { 0 } def
/Sqrt { dup 0 lt { pop 0 } { sqrt } ifelse } def  % return 0 for negative arguments 
/Atan { /atan load stopped { pop pop 0 } if } def % return 0 if atan not known
/ATAN1 {neg -1 atan 180 sub } def		% atan(x) (only one parameter)
/Div { dup 0 eq { pop } { div } ifelse } def  	% control the division
/NET { neg exch neg exch T } def	      	% change coordinate system to the negative one		
/Pyth { dup mul exch dup mul add sqrt } def   	% Pythagoras, epects 2 parameter
/PtoC { 2 copy cos mul 3 1 roll sin mul } def 	% Polar to Cartesian
%----------------- hv added 20050516 ---------------
/Pi 3.14159265359 def 
/TwoPi 6.28318530718 def
/Euler 2.71828182846 def 
/RadtoDeg { 180 mul Pi div } bind def % convert from radian to degrees
/DegtoRad { Pi mul 180 div } bind def % viceversa
%----------------- hv end---------------------------
/PathLength@ { /z z y y1 sub x x1 sub Pyth add def /y1 y def /x1 x def } def
/PathLength { flattenpath /z 0 def 
  { /y1 ED /x1 ED /y2 y1 def /x2 x1 def
  }{ /y ED /x ED PathLength@ } {} { /y y2 def /x x2 def PathLength@ }
  /pathforall load stopped { pop pop pop pop } if z } def
/STP { .996264 dup scale } def
/STV { SDict begin normalscale end STP  } def
%
%%-------------- DG begin patch 15 ---------------%%
%/DashLine { dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def
%PathLength } ifelse /b ED /x ED /y ED /z y x add def b a .5 sub 2 mul y
%mul sub z Div round z mul a .5 sub 2 mul y mul add b exch Div dup y mul
%/y ED x mul /x ED x 0 gt y 0 gt and { [ y x ] 1 a sub y mul } { [ 1 0 ]
%0 } ifelse setdash stroke } def
/DashLine {
  dup 0 gt { /a .5 def PathLength exch div } { pop /a 1 def PathLength } ifelse
  /b ED /x1 ED /y1 ED /x ED /y ED 
  /z y x add y1 add x1 add def
  /Coef b a .5 sub 2 mul y mul sub z Div round 
    z mul a .5 sub 2 mul y mul add b exch Div def 
  /y y Coef mul def 
  /x x Coef mul def 
  /y1 y1 Coef mul def 
  /x1 x1 Coef mul def
  x1 0 gt y1 0 gt or x 0 gt or y 0 gt and 
    { [ y x y1 x1 ] 1 a sub y mul }
    { [ 1 0 ] 0 } ifelse 
  setdash stroke
} def
%%-------------- DG end patch 15 ---------------%%
/DotLine { 
  /b PathLength def 
  /a ED /z ED /y CLW def 
  /z y z add def 
  a 0 gt { 
    /b b a div def 
  }{ 
    a 0 eq { 
      /b b y sub def 
    }{ a -3 eq { 
      /b b y add def } if 
    } ifelse 
  } ifelse 
  [ 0 b b z Div round Div dup 0 le { pop 1 } if ] 
  a 0 gt { 0 }{ y 2 div a -2 gt { neg }if } ifelse 
  setdash 1 setlinecap stroke 
} def
%
/LineFill { % hv ------------ patch 7 -------------
  gsave 
  abs /hatchWidthInc ED
  abs /hatchSepInc ED
  abs CLW add /a ED 
  a 0 dtransform round exch round exch
  2 copy idtransform 
  exch Atan rotate 
  idtransform pop /a ED 
  .25 .25 itransform pathbbox 
  /y2 ED 
  a Div ceiling cvi /x2 ED /y1 ED 
  a Div cvi /x1 ED /y2 y2 y1 sub def 
  clip 
  newpath 
  2 setlinecap 
  systemdict
  /setstrokeadjust known { true setstrokeadjust } if 
  x2 x1 sub 1 add { 
    x1 a mul y1 moveto 0 y2 rlineto stroke 
    /x1 x1 1 add 
      hatchWidthInc 0 gt { CLW add } if 
    def 
    hatchSepInc 0 gt hatchWidthInc 0 gt or { 
      /a a hatchSepInc add def
      CLW hatchWidthInc add SLW 
    } if
  } repeat 
  grestore 
  pop pop } def
%
%gsave abs CLW add /a ED a 0 dtransform round exch round exch
%2 copy idtransform exch Atan rotate idtransform pop /a ED .25 .25
%% DG/SR modification begin - Dec. 12, 1997 - Patch 2
%%itransform translate pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%itransform pathbbox /y2 ED a Div ceiling cvi /x2 ED /y1 ED a
%% DG/SR modification end
%Div cvi /x1 ED /y2 y2 y1 sub def clip newpath 2 setlinecap systemdict
%/setstrokeadjust known { true setstrokeadjust } if x2 x1 sub 1 add { x1
%% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
%% a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore }
%% def
%a mul y1 moveto 0 y2 rlineto stroke /x1 x1 1 add def } repeat grestore
%pop pop } def
%% DG/SR modification end
%
/BeginArrow { ADict begin /@mtrx CM def gsave 2 copy T 2 index sub neg
exch 3 index sub exch Atan rotate newpath } def
/EndArrow { @mtrx setmatrix CP grestore end } def
/Arrow { CLW mul add dup 2 div /w ED mul dup /h ED mul /a ED { 0 h T 1 -1
scale } if w neg h moveto 0 0 L w h L w neg a neg rlineto gsave fill
grestore } def
/Tbar { CLW mul add /z ED z -2 div CLW 2 div moveto z 0 rlineto stroke 0
CLW moveto } def
/Bracket { CLW mul add dup CLW sub 2 div /x ED mul CLW add /y ED /z CLW 2
div def x neg y moveto x neg CLW 2 div L x CLW 2 div L x y L stroke 0
CLW moveto } def
/RoundBracket { CLW mul add dup 2 div /x ED mul /y ED /mtrx CM def 0 CLW
2 div T x y mul 0 ne { x y scale } if 1 1 moveto .85 .5 .35 0 0 0
curveto -.35 0 -.85 .5 -1 1 curveto mtrx setmatrix stroke 0 CLW moveto }
def
/SD { 0 360 arc fill } def
/EndDot { % DS is the dot size 
  { /z DS def } { /z 0 def } ifelse 
  /b ED 0 z DS SD b { 0 z DS CLW sub SD } if 
  0 DS z add CLW 4 div sub moveto } def
%
/Shadow { [ { /moveto load } { /lineto load } { /curveto load } {
  /closepath load } /pathforall load stopped { pop pop pop pop CP /moveto
  load } if ] cvx newpath 3 1 roll T exec } def
%
/NArray { aload length 2 div dup dup cvi eq not { exch pop } if /n exch
cvi def } def
/NArray { % holds the coordinates and on top of stack the showpoints boolean
  /f ED 
  counttomark 2 div dup cvi /n ED 
  n eq not { exch pop } if
  f { ] aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse 
} def
/Line { 
  NArray n 0 eq not 
    { n 1 eq { 0 0 /n 2 def } if ArrowA /n n 2 sub def 
      n { Lineto } repeat 
      CP 4 2 roll ArrowB L pop pop 
    } if 
} def
/Arcto { /a [ 6 -2 roll ] cvx def a r /arcto load stopped { 5 } { 4 }
  ifelse { pop } repeat a } def
/CheckClosed { dup n 2 mul 1 sub index eq 2 index n 2 mul 1 add index eq
  and { pop pop /n n 1 sub def } if } def
/Polygon { NArray n 2 eq { 0 0 /n 3 def } if n 3 lt { n { pop pop }
  repeat } { n 3 gt { CheckClosed } if n 2 mul -2 roll /y0 ED /x0 ED /y1
  ED /x1 ED x1 y1 /x1 x0 x1 add 2 div def /y1 y0 y1 add 2 div def x1 y1
  moveto /n n 2 sub def n { Lineto } repeat x1 y1 x0 y0 6 4 roll Lineto
  Lineto pop pop closepath } ifelse } def
/Diamond { 
  /mtrx CM def 
  T rotate 
  /h ED 
  /w ED 
  dup 0 eq { pop } { CLW mul neg 
    /d ED 
    /a w h Atan def 
    /h d a sin Div h add def 
    /w d a cos Div w add def } ifelse 
  mark w 2 div h 2 div w 0 0 h neg w neg 0 0 h w 2 div h 2 div 
  /ArrowA { moveto } def 
  /ArrowB { } def 
  false Line 
  closepath mtrx setmatrix } def
% DG modification begin - Jan. 15, 1997
%/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup 0 eq {
%pop } { CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
%div dup cos exch sin Div mul sub def } ifelse mark 0 d w neg d 0 h w d 0
%d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
%setmatrix } def
/Triangle { /mtrx CM def translate rotate /h ED 2 div /w ED dup
CLW mul /d ED /h h d w h Atan sin Div sub def /w w d h w Atan 2
div dup cos exch sin Div mul sub def mark 0 d w neg d 0 h w d 0
d /ArrowA { moveto } def /ArrowB { } def false Line closepath mtrx
% DG/SR modification begin - Jun.  1, 1998 - Patch 3 (from Michael Vulis)
% setmatrix } def
setmatrix pop } def
% DG/SR modification end
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CCA { /y ED /x ED 2 copy y sub /dy1 ED x sub /dx1 ED /l1 dx1 dy1 Pyth
def } def
/CC { /l0 l1 def /x1 x dx sub def /y1 y dy sub def /dx0 dx1 def /dy0 dy1
def CCA /dx dx0 l1 c exp mul dx1 l0 c exp mul add def /dy dy0 l1 c exp
mul dy1 l0 c exp mul add def /m dx0 dy0 Atan dx1 dy1 Atan sub 2 div cos
abs b exp a mul dx dy Pyth Div 2 div def /x2 x l0 dx mul m mul sub def
/y2 y l0 dy mul m mul sub def /dx l1 dx mul m mul neg def /dy l1 dy mul
m mul neg def } def
/IC { /c c 1 add def c 0 lt { /c 0 def } { c 3 gt { /c 3 def } if }
ifelse /a a 2 mul 3 div 45 cos b exp div def CCA /dx 0 def /dy 0 def }
def
/BOC { IC CC x2 y2 x1 y1 ArrowA CP 4 2 roll x y curveto } def
/NC { CC x1 y1 x2 y2 x y curveto } def
/EOC { x dx sub y dy sub 4 2 roll ArrowB 2 copy curveto } def
/BAC { IC CC x y moveto CC x1 y1 CP ArrowA } def
/NAC { x2 y2 x y curveto CC x1 y1 } def
/EAC { x2 y2 x y ArrowB curveto pop pop } def
/OpenCurve { 
  NArray n 3 lt 
    { n { pop pop } repeat } 
    { BOC /n n 3 sub def n { NC } repeat EOC } ifelse 
} def
/AltCurve { { false NArray n 2 mul 2 roll [ n 2 mul 3 sub 1 roll ] aload
/Points ED n 2 mul -2 roll } { false NArray } ifelse n 4 lt { n { pop
pop } repeat } { BAC /n n 4 sub def n { NAC } repeat EAC } ifelse } def
/ClosedCurve { NArray n 3 lt { n { pop pop } repeat } { n 3 gt {
CheckClosed } if 6 copy n 2 mul 6 add 6 roll IC CC x y moveto n { NC }
repeat closepath pop pop } ifelse } def
/SQ { /r ED r r moveto r r neg L r neg r neg L r neg r L fill } def
/ST { /y ED /x ED x y moveto x neg y L 0 x L fill } def
/SP { /r ED gsave 0 r moveto 4 { 72 rotate 0 r L } repeat fill grestore }
def
/FontDot { DS 2 mul dup matrix scale matrix concatmatrix exch matrix
rotate matrix concatmatrix exch findfont exch makefont setfont } def
/Rect { x1 y1 y2 add 2 div moveto x1 y2 lineto x2 y2 lineto x2 y1 lineto
x1 y1 lineto closepath } def
/OvalFrame { x1 x2 eq y1 y2 eq or { pop pop x1 y1 moveto x2 y2 L } { y1
y2 sub abs x1 x2 sub abs 2 copy gt { exch pop } { pop } ifelse 2 div
exch { dup 3 1 roll mul exch } if 2 copy lt { pop } { exch pop } ifelse
/b ED x1 y1 y2 add 2 div moveto x1 y2 x2 y2 b arcto x2 y2 x2 y1 b arcto
x2 y1 x1 y1 b arcto x1 y1 x1 y2 b arcto 16 { pop } repeat closepath }
ifelse } def
/Frame { CLW mul /a ED 3 -1 roll 2 copy gt { exch } if a sub /y2 ED a add
/y1 ED 2 copy gt { exch } if a sub /x2 ED a add /x1 ED 1 index 0 eq {
pop pop Rect } { OvalFrame } ifelse } def
/BezierNArray { /f ED counttomark 2 div dup cvi /n ED n eq not { exch pop
} if n 1 sub neg 3 mod 3 add 3 mod { 0 0 /n n 1 add def } repeat f { ]
aload /Points ED } { n 2 mul 1 add -1 roll pop } ifelse } def
/OpenBezier { BezierNArray n 1 eq { pop pop } { ArrowA n 4 sub 3 idiv { 6
2 roll 4 2 roll curveto } repeat 6 2 roll 4 2 roll ArrowB curveto }
ifelse } def
/ClosedBezier { BezierNArray n 1 eq { pop pop } { moveto n 1 sub 3 idiv {
6 2 roll 4 2 roll curveto } repeat closepath } ifelse } def
/BezierShowPoints { gsave Points aload length 2 div cvi /n ED moveto n 1
sub { lineto } repeat CLW 2 div SLW [ 4 4 ] 0 setdash stroke grestore }
def
/Parab { /y0 exch def /x0 exch def /y1 exch def /x1 exch def /dx x0 x1
sub 3 div def /dy y0 y1 sub 3 div def x0 dx sub y0 dy add x1 y1 ArrowA
x0 dx add y0 dy add x0 2 mul x1 sub y1 ArrowB curveto /Points [ x1 y1 x0
y0 x0 2 mul x1 sub y1 ] def } def
/Grid { newpath /a 4 string def /b ED /c ED /n ED cvi dup 1 lt { pop 1 }
if /s ED s div dup 0 eq { pop 1 } if /dy ED s div dup 0 eq { pop 1 } if
/dx ED dy div round dy mul /y0 ED dx div round dx mul /x0 ED dy div
round cvi /y2 ED dx div round cvi /x2 ED dy div round cvi /y1 ED dx div
round cvi /x1 ED /h y2 y1 sub 0 gt { 1 } { -1 } ifelse def /w x2 x1 sub
0 gt { 1 } { -1 } ifelse def b 0 gt { /z1 b 4 div CLW 2 div add def
/Helvetica findfont b scalefont setfont /b b .95 mul CLW 2 div add def }
if systemdict /setstrokeadjust known { true setstrokeadjust /t { } def }
{ /t { transform 0.25 sub round 0.25 add exch 0.25 sub round 0.25 add
exch itransform } bind def } ifelse gsave n 0 gt { 1 setlinecap [ 0 dy n
div ] dy n div 2 div setdash } { 2 setlinecap } ifelse /i x1 def /f y1
dy mul n 0 gt { dy n div 2 div h mul sub } if def /g y2 dy mul n 0 gt {
dy n div 2 div h mul add } if def x2 x1 sub w mul 1 add dup 1000 gt {
pop 1000 } if { i dx mul dup y0 moveto b 0 gt { gsave c i a cvs dup
stringwidth pop /z2 ED w 0 gt {z1} {z1 z2 add neg} ifelse h 0 gt {b neg}
{z1} ifelse rmoveto show grestore } if dup t f moveto g t L stroke /i i
w add def } repeat grestore gsave n 0 gt
% DG/SR modification begin - Nov. 7, 1997 - Patch 1
%{ 1 setlinecap [ 0 dx n div ] dy n div 2 div setdash }
{ 1 setlinecap [ 0 dx n div ] dx n div 2 div setdash }
% DG/SR modification end
{ 2 setlinecap } ifelse /i y1 def /f x1 dx mul
n 0 gt { dx n div 2 div w mul sub } if def /g x2 dx mul n 0 gt { dx n
div 2 div w mul add } if def y2 y1 sub h mul 1 add dup 1000 gt { pop
1000 } if { newpath i dy mul dup x0 exch moveto b 0 gt { gsave c i a cvs
dup stringwidth pop /z2 ED w 0 gt {z1 z2 add neg} {z1} ifelse h 0 gt
{z1} {b neg} ifelse rmoveto show grestore } if dup f exch t moveto g
exch t L stroke /i i h add def } repeat grestore } def
/ArcArrow { /d ED /b ED /a ED gsave newpath 0 -1000 moveto clip newpath 0
1 0 0 b grestore c mul /e ED pop pop pop r a e d PtoC y add exch x add
exch r a PtoC y add exch x add exch b pop pop pop pop a e d CLW 8 div c
mul neg d } def
/Ellipse { /mtrx CM def T scale 0 0 1 5 3 roll arc mtrx setmatrix } def
%
/ArcAdjust { %%%% Vincent Guirardel
% given a target length (targetLength) and an initial angle (angle0) [in the stack],
% let  M(angle0)=(rx*cos(angle0),ry*sin(angle0))=(x0,y0).
% This computes an angle t such that (x0,y0) is at distance 
% targetLength from the point M(t)=(rx*cos(t),ry*sin(t)).
% NOTE: this an absolute angle, it does not have to be added or substracted to angle0
% contrary to TvZ's code.
% To achieve, this, one iterates the following process: start with some angle t,
% compute the point M' at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)].
% Now take t' (= new angle) so that (0,0) M(t') and M' are aligned.
%
% Another difference with TvZ's code is that we need d (=add/sub) to be defined.
% the value of d = add/sub is used to know on which side we have to move.
% It is only used in the initialisation of the angle before the iteration.
%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Input stack:  1: target length 2: initial angle
% variables used : rx, ry, d (=add/sub)
%
  /targetLength ED /angle0 ED
  /x0 rx angle0 cos mul def
  /y0 ry angle0 sin mul def
% we are looking for an angle t such that (x0,y0) is at distance targetLength 
% from the point M(t)=(rx*cos(t),ry*sin(t)))
%initialisation of angle (using 1st order approx = TvZ's code)
  targetLength 57.2958 mul
  angle0 sin rx mul dup mul
  angle0 cos ry mul dup mul
  add sqrt div 
% if initialisation angle is two large (more than 90 degrees) set it to 90 degrees
% (if the ellipse is very curved at the point where we draw the arrow, %
% the value can be much more than 360 degrees !)
% this should avoid going on the wrong side (more than 180 degrees) or go near
% a bad attractive point (at 180 degrees)
  dup 90 ge { pop 90 } if 
  angle0 exch d % add or sub
% maximum number of times to iterate the iterative procedure:
% iterative procedure: takes an angle t on top of stack, computes a 
% better angle (and put it on top of stack)
  30 { dup
% compute distance D between (x0,y0) and M(t)
    dup cos rx mul x0 sub dup mul exch sin ry mul y0 sub dup mul add sqrt
% if D almost equals targetLength, we stop
    dup targetLength sub abs 1e-5 le { pop exit } if
% stack now contains D t
% compute the point M(t') at distance targetLength of (x0,y0) on the semi-line [(x0,y0) M(t)]:
% M(t')= ( (x(t)-x0)*targetLength/d+x0 , (y(t)-y0)*targetLength/d+y0 )
    exch dup cos rx mul x0 sub  exch sin ry mul y0 sub
% stack contains:  y(t)-y0, x(t)-x0, d
    2 index Div targetLength mul y0 add ry Div exch
    2 index Div targetLength mul x0 add rx Div
% stack contains x(t')/rx , y(t')/ry , d
% now compute t', and remove D from stack
    atan exch pop
  } repeat
% we don't look at what happened... in particular, if targetLength is greater 
% than the diameter of the ellipse...
% the final angle will be around /angle0 + 180. maybe we should treat this pathological case...
% after iteration, stack contains an angle t such that M(t) is the tail of the arrow
% to give back the result as a an angle relative to angle0 we could add the following line:
% angle0 sub 0 exch d
%
% begin bug fix 2006-01-11
% we want to adjust the new angle t' by a multiple of 360 so that  | t'-angle0 | <= 180
%(we don't want to make the ellipse turn more or less than it should)...
dup angle0 sub dup abs 180 gt { 180 add 360 div floor 360 mul sub } { pop } ifelse
% end bug fix
} def
%
/EllipticArcArrow {
  /d ED      % add/sub
  /b ED      % arrow procedure
  /a1 ED     % angle
  gsave
  newpath
  0 -1000 moveto
  clip                  % Set clippath far from arrow.
  newpath
  0 1 0 0 b             % Draw arrow to determine length.
  grestore
% Length of arrow is on top of stack. Next 3 numbers are junk.
%
  a1 exch ArcAdjust   % Angular position of base of arrow.
  /a2 ED
  pop pop pop
  a2 cos rx mul x add
  a2 sin ry mul y add
  a1 cos rx mul x add
  a1 sin ry mul y add
% Now arrow tip coor and base coor are on stack.
  b pop pop pop pop       % Draw arrow, and discard coordinates.
  a2 CLW 8 div
% change value of d (test it by looking if  `` 1 1 d '' gives 2 or not )
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse
  ArcAdjust
% resets original value of d
  1 1 d 2 eq { /d { sub } def } { /d { add } def } ifelse  % Adjust angle to give overlap.
} def
%%------------------ tvz/DG/hv (2004-05-10) end -------------------%%
%
/Rot { CP CP translate 3 -1 roll neg rotate NET  } def
/RotBegin { tx@Dict /TMatrix known not { /TMatrix { } def /RAngle { 0 }
def } if /TMatrix [ TMatrix CM ] cvx def /a ED a Rot /RAngle [ RAngle
dup a add ] cvx def } def
/RotEnd { /TMatrix [ TMatrix setmatrix ] cvx def /RAngle [ RAngle pop ]
cvx def } def
/PutCoor { gsave CP T CM STV exch exec moveto setmatrix CP grestore } def
/PutBegin { /TMatrix [ TMatrix CM ] cvx def CP 4 2 roll T moveto } def
/PutEnd { CP /TMatrix [ TMatrix setmatrix ] cvx def moveto } def
/Uput { /a ED add 2 div /h ED 2 div /w ED /s a sin def /c a cos def /b s
abs c abs 2 copy gt dup /q ED { pop } { exch pop } ifelse def /w1 c b
div w mul def /h1 s b div h mul def q { w1 abs w sub dup c mul abs } {
h1 abs h sub dup s mul abs } ifelse } def
/UUput { /z ED abs /y ED /x ED q { x s div c mul abs y gt } { x c div s
mul abs y gt } ifelse { x x mul y y mul sub z z mul add sqrt z add } { q
{ x s div } { x c div } ifelse abs } ifelse a PtoC h1 add exch w1 add
exch } def
/BeginOL { dup (all) eq exch TheOL eq or { IfVisible not { Visible
/IfVisible true def } if } { IfVisible { Invisible /IfVisible false def
} if } ifelse } def
/InitOL { /OLUnit [ 3000 3000 matrix defaultmatrix dtransform ] cvx def
/Visible { CP OLUnit idtransform T moveto } def /Invisible { CP OLUnit
neg exch neg exch idtransform T moveto } def /BOL { BeginOL } def
/IfVisible true def } def
end
% END pstricks.pro

%%EndProcSet
%%BeginProcSet: pst-dots.pro 0 0
%!
%% PostScript prologue for pstricks.tex.
%% Version 2.00,                                    Suggestion of 2006/12/19
%% For distribution, see pstricks.tex.
%%
%% Timothy Van Zandt <tvz@Princeton.EDU>
%%
%% Modified by Etienne Riga  - Dec. 16, 1999
%% Modified by Herbert Voss (hv) - 2004/12/27 
%% Modified by Etienne Riga  - 2005/01/01 (er)
%% to add /Diamond, /SolidDiamond and /BoldDiamond
%
10 dict dup begin
  /FontType 3 def
  /FontMatrix [.001 0 0 .001 0 0] def
  /FontBBox [-571.5 -742.5 571.5 742.5] def
%  /FontBBox [-1000 -1000 1000 1000] def
%                See end of file in /BuildGlyph
  /Encoding 256 array def
  0 1 255 {Encoding exch/.notdef put} for
  Encoding
    dup (b) 0 get /Bullet put
    dup (c) 0 get /Circle put
    dup (C) 0 get /BoldCircle put
    dup (u) 0 get /SolidTriangle put
    dup (t) 0 get /Triangle put
    dup (T) 0 get /BoldTriangle put
    dup (r) 0 get /SolidSquare put
    dup (s) 0 get /Square put
    dup (S) 0 get /BoldSquare put
    dup (q) 0 get /SolidPentagon put
    dup (p) 0 get /Pentagon put
    dup (P) 0 get /BoldPentagon put
%%%		  
    dup (k) 0 get /Asterisk put
    dup (K) 0 get /BoldAsterisk put
    dup (J) 0 get /SolidAsterisk put
    dup (h) 0 get /Hexagon put
    dup (H) 0 get /BoldHexagon put
    dup (G) 0 get /SolidHexagon put
    dup (a) 0 get /Add put
    dup (A) 0 get /BoldAdd put
    dup (x) 0 get /Mul put
    dup (X) 0 get /BoldMul put
    dup (m) 0 get /Oplus put
    dup (M) 0 get /BOplus put
    dup (e) 0 get /SolidOplus put
    dup (n) 0 get /Otimes put
    dup (N) 0 get /BOtimes put
    dup (E) 0 get /SolidOtimes put
    dup (i) 0 get /Bar put
    dup (I) 0 get /BoldBar put
    dup (l) 0 get /SolidDiamond put
    dup (d) 0 get /Diamond put
        (D) 0 get /BoldDiamond put
%%%  
/CharProcs 47 dict def
  CharProcs begin
    /CirclePath {0 0 500 0 360 arc closepath} def
      /Bullet {CirclePath fill} def
	  /Circle {CirclePath .9 .9 scale CirclePath eofill} def
	  /BoldCircle {CirclePath .8 .8 scale CirclePath eofill} def
    /TrianglePath {0 660 moveto -571.5 -330 lineto 571.5 -330 lineto
		closepath} def
	  /SolidTriangle {TrianglePath fill} def
      /Triangle {TrianglePath .85 .85 scale TrianglePath eofill} def
      /BoldTriangle {TrianglePath .7 .7 scale TrianglePath eofill} def
    /SquarePath {-450 450 moveto 450 450 lineto 450 -450 lineto -450 -450 lineto
		closepath} def
      /SolidSquare {SquarePath fill} def
      /Square {SquarePath .89 .89 scale SquarePath eofill} def
      /BoldSquare {SquarePath .78 .78 scale SquarePath eofill} def
    /PentagonPath {-337.8 -465 moveto 337.8 -465 lineto 546.6 177.6 lineto
		0 574.7 lineto -546.6 177.6 lineto closepath} def
      /SolidPentagon {PentagonPath fill} def
      /Pentagon {PentagonPath .89 .89 scale PentagonPath eofill} def
      /BoldPentagon {PentagonPath .78 .78 scale PentagonPath eofill} def
%-------------- hv begin 2004/07/25   from: er 2003/03/24
    /HexagonPath {0 550 moveto -476 275 lineto -476 -275 lineto
		0 -550 lineto 476 -275 lineto 476 275 lineto closepath} def
      /SolidHexagon {HexagonPath fill} def
      /Hexagon {HexagonPath .89 .89 scale HexagonPath eofill} def
      /BoldHexagon {HexagonPath .79 .79 scale HexagonPath eofill} def
	/AsteriskPath {20 0 moveto 10 250 180 500 0 500 curveto
		-180 500 -10 250 -20 0 curveto closepath} def
      /Asterisk {AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath
	    60 rotate AsteriskPath 60 rotate AsteriskPath 60 rotate AsteriskPath 
		fill} def
	/Basterp {50 250 220 500 0 500 curveto
        -220 500 -50 250 -50 30 cos 100 mul curveto} def
	/BoldAsteriskPath {50 30 cos 100 mul moveto  Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp 60 rotate Basterp
                     60 rotate Basterp closepath} def
      /BoldAsterisk {BoldAsteriskPath fill} def
	  /SolidAsterisk {CirclePath .9 .9 scale BoldAsteriskPath eofill} def
    /CrossPath {40 550 moveto -40 550 lineto -40 40 lineto -550 40 lineto
        -550 -40 lineto -40 -40 lineto -40 -550 lineto 40 -550 lineto 
		40 -40 lineto 550 -40 lineto 550 40 lineto 40 40 lineto closepath} def
    /BoldCrossPath {80 550 moveto -80 550 lineto -80 80 lineto -550 80 lineto
        -550 -80 lineto -80 -80 lineto -80 -550 lineto 80 -550 lineto 
		80 -80 lineto 550 -80 lineto 550 80 lineto 80 80 lineto closepath} def
      /Add {CrossPath fill} def
      /Mul {45 rotate CrossPath fill} def
      /BoldAdd {BoldCrossPath fill} def
      /BoldMul {45 rotate BoldCrossPath fill} def
	  /Oplus {CirclePath .9 .9 scale CirclePath eofill
		.775 .775 scale CrossPath  fill} def 
	  /SolidOplus {CirclePath .775 .775 scale BoldCrossPath eofill} def 
	  /BOplus {CirclePath .8 .8 scale CirclePath eofill
		.775 .775 scale BoldCrossPath fill} def 
	  /Otimes {CirclePath .9 .9 scale CirclePath eofill
		45 rotate .775 .775 scale CrossPath fill} def 
	  /BOtimes {CirclePath .8 .8 scale CirclePath eofill
		45 rotate .775 .775 scale BoldCrossPath  fill } def 
	  /SolidOtimes {CirclePath 45 rotate .775 .775 scale BoldCrossPath eofill} def 
    /BarPath {40 660 moveto -40 660 lineto -40 -660 lineto 40 -660 lineto
		closepath} def
      /Bar {BarPath fill} def
    /BoldBarPath {80 660 moveto -80 660 lineto -80 -660 lineto 80 -660 lineto
		closepath} def
      /BoldBar {BoldBarPath fill} def
    /DiamondPath {0 742.5 moveto -428.5 0 lineto 0 -742.5 lineto 
		428.5 0 lineto closepath} def
      /SolidDiamond {DiamondPath fill} def
      /Diamond {DiamondPath .865 .865 scale DiamondPath eofill} def
      /BoldDiamond {DiamondPath .73 .73 scale DiamondPath eofill} def
%%%
    /.notdef { } def
  end
  /BuildGlyph {
    exch
    begin
%      Metrics 1 index get exec 0
       0 0
%      BBoxes 3 index get exec
      -1000 -1000 1000 1000
%     -571.5 -742.5 571.5 742.5
      setcachedevice
      CharProcs begin load exec end
    end
  } def
  /BuildChar {
    1 index /Encoding get exch get
    1 index /BuildGlyph get exec
  } bind def
end
/PSTricksDotFont exch definefont pop


%%EndProcSet
%%BeginProcSet: pst-node.pro 0 0
%!
% PostScript prologue for pst-node.tex.
% Version 97 patch 1, 97/05/09.
% For distribution, see pstricks.tex.
%
/tx@NodeDict 400 dict def tx@NodeDict begin
tx@Dict begin /T /translate load def end
/NewNode { gsave /next ED dict dup 3 1 roll def exch { dup 3 1 roll def }
if begin tx@Dict begin STV CP T exec end /NodeMtrx CM def next end
grestore } def
/InitPnode { /Y ED /X ED /NodePos { NodeSep Cos mul NodeSep Sin mul } def
} def
/InitCnode { /r ED /Y ED /X ED /NodePos { NodeSep r add dup Cos mul exch
Sin mul } def } def
/GetRnodePos { Cos 0 gt { /dx r NodeSep add def } { /dx l NodeSep sub def
} ifelse Sin 0 gt { /dy u NodeSep add def } { /dy d NodeSep sub def }
ifelse dx Sin mul abs dy Cos mul abs gt { dy Cos mul Sin div dy } { dx
dup Sin mul Cos Div } ifelse } def
/InitRnode { /Y ED /X ED X sub /r ED /l X neg def Y add neg /d ED Y sub
/u ED /NodePos { GetRnodePos } def } def
/DiaNodePos { w h mul w Sin mul abs h Cos mul abs add Div NodeSep add dup
Cos mul exch Sin mul } def
/TriNodePos { Sin s lt { d NodeSep sub dup Cos mul Sin Div exch } { w h
mul w Sin mul h Cos abs mul add Div NodeSep add dup Cos mul exch Sin mul
} ifelse } def
/InitTriNode { sub 2 div exch 2 div exch 2 copy T 2 copy 4 index index /d
ED pop pop pop pop -90 mul rotate /NodeMtrx CM def /X 0 def /Y 0 def d
sub abs neg /d ED d add /h ED 2 div h mul h d sub Div /w ED /s d w Atan
sin def /NodePos { TriNodePos } def } def
/OvalNodePos { /ww w NodeSep add def /hh h NodeSep add def Sin ww mul Cos
hh mul Atan dup cos ww mul exch sin hh mul } def
/GetCenter { begin X Y NodeMtrx transform CM itransform end } def
/XYPos { dup sin exch cos Do /Cos ED /Sin ED /Dist ED Cos 0 gt { Dist
Dist Sin mul Cos div } { Cos 0 lt { Dist neg Dist Sin mul Cos div neg }
{ 0 Dist Sin mul } ifelse } ifelse Do } def
/GetEdge { dup 0 eq { pop begin 1 0 NodeMtrx dtransform CM idtransform
exch atan sub dup sin /Sin ED cos /Cos ED /NodeSep ED NodePos NodeMtrx
dtransform CM idtransform end } { 1 eq {{exch}} {{}} ifelse /Do ED pop
XYPos } ifelse } def
/AddOffset { 1 index 0 eq { pop pop } { 2 copy 5 2 roll cos mul add 4 1
roll sin mul sub exch } ifelse } def
/GetEdgeA { NodeSepA AngleA NodeA NodeSepTypeA GetEdge OffsetA AngleA
AddOffset yA add /yA1 ED xA add /xA1 ED } def
/GetEdgeB { NodeSepB AngleB NodeB NodeSepTypeB GetEdge OffsetB AngleB
AddOffset yB add /yB1 ED xB add /xB1 ED } def
/GetArmA { ArmTypeA 0 eq { /xA2 ArmA AngleA cos mul xA1 add def /yA2 ArmA
AngleA sin mul yA1 add def } { ArmTypeA 1 eq {{exch}} {{}} ifelse /Do ED
ArmA AngleA XYPos OffsetA AngleA AddOffset yA add /yA2 ED xA add /xA2 ED
} ifelse } def
/GetArmB { ArmTypeB 0 eq { /xB2 ArmB AngleB cos mul xB1 add def /yB2 ArmB
AngleB sin mul yB1 add def } { ArmTypeB 1 eq {{exch}} {{}} ifelse /Do ED
ArmB AngleB XYPos OffsetB AngleB AddOffset yB add /yB2 ED xB add /xB2 ED
} ifelse } def
/InitNC { /b ED /a ED /NodeSepTypeB ED /NodeSepTypeA ED /NodeSepB ED
/NodeSepA ED /OffsetB ED /OffsetA ED tx@NodeDict a known tx@NodeDict b
known and dup { /NodeA a load def /NodeB b load def NodeA GetCenter /yA
ED /xA ED NodeB GetCenter /yB ED /xB ED } if } def
/LPutLine { 4 copy 3 -1 roll sub neg 3 1 roll sub Atan /NAngle ED 1 t sub
mul 3 1 roll 1 t sub mul 4 1 roll t mul add /Y ED t mul add /X ED } def
/LPutLines { mark LPutVar counttomark 2 div 1 sub /n ED t floor dup n gt
{ pop n 1 sub /t 1 def } { dup t sub neg /t ED } ifelse cvi 2 mul { pop
} repeat LPutLine cleartomark } def
/BezierMidpoint { /y3 ED /x3 ED /y2 ED /x2 ED /y1 ED /x1 ED /y0 ED /x0 ED
/t ED /cx x1 x0 sub 3 mul def /cy y1 y0 sub 3 mul def /bx x2 x1 sub 3
mul cx sub def /by y2 y1 sub 3 mul cy sub def /ax x3 x0 sub cx sub bx
sub def /ay y3 y0 sub cy sub by sub def ax t 3 exp mul bx t t mul mul
add cx t mul add x0 add ay t 3 exp mul by t t mul mul add cy t mul add
y0 add 3 ay t t mul mul mul 2 by t mul mul add cy add 3 ax t t mul mul
mul 2 bx t mul mul add cx add atan /NAngle ED /Y ED /X ED } def
/HPosBegin { yB yA ge { /t 1 t sub def } if /Y yB yA sub t mul yA add def
} def
/HPosEnd { /X Y yyA sub yyB yyA sub Div xxB xxA sub mul xxA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/HPutLine { HPosBegin /yyA ED /xxA ED /yyB ED /xxB ED HPosEnd  } def
/HPutLines { HPosBegin yB yA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { dup Y check { exit
} { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark HPosEnd 
} def
/VPosBegin { xB xA lt { /t 1 t sub def } if /X xB xA sub t mul xA add def
} def
/VPosEnd { /Y X xxA sub xxB xxA sub Div yyB yyA sub mul yyA add def
/NAngle yyB yyA sub xxB xxA sub Atan def } def
/VPutLine { VPosBegin /yyA ED /xxA ED /yyB ED /xxB ED VPosEnd  } def
/VPutLines { VPosBegin xB xA ge { /check { le } def } { /check { ge } def
} ifelse /xxA xA def /yyA yA def mark xB yB LPutVar { 1 index X check {
exit } { /yyA ED /xxA ED } ifelse } loop /yyB ED /xxB ED cleartomark
VPosEnd  } def
/HPutCurve { gsave newpath /SaveLPutVar /LPutVar load def LPutVar 8 -2
roll moveto curveto flattenpath /LPutVar [ {} {} {} {} pathforall ] cvx
def grestore exec /LPutVar /SaveLPutVar load def } def
/NCCoor { /AngleA yB yA sub xB xA sub Atan def /AngleB AngleA 180 add def
GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 xA1 yA1 ] cvx def /LPutPos {
LPutVar LPutLine } def /HPutPos { LPutVar HPutLine } def /VPutPos {
LPutVar VPutLine } def LPutVar } def
/NCLine { NCCoor tx@Dict begin ArrowA CP 4 2 roll ArrowB lineto pop pop
end } def
/NCLines { false NArray n 0 eq { NCLine } { 2 copy yA sub exch xA sub
Atan /AngleA ED n 2 mul dup index exch index yB sub exch xB sub Atan
/AngleB ED GetEdgeA GetEdgeB /LPutVar [ xB1 yB1 n 2 mul 4 add 4 roll xA1
yA1 ] cvx def mark LPutVar tx@Dict begin false Line end /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
ifelse } def
/NCCurve { GetEdgeA GetEdgeB xA1 xB1 sub yA1 yB1 sub Pyth 2 div dup 3 -1
roll mul /ArmA ED mul /ArmB ED /ArmTypeA 0 def /ArmTypeB 0 def GetArmA
GetArmB xA2 yA2 xA1 yA1 tx@Dict begin ArrowA end xB2 yB2 xB1 yB1 tx@Dict
begin ArrowB end curveto /LPutVar [ xA1 yA1 xA2 yA2 xB2 yB2 xB1 yB1 ]
cvx def /LPutPos { t LPutVar BezierMidpoint } def /HPutPos { { HPutLines
} HPutCurve } def /VPutPos { { VPutLines } HPutCurve } def } def
/NCAngles { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform pop xB2 yB2 mtrx transform exch pop mtrx
itransform /y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA2
yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end /LPutVar [ xB1
yB1 xB2 yB2 x0 y0 xA2 yA2 xA1 yA1 ] cvx def /LPutPos { LPutLines } def
/HPutPos { HPutLines } def /VPutPos { VPutLines } def } def
/NCAngle { GetEdgeA GetEdgeB GetArmB /mtrx AngleA matrix rotate def xB2
yB2 mtrx itransform pop xA1 yA1 mtrx itransform exch pop mtrx transform
/y0 ED /x0 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2 x0 y0 xA1 yA1
tx@Dict begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 x0 y0 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCBar { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate def
xA2 yA2 mtrx itransform pop xB2 yB2 mtrx itransform pop sub dup 0 mtrx
transform 3 -1 roll 0 gt { /yB2 exch yB2 add def /xB2 exch xB2 add def }
{ /yA2 exch neg yA2 add def /xA2 exch neg xA2 add def } ifelse mark ArmB
0 ne { xB1 yB1 } if xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict
begin false Line end /LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx
def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
/NCDiag { GetEdgeA GetEdgeB GetArmA GetArmB mark ArmB 0 ne { xB1 yB1 } if
xB2 yB2 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false Line end
/LPutVar [ xB1 yB1 xB2 yB2 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCDiagg { GetEdgeA GetArmA yB yA2 sub xB xA2 sub Atan 180 add /AngleB ED
GetEdgeB mark xB1 yB1 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin
false Line end /LPutVar [ xB1 yB1 xA2 yA2 xA1 yA1 ] cvx def /LPutPos {
LPutLines } def /HPutPos { HPutLines } def /VPutPos { VPutLines } def }
def
/NCLoop { GetEdgeA GetEdgeB GetArmA GetArmB /mtrx AngleA matrix rotate
def xA2 yA2 mtrx transform loopsize add /yA3 ED /xA3 ED /xB3 xB2 yB2
mtrx transform pop def xB3 yA3 mtrx itransform /yB3 ED /xB3 ED xA3 yA3
mtrx itransform /yA3 ED /xA3 ED mark ArmB 0 ne { xB1 yB1 } if xB2 yB2
xB3 yB3 xA3 yA3 xA2 yA2 ArmA 0 ne { xA1 yA1 } if tx@Dict begin false
Line end /LPutVar [ xB1 yB1 xB2 yB2 xB3 yB3 xA3 yA3 xA2 yA2 xA1 yA1 ]
cvx def /LPutPos { LPutLines } def /HPutPos { HPutLines } def /VPutPos {
VPutLines } def } def
% DG/SR modification begin - May 9, 1997 - Patch 1
%/NCCircle { 0 0 NodesepA nodeA \tx@GetEdge pop xA sub 2 div dup 2 exp r
%r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
%exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
%mul add dup 5 1 roll 90 sub \tx@PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
/NCCircle { NodeSepA 0 NodeA 0 GetEdge pop 2 div dup 2 exp r
r mul sub abs sqrt atan 2 mul /a ED r AngleA 90 add PtoC yA add exch xA add
exch 2 copy /LPutVar [ 4 2 roll r AngleA ] cvx def /LPutPos { LPutVar t 360
mul add dup 5 1 roll 90 sub PtoC 3 -1 roll add /Y ED add /X ED /NAngle ED
% DG/SR modification end
} def /HPutPos { LPutPos } def /VPutPos { LPutPos } def r AngleA 90 sub a add
AngleA 270 add a sub tx@Dict begin /angleB ED /angleA ED /r ED /c 57.2957 r
Div def /y ED /x ED } def
/NCBox { /d ED /h ED /AngleB yB yA sub xB xA sub Atan def /AngleA AngleB
180 add def GetEdgeA GetEdgeB /dx d AngleB sin mul def /dy d AngleB cos
mul neg def /hx h AngleB sin mul neg def /hy h AngleB cos mul def
/LPutVar [ xA1 hx add yA1 hy add xB1 hx add yB1 hy add xB1 dx add yB1 dy
add xA1 dx add yA1 dy add ] cvx def /LPutPos { LPutLines } def /HPutPos
{ xB yB xA yA LPutLine } def /VPutPos { HPutPos } def mark LPutVar
tx@Dict begin false Polygon end } def
/NCArcBox { /l ED neg /d ED /h ED /a ED /AngleA yB yA sub xB xA sub Atan
def /AngleB AngleA 180 add def /tA AngleA a sub 90 add def /tB tA a 2
mul add def /r xB xA sub tA cos tB cos sub Div dup 0 eq { pop 1 } if def
/x0 xA r tA cos mul add def /y0 yA r tA sin mul add def /c 57.2958 r div
def /AngleA AngleA a sub 180 add def /AngleB AngleB a add 180 add def
GetEdgeA GetEdgeB /AngleA tA 180 add yA yA1 sub xA xA1 sub Pyth c mul
sub def /AngleB tB 180 add yB yB1 sub xB xB1 sub Pyth c mul add def l 0
eq { x0 y0 r h add AngleA AngleB arc x0 y0 r d add AngleB AngleA arcn }
{ x0 y0 translate /tA AngleA l c mul add def /tB AngleB l c mul sub def
0 0 r h add tA tB arc r h add AngleB PtoC r d add AngleB PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r d add tB PtoC l arcto 4 { pop } repeat 0
0 r d add tB tA arcn r d add AngleA PtoC r h add AngleA PtoC 2 copy 6 2
roll l arcto 4 { pop } repeat r h add tA PtoC l arcto 4 { pop } repeat }
ifelse closepath /LPutVar [ x0 y0 r AngleA AngleB h d ] cvx def /LPutPos
{ LPutVar /d ED /h ED /AngleB ED /AngleA ED /r ED /y0 ED /x0 ED t 1 le {
r h add AngleA 1 t sub mul AngleB t mul add dup 90 add /NAngle ED PtoC }
{ t 2 lt { /NAngle AngleB 180 add def r 2 t sub h mul t 1 sub d mul add
add AngleB PtoC } { t 3 lt { r d add AngleB 3 t sub mul AngleA 2 t sub
mul add dup 90 sub /NAngle ED PtoC } { /NAngle AngleA 180 add def r 4 t
sub d mul t 3 sub h mul add add AngleA PtoC } ifelse } ifelse } ifelse
y0 add /Y ED x0 add /X ED } def /HPutPos { LPutPos } def /VPutPos {
LPutPos } def } def
/Tfan { /AngleA yB yA sub xB xA sub Atan def GetEdgeA w xA1 xB sub yA1 yB
sub Pyth Pyth w Div CLW 2 div mul 2 div dup AngleA sin mul yA1 add /yA1
ED AngleA cos mul xA1 add /xA1 ED /LPutVar [ xA1 yA1 m { xB w add yB xB
w sub yB } { xB yB w sub xB yB w add } ifelse xA1 yA1 ] cvx def /LPutPos
{ LPutLines } def /VPutPos@ { LPutVar flag { 8 4 roll pop pop pop pop }
{ pop pop pop pop 4 2 roll } ifelse } def /VPutPos { VPutPos@ VPutLine }
def /HPutPos { VPutPos@ HPutLine } def mark LPutVar tx@Dict begin
/ArrowA { moveto } def /ArrowB { } def false Line closepath end } def
/LPutCoor { NAngle tx@Dict begin /NAngle ED end gsave CM STV CP Y sub neg
exch X sub neg exch moveto setmatrix CP grestore } def
/LPut { tx@NodeDict /LPutPos known { LPutPos } { CP /Y ED /X ED /NAngle 0
def } ifelse LPutCoor  } def
/HPutAdjust { Sin Cos mul 0 eq { 0 } { d Cos mul Sin div flag not { neg }
if h Cos mul Sin div flag { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { r add neg } { l add } ifelse X add /X ED }
def
/VPutAdjust { Sin Cos mul 0 eq { 0 } { l Sin mul Cos div flag { neg } if
r Sin mul Cos div flag not { neg } if 2 copy gt { pop } { exch pop }
ifelse } ifelse s add flag { d add } { h add neg } ifelse Y add /Y ED }
def
end
% END pst-node.pro

%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
TeXDict begin @defspecial

 /DvipsToPDF { 72.27 mul Resolution div } def /PDFToDvips { 72.27 div
Resolution mul } def /HyperBorder { 1 PDFToDvips } def /H.V {pdf@hoff
pdf@voff null} def /H.B {/Rect[pdf@llx pdf@lly pdf@urx pdf@ury]} def
/H.S { currentpoint HyperBorder add /pdf@lly exch def dup DvipsToPDF
/pdf@hoff exch def HyperBorder sub /pdf@llx exch def } def /H.L { 2
sub dup /HyperBasePt exch def PDFToDvips /HyperBaseDvips exch def currentpoint
HyperBaseDvips sub /pdf@ury exch def /pdf@urx exch def } def /H.A {
H.L currentpoint exch pop vsize 72 sub exch DvipsToPDF HyperBasePt
sub sub /pdf@voff exch def } def /H.R { currentpoint HyperBorder sub
/pdf@ury exch def HyperBorder add /pdf@urx exch def currentpoint exch
pop vsize 72 sub exch DvipsToPDF sub /pdf@voff exch def } def systemdict
/pdfmark known { userdict /?pdfmark systemdict /exec get put }{ userdict
/?pdfmark systemdict /pop get put userdict /pdfmark systemdict /cleartomark
get put } ifelse
 
@fedspecial end
%%BeginFont: CMTI10
%!PS-AdobeFont-1.1: CMTI10 1.00B
%%CreationDate: 1992 Feb 19 19:56:16
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMTI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 87 /W put
dup 97 /a put
dup 100 /d put
dup 101 /e put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 119 /w put
readonly def
/FontBBox{-163 -250 1146 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E3948FFB0B4E70F212EC976D65099D84E0D37A7A771C3101D6AD26A0513378F
21EC3643079EECE0C9AB54B4772E5DCA82D0D4ACC7F42FB493AA04A3BF4A1BD6
06ECE186315DBE9CFDCB1A0303E8D3E83027CD3AFA8F0BD466A8E8CA0E7164CF
55B332FAD43482748DD4A1CB3F40CB1F5E67192B8216A0D8FE30F9F05BF016F5
B5CC130A4B0796EE065495422FBA55BEE9BFD99D04464D987AC4D237C208FA86
0B112E55CE7B3782A34BC22E3DE31755D9AFF19E490C8E43B85E17ECE87FA8B9
1485831624D24F37C39BF9972D74E6EC4784727AC00B9C4A3AD3DA1C22BD6961
7E0ADAF55422F22ACA5E4DCD4DF9FCD187A566B7FB661D0530454D0DD6C6C50A
7A3875C6CBF8EC7769F32A1F3F7FC1C072BADEC97794D4E90E0035282A170402
356E5A9CD9ABD80AC4342A5283E458A7269252F4541CBB6452B39ED54D336D0B
19928E9CD1AB26AD83EB209E2EC75011A2643813053B5DBB0246097C4821B5F2
C92554E9140BE35B2DBFCD98809A8EC9FC910FDE9E0D86457C70ACB056EBF90F
244DC0A5BBD455E15D6E3180311D52CF50B0BF7D0A7F64F3A1821E0AEDBC2E7B
AEB549FE1D51088C153799C6E089B5D5D65E1C4E2D2B430CDF1FFA23CCB25D95
5C43C8942435D0AAA3D9055FF808F2C3C887A3C469BBD98F026D0A59E26BA9F9
C2144CFE49A9AD892D4D31764F0AE3A10644AE3966B0A790684B14D11FA49785
EC5565D2B2E584CBFD85125F3FAC133338DE35361943DCE9AF05FCF2840CE512
998D42CBEC52B57B79DD63F00985881E8463396ADA47189A94DDF951A78866F0
B8A3D9197E39335277EF2294308DA70065D910943A34F7D5F2090FB4AA42ED70
CBA469A9F64B95A6FBA4BC89DBC93765E3AE4723162DF3F9D6BDE77DD5870ADE
C8900D6346957B84C3CE88A8F9A12D46B8FCA50DF4433B0B8AED6A63B3DA102B
6DF94E62408E24154BAAC66B2B249C695BC0FA37A28699D9C0F3EE94AA32E3C5
8F8D7F803B5D25014D43A353D719B14B247A87898A960DF68C0C0BAF70C83917
6E9F7B3ACC64DBAEF3FDCD3A80C0AB907EE342E543D607556CBE5A9089B86D1D
E768F27D74A613F3ABF883222A8596B542EBF54E9DCE327B5682AEE5F1A7A225
BF26E2AEA0F352B9C950B47ADF650E1B2AE31E883EDD884EC90F94761C470EB1
72F27B74049C2A13EC522271032939B656020D617F4E58DCA88D138F4C84979D
5EE89221BFD28AE8117B69C24A1C93EFA88AB83CB645EEB9389751C19B8293F3
A3101882FFFEAECC8B917FD1541E3DAAC9196791F0628FF2F90928DDDFDA3988
E8E4815CEA826767AD0E6364356909095D51CF40ADB76079CA3C5C863D37C12B
7F0DB25CEE21EF8965224350F01E4971C18B24F559885AE32CA2B94F87C5BEDB
BAFD9DD2A8270A1184AF34DF0A0891E2F76C96E6D2AD49338A8A119E8CE8DCE7
9C72802E43C1E2810FDD6392F0E47E68A64477D12B31D62F42A2B109E8AFFBC1
AB514225D837530B82D35D3DE84E48007C3CB4E6C5AC695E137876E8740667D5
6DADA3A6DE6DB023D57C63FA4ACAC5F0F70E635A1AEAF6D381089BA67B9F4110
043C37A4C7F1F14A803B14DDB9BB61A6A4BB722DF7ADA876CF93F659BB534A46
2774AD2E5F7F2497C0EEF3EACF228AC40C457621B3F56508DABF5DB547401D62
5FCA8D898B3074D7104FF68DC99CB358B721FC2E5B07E3CD60D281740AF3FFE1
1BDAC056509ED940137B2528258DDB95B4E8A7EC69AA2BE379C4072F78B9B67C
DA208397DCA0E531A9A4AF856B31C7B47C59EB93F461E9A49537C2D761139717
817DC874B4F2AE5EA483788763BBC9CC1014493A9CBB4BF6D935A470C945E36E
91C6ABA43EAF61E73CFF08401860F346B2593A1A8F4505A55A37A96545023CCF
74B957E5A6383872279BAB594944C0901B50F2C72F9C414970B7EFF8C863ABD7
63F1D05A086A21676A6B4C787B271DFAC1767151C7E33FD9B69B930BD9D02B3A
979ED2642499DC5FD19105A0C3A02263991B5A3B71790DAEA45029DDC4D18E74
DCF6DDE1ED76A44A2A5E3C0E087676D74F3DC0F498102B08D6C043F9BF3DDD26
E6AF37F6910E349ED0C55DE1ADE76E4329F6811EAE02FE897D817F8B0C7473A0
8D7951449195533007A36145E72EC8F616CD533C51844FCD76B5B208147A0D52
919F754FB7E4F96618492971937B8F5DD3A7B6152DA3EBCB7BC47773D9ADE6BE
8F3290F97286708D1E34645654195F28F46845C5362A053777522A4C68470EB9
ED9E6C2B03966B3851E2E0B78F0E02A6E52938420A0206438C7F37F04D6EA22D
0BD81A890F0E1D0F0062A03B564C2A3898374A12BDF5954205C47FE6FBA6FDDB
6B5669958AF1CA1314A67AD21E15F77A620254727C9A3D2EB37989140FC33E29
EB81AFC695521157AC6AFAE4B33BD9A388DDF1E8E85DB592AF91BD126CAC452A
3AC18FA10A7246B9BDD955C2F30699727A6B758D13CC049C8BF6EDB86B837925
D20FCFC0AD54E395EA3A20CE56CA9B1E0A7885F2E560E4410A0566A69676349C
AB60FC03D65A3A09A9C839B4664D067CF4AB01EA179C9622C2413E6EC8E4BB57
EEE79F074BF1EB12434B1D61ED0B7481F293E675DCB5AE72727859C7AE30B336
315BC5E41445E2CB45CE1E2F083BAEC4EF3BC71ABE5F6F6072D4AC67FEF6613B
0A3789D342D41C6903114DF19CEEE1055912205CD784F30FC2764136DBEFD2D1
F9FCD3056773F14F1ECA9A8C87392BD761C094953474BC52CB80F468769E967C
FEF04F1170B10CD23CE96E4BCFB55717A78CCBAA1584793CFD2CB589CDAC1CA3
ACA0B725CD7A58BFA22C7C08F578F81BE078652AE331109D332B9AC01C625BC2
FBA2837B45A5AD797ACC389C82F0CB1A1BF9174DB17669CB4A53D420890AD450
5D3EAC20AD371D0D612E489E4F5B4F436577CF0AC760CD931399C1F78AF111C4
69EE246492AE23C71E708B9A9FAAD74C87A70ADF57DE1483E586AD575F277B4D
1415A59E5FCDABF18ECEE585D735B3DB6FC79AFC52A5528A74109D66A2B164F3
3F7240AD38D5578CB6F0D85B2A1714188C08FCA3F7E6E7FDBCF6C8D759507377
B2E736B9C81D764A316CD6770C15382FDB865F51702557735E6492BD447B95AA
E9EC84E0CBE74961AFBFD8CBA324B50C049001CA7C0D732139400EDF484C0871
8A9A31CD72DAF88E3A5739B4368695569FA3CCDACCC5921B001E6E78BD59CC08
1A91709287C0BBA7C5E603212DE841A4D13A08DB452C85C1A37E401538F13F82
6B42857A083F54897AB916B227C58248C0D5E273929253A36CF836663ED99E52
2E0220BC6638B9B25CF008A18B5CC98F4EDB05424BEF20BAB66AED652AE48378
B61D169551241DEC7A4DCD8A0457D785E77ACBEDA1F6F3A73DD9662AA434F21F
599682932468C8153D54AF77E2142ED88604EDB1460E6D76F9EE8474FCE74DA3
B9E25C89C4391B45AD842C43F98E5519E7BE2D5790424863F9759F1CBD8D63D8
7571590DC0571B5ED2F93FE023417EA92E4526C0752767BD8B9F0FD9E92209F5
39DF4CC2F50E16607477E61ED55249651DD3A882486A677068FC608A2EB20804
CE378DFBECF3D5E9C367CE4B71048E00F2C2A3AA0D6AE7B2EA0468BA60DA828F
6F066D6AB3BA8354E921E64DF92D12F13D3F14B20467F5A8D9362651A7A926B0
70A7B8687D9245E37EBDBC20EDF6782FF04B1A9E8FC64AE2D3E0AC7AEA7D1DDA
044DD1D9FD2EEB8CE48458FB0CFB619121B60CC7E4320BC376B9C1254CA3DA85
5AC487E913FD7588D5334DA7044793D8DC13D745E1B2F4D59E8AC5F2FE8BEF19
81D012EEA8FFE86A76CF6B7340FD66811228F88340A1FF1C69B911609CB0BFC3
4C9ECC3310F3368A76ED807371BE9FC9929D73F0BF1B5E4063A011341B044E16
23F6180D122AE0881D111E8D557FA1A6414A69BAC5415E844F5450171F9EED87
6F5E6FE925CCC26A4A727C38710B8F8CE9CC6CF9A23A23AB7B1158809E5945B8
F2C23CDDA037E9AAFD4034FF7C154EA766E03A2AC5C9C8F51A198A975C6B2D37
9372C9FD2DD1A496EDE610C57AB76D92A3B42CE6315FFB7F34690BB1D0E381D3
EE8B5E7A57E780EE74805C08E7448C99AFC8382BD61F039516AA1934524434CF
3FFA2347526839F19F2140D84AFA033B624DB62E2CFE1B1C3E61DF18EA038616
AA598E7A02493E3266E38C6B80F2C2B800732BC3CD1BBA14CCCC013D92A4587A
6B8A7A2EB03FE8792DCEC9222F0DAEA3BEF1A9FC0802343A578BC8115305E6FA
46435FA27A379E3A0D0F3B1F3752BCE380E26F777C752BE39E7A5B5158828C6B
78C27D79AE2A2BF54337FE6C8C72B6643726BB6DB16D60910C2F82C7DD97D91C
B3D8EBDCB64B1E9D1C4973C2CC28C42027842128715D87D61B1CE22E299E60DB
BE258B51C0FBBE30B770A543BBF56C3D7986DDB35B720D3D74AF81768CF3620E
DFEE35CFD515832202048BE8F21596C3A8559B06ED64B66343C876BC3A4D54B3
4190CF4BF2F8B8BB4BDB9393E44FA7E554218D367133F7123C2E2D83F9E6F20A
32C1A9A3C5CE6DFA5CAD6BB888AE7A387C7904B43F28216DC34BA80F5D038D7E
9D5E6FE45ECB69A6A1C41823402D5A26253E1AAA0B20772C464D23E4F784401D
D1B886D1E00782B7FE7FC1A78F0D8D4D4EEBB66BC088FDA4C4E177CDB0AAB752
77BC34B226CB544BC8CD3B719CB08BB8
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX12
%!PS-AdobeFont-1.1: CMBX12 1.0
%%CreationDate: 1991 Aug 20 16:34:54
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX12) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX12 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 70 /F put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 119 /w put
readonly def
/FontBBox{-53 -251 1139 750}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F0364CD5660F74BEE96790DE35AFA90CCF712
B1805DA88AE375A04D99598EADFC625BDC1F9C315B6CF28C9BD427F32C745C99
AEBE70DAAED49EA45AF94F081934AA47894A370D698ABABDA4215500B190AF26
7FCFB7DDA2BC68605A4EF61ECCA3D61C684B47FFB5887A3BEDE0B4D30E8EBABF
20980C23312618EB0EAF289B2924FF4A334B85D98FD68545FDADB47F991E7390
B10EE86A46A5AF8866C010225024D5E5862D49DEB5D8ECCB95D94283C50A363D
68A49071445610F03CE3600945118A6BC0B3AA4593104E727261C68C4A47F809
D77E4CF27B3681F6B6F3AC498E45361BF9E01FAF5527F5E3CC790D3084674B3E
26296F3E03321B5C555D2458578A89E72D3166A3C5D740B3ABB127CF420C316D
F957873DA04CF0DB25A73574A4DE2E4F2D5D4E8E0B430654CF7F341A1BDB3E26
77C194764EAD58C585F49EF10843FE020F9FDFD9008D660DE50B9BD7A2A87299
BC319E66D781101BB956E30643A19B93C8967E1AE4719F300BFE5866F0D6DA5E
C55E171A24D3B707EFA325D47F473764E99BC8B1108D815CF2ACADFA6C4663E8
30855D673CE98AB78F5F829F7FA226AB57F07B3E7D4E7CE30ED3B7EB0D3035C5
148DA8D9FA34483414FDA8E3DC9E6C479E3EEE9A11A0547FC9085FA4631AD19C
E936E0598E3197207FA7BB6E55CFD5EF72AEC12D9A9675241C7A71316B2E148D
E2A1732B3627109EA446CB320EBBE2E78281CDF0890E2E72B6711335857F1E23
337C75E729701E93D5BEC0630CDC7F4E957233EC09F917E5CA703C7E93841598
0E73843FC6619DE017C8473A6D1B2BE5142DEBA285B98FA1CC5E64D2ADB981E6
472971848451A245DDF6AA3B8225E9AC8E4630B0FF32D679EC27ACAD85C6394E
A6F71023B660EE883D8B676837E9EBA4E42BA8F365433A900F1DC3A9F0E88A26
35F847A5F1235B1FEF8D03A4B4E87ADBF23F152B4090F29639CA175827B86DC2
F963EA53A029BABF522FF375A1BB08FEDF627678BC9DA3F0D3E84FE661F1BFDA
0C3FA5C06E9D956C49B6B6E8FDECA7582B9879FE18D4B1CD8BFD11AC3CBD9C4A
FBD3F97CDE85B544A53E5AABDCD0EAF63906BEDDB4669206F0CCCCEAB9B747FE
9B2739316A2F053E5B7A1084D88C73F8DD7AF24F98961A55669F5F378378673C
B65DE9F6586B04374EB3AE757A462DF22DB2E3FFAA55C7EAA9F336A27B8DB1A6
3862D6284753562088FD9DC0A1B653440D1B5A2733BA4A87B9DCBCED197EC569
E6221DB4EE749223048B18B7EC8709D7DFCB9C6E9727A2E3AB0832B0CE6ADFF8
43B725596B2711F1D426B9A627CBE3666BE62A5A0128E2F54071ADBA94BAE7B4
746832C1360FC0A6700861FD54DC08B6CEB552D6F489C5913ED3EF105528B1CE
34074BB5A6DC1FC7CF8410A2590BD849260B3B9A073B614BCF669DA0AC1AD150
F70CD8EADBFE7AD5E52CCA63126CAD8FB940FCA54A4B1FDE2DAB2C432A815216
641C09372B2CF112A27D5DCE5612A132A8DC9C6E3FA490E7EF789D2FEA888A3E
EA37110E3BEEBFBE22EBDEAD620A4483D533D092476862A3020D7F27D76439D8
8F1D5F56DA1B023BFE1B17D9009D09134586C2E72480CD0E79A1A5F925FDCDAF
9EF2787AE479FE094EBD07A16A956DE21954AB2EB9E04852B09C3C74AF8008AC
1569DB89B77A45832BC34817B2A79E66EC200D489A8445F1FBC5A44234E56345
83F041643758B7D7954EA555A1C410CC710BA8BD2DA64F5BAA4BA49375F228B9
33334A415FA6EA491A8C4CB0A80B1239702F10667B9406D52CE75686A80DAF0D
F20E9E417DF5B20B2FCA8D8EF2F82B7F21668FEE7B8E4FCADF9AE408E641DCE8
DEDE7D7A1F77788ECEDF02608D010C259A06823ED25347734C10159D9C03BA0E
4AD7A27AA6F6D9B203D2A1B878709914EDCDE04283F4D09A315D5DE6D2463B06
D59BA30F5B1AE0049265D5DBBC15F594EEB13751F3B8BF8C80040EA399ED4B61
99C05A8978A266E912264019E2126EDE7343107678D3F7A6BD1665705F831F0A
F09B7F55B59CEEEAB3F8209BE764090DD78E4259351E0D8B2B4E368C78881C32
FC3399470AECB175571B783F0B3C1003C6609907712002A35E01E2DDD63CC7E0
52BD8DE947F7416C96E0214C4DD15184CA397C10F89E68B491E37A930AB1EB2C
CE4293370C0921100061306E228B780C7790FCA412628CBE928CF759BC39D007
FF3D7BDD01F4051BE4A077699A38969D5CE6269BDCA3C5E38897FE8C9C81602B
21EF7FB56FE0ECEAA0830B5D127D8F746136A04F11BC50D8EB2533072EB09E76
3F1B8C0EC150528BDDBA658747A92464B12EDE7A685581BED39B54D814D0EE46
DA0C5555A33B8F65191B333E61821FB459DA8F93545BD503BC1B2419586EC9E9
E25686B29CE050E6F9736AD444DB6D629A80E8E1189BFE490FD652831F1E0717
80104976E7BA011095706C69EC5D70A6A973E1EDBE67EA585917BBB367A05B97
B2412CC11128F64B8D3231C2F4017DCF1DFAE9A1D820A49E831FE36EAC025B64
DD410C48C20F6C54DFD7646509DEADA4052409EC98D8D8E65799547A9C3162D6
AF7742A42C2735B28F9B2E66108AB94E3B3EE541E3B709503DEE5CABDC0F076E
14AD929ACDFBAACA0CC2CA21597217FFA0EE4EA262F2414E9A57FD1D577CF7F5
12B1AF22C8A85E66917AB5EA175EB5EC87B413791E43D69E761F19C2D9C99CFD
9C68BF032BC78081B5C61E4B5172EA8550A74A6AFDAA4C6B50AAB91726482929
34745A28B1B811F53731BFEC65E27CE090C78F2C605661A7CCBCF31D82D40F60
4342E1AB0949335B3AD944836DE9B65060EEDBB633997783DAB11FE4D3B9DAF6
77BBA48B1398436572EF178586CCD221E4D6345CC53D17E6189A9FE70A07F380
16B395AA223D3B80ACFC9F53BD2BC076E185DA7E5EBC55780A1C068486126C4C
B2AC845D6B71FCF97C641C311A920E7B01ADE6304C9C77E4123AB76FD6883DA0
1F6A58310173EBCB0731B0592984B1C1034476D8F8A3498CD8CE8BF17203B1BD
08E68E4E15357C50A834F225D20AC0A08C975C603FDFC6F96EC8CA89839DA77E
C343E87366D4B055D1F9B0599EEA7A772905D5E94A6CACE844FFF0A9BDD2C07B
AECB37D9673B8268B3A46BF9EC6D225611621BCA46CADC72BA79C8B2CF9EC062
5043A311D58A05B52266322FB95A13A7D7208A02F2D1A9EBB48C5D0ACB907F36
537E4AECCD15884DD4898CF7B5E447C0CBC62B335C64F667C78FA076E6D9E1F8
CA4994C43CDDBCBE4BCB148EE533A97D96E2EFB896AA7C31E873781EC45CD1A6
189F2E7095FCB6904F063DCE3CF8705F9091587A46B7600F8A3F65BB19E5BB4C
FD9C93C00243393174AFCF48F7A8B363E88AB2457DC367CB5E762D944D7BAA90
C10676F399A201E2FC363A92E5ECA061A966835E844BB760209DB2C360889BD7
755393A438B45AB355B6A1E74379C58BB11EE78FE7F0C1655615BD7CA78D1518
9DF26276BD98364BB559D7A9FFDD5BDF6E77E88C61A266964F81E1AEF595A484
8930FE55E89932354FFEF89BF5C538C3C23D646E7FE177BD179A4E982B2B5246
63A583E37D596C95936972CD589AC6FC5675B458F9E256DBF4C372B6F6AF35E7
F2A2B8736E4292FD72929B6B14BC15F444A1352E4AEAEC0FFC6F6E3B9C9F9C7B
196030A897C24811C5346DC553C01043096512B53951D9E6D5FA3273892F428D
6780C0768168BF7CE7E87206E3B1C24EAFC066C7C81E4268E0F33069406C9892
03A2AD13BDF94939594EEA2BBCB415684AB7F6DFEE0FC28BA69B85B53E7B40CA
6295FE20E522274CE9879B104AAC40AC0619300DFB18AA22A61796CB49801995
383FD80B3B284EEC55D3989C1F90B3ACC3E619A98FA1FC9E31F556614A40C75B
E001A26FDAEE12F608DB7920C8A8D19D99586FFEF515271A227DA0919AC677E5
0BFDEE641CED47CBED23A4353E6F80E8115616B6B8D05A725FC17A29BB7D9A14
2D73E70B0C5D4F05B16AB18508B092D310CE4E9F1D50DE667313ECDBF0141E0A
81E2DE02F99AEA9902E9AB53B9F8A62202F0771DC6F5DDCD68CEC7D77F5E9DBC
76233CF356C55C87C9763D8E2CB8466A0CA2E61FB1510BF1CCB737D88BD9A07D
7DAB5430AC838CC4E704ED0DAB69BE09491131797EE30B8EDBD801303F5EF2AD
9DB481DD0A384647A8299DAF22E382E488619D6F624458FEBA46BD93F5D5FD69
4F072E57B33B865B59091BF33F21F9D143EF421E6163C86B04CE3C404FB93620
B7E9001C3B6ED75D509F6907B9E373F4EC0BA5E7E6F7E19905CC306053E21522
B048222C9279C64ABC561880FDAE5EC15DE0475ECC241C685D15A7ECB94B05EA
5F0414E7F9C7B9B4D6C9B5AF232289D30C7107904DD9BE535D8BFB5AB4F30EF8
09C9AB312676A633F573FAB95659F6130ED2F7C53C87352258D12881CA73557E
C94CAA3A09DFF57330C22DE17906EF44F0973C239BC9477AF87445395F350D7B
C267F0BFCF4620240C46CAA337AE7F21CBB7F8939445201D7E16CB5EA336959C
84BA77764A072E978DB49336C871CE67753077DE8F6F4F9CC838E1AAD48A6219
D0880D4772808D94DA4055D9D85451189084AE5AE48271FED561E5CAB4724A55
63FE5212C4CDE1F7BC458E01DB21F3C945B3C23B59813403A017AFC13D84ACEB
E3ECC8E103CF74FFFC381EA313B03B1B8D7CC1641F8B72DC5E0F112B4CCE10E2
E794505AD46DAFED0FB91F0E56363B2241F52F2AEBCE900E0F87FFE3F8FB3726
FDC9186A268CDFAE226A704C4498CF91A25FD01D1A466B5C9F49DDC300434961
AEA651ECC61B9B02F606B01BCB49FF343CCF77410C207F1434EBDF098043282F
E03C2D5CE68A41EF24BBBB2A768191D719D78F39E231CBF7ED892D28DDD6AC5E
C4004B10A49C638339A597FA1384908FCC97FBA10707F14CFD33BC8478EEAA2C
D05BB0F030DD45860BFA9DD17F0A6E0BCFD3401CFD47DF3AB4A8C4D67FCB8514
16C77FD4B0889D6603D52E48DE787F6477D0959B461995435C3A6C05D8AACACF
DD80C40137438468E56DD4B3F94026DB65FD94DD6E6E06CC1E3606651C869CE4
6BB1BECD1B935DED26F9BFDF1676808D9BF926FAD5414D03E6398B8CE15773D1
7FB5E0874BC33A00A6D7E410C751043976888C2FED3C66A268DBADABD0713FDB
60C2FD0AE36DAEE635C9E75C8611929A7601AEF315CC6FB91BA8D7724D1AEFBC
28B8C7D3D7589256D5FB51F74ABE21C892499F64FE860D468E143553C6A1287A
FFBDBD34BFE72050718C861E28F429E438D80A22974CCF0BF050499A64E4AAA7
169D2069E8D8432FB36FFFD9E1CE87E117E86F83FE647FED0A977F613B2104C0
1379D4F3708D5C1226BE65E756E13B99C0ECACE0D74D58121D1B003B27333F04
BA4AF686BA98124AD5CAF062921A29A8C4E604F6E7F0FF8004C49273C9D8DC1D
20A809C829DB158E9A9CA438DE872C6B8901886507C0F48AB00694E930A5AA57
7D91606BBDE22F1A043F8DC213D29F89C6A3AE076203AF0060D93EA67B799304
FA94D8AAE70876FD9D162B9043CB79F7C8FF5FB0B036565041F69F80BD42D915
91CC14B8461085B4D79C1DB49961C28B7601C1AF10DAC2DF6E4F68F2C82488F1
AF5A5EEAC453640D3A560A1C816E4964D083226533EEE3A89C588D800D2B06DC
EB78B1EE7FCB7A1FAABA367671016EEACA9FEA1933CCC50CEB1CA2ACC43E74D4
6E836AF83BC2789D69B70AE4B9E31858DF2C366143FCB564715C9934A988751F
FEDCCDCF204DD2BFB0FA1FF587D2888C9DC5FF0EEDE19AAADE41E10F75614F60
F9A0B6E5B57FBD58424156EC3BD4725852305BA59388E761787035CFE21DE75F
0B0D0E7FCCD490DEB613D5E3C91AA1918024737576F6843867FF9843F2E5A335
1E05F09747C4FD8E0F2C413F39EA78EC1ADEA88D14A9DB0A625724163012E1FD
884815AF82BC5749F94AAB06E83746321F9FC33A8B223665C1157415B684E9A2
6628D76946C39DF8A60AEC044AF5063AFE49168FA8BA285CC7837EA287ACE1C7
50D3A95BA3DD68E94AD56ED529853B4E83D8172E3B0786A6E81A4E46AD523594
C82B8FAC6B648598D2B1673660D1E9D8388C9F1A1DD41FFA1A2F5B0525E5DBD6
321A120B214DC2DA897C6A9FD5082EC96A1AAAB00FB5678FA0CA49211A0F6B24
75B31B54F169D722145CB85BAFFC75AFC5BA910FFD02E65C9D2970F33AEBD44A
C949225B502C433116FF46A847D01BF4FE7A56DBC1A8317E3B1FCC3EBB477DE2
3A2F136109E3BA394A231BD79E38C11F2FDF6474D65AF5B1B628D27BE9B1B3BA
6517F733751936A6DF3D3F5D487E66031527C592910E17058C2A0C3C6B21890B
07838E0D05C48E37687C80D3BD63C58D62F385F9C02DAACF3EAF8CA804C5023A
BF5D2B4B4FF1712B4CAE3F7670CF8560E7F6D76C795F28AE8BA497CB6EFFD2F8
3809F95EAC12CD69FF1B0DB2488DC2FB5092D60443BD8378EEC354B7B7D057A0
AEC06A4FAE551033D56B604EC690EE0EA4D6C760E20ADDEF0E6860CBF72FD8D3
4239CEFFD263855A42EA840B8FC54F0C155D4DA3EC345DBA75BBA764ECB767E8
0D9E2BCFB1311713B3F8ABE15E17929C35B2E191DE0CDF82BFEA7CF7C4B92807
4D6E2F7C8ACB124F216DFBF7359C37D1382D4D89DD0FB563CCE55F50C0A501D5
A382672FC5A42269E029C3B208E6B959CCEFEE22741623FB87298A72F2E256C3
CC71B687F8AAA7BE0C11C055BF13806707A725DF0BF4B3A0ACA5BA5531ED24CB
032587CE27F754365BA298D818DC890676928160F47F999BBB72568A4808DFA9
E0A0AE852169B9CF98317FC33ADE99C4F7E5042AAAD898060617B7AA706E7427
F63E3103F2C89EED4975968AEB7500653E935C8C8A4CE3C84733BF3F37142595
339ABA26C26EADDD28F8648F6A0EF592233EC4A3C6010CA0FA8C1123E3E7A9D4
7A6A90CB2E9D95AA5E67483EE3FA0425376562F263F510AFD85ABA4D0983F44D
191687578475CC071FB95FACDEBF284ED6377BD16C64FF7FD2EBBE6607633FE6
61805C1F1084F06D39221C40BF168A4C46DAC40F16656DCEC4E76F5B5E8D9AA4
1F9547F411491B37DEEC5EEDEFF924AF00A07A23FB984A69E2323AEB42AA9017
99453EDBA94E261B02F3A75DF6A48550C1CC01E18F4210418152B6DB96F820F0
CB85C4D8C9662B6C0BF71B679539AE0DE6B35BA17A2281DDA42808EDDD95DC33
4105C46AFEEF818BD5BC42140387AED57EF119ECA5DBDA027DE7C1A2DB2520EA
E4169037B24DFA044E1173427F2C5C4CD09E8B2DB2FA7721339AC8CF9014DA65
6EACFA26596B1B40215617BCD388FF3595BF4A096C5CB765EC12FCF6B7EFBB23
5937B6DF4B430FE70D6DDFA3FA66F6FE9B43F394AC06D0D0AE60416D516245D1
4ACD9FAA97DD
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 44 /comma put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 52 /four put
dup 55 /seven put
dup 65 /A put
dup 66 /B put
dup 67 /C put
dup 68 /D put
dup 69 /E put
dup 70 /F put
dup 73 /I put
dup 76 /L put
dup 77 /M put
dup 80 /P put
dup 82 /R put
dup 83 /S put
dup 87 /W put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 107 /k put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 118 /v put
dup 119 /w put
dup 120 /x put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3BEFD8D9C400015B65
0F2F536D035626B1FF0A69D732C7A1836D635C30C06BED4327737029E5BA5830
B9E88A4024C3326AD2F34F47B54739B48825AD6699F7D117EA4C4AEC4440BF6D
AA0099DEFD326235965C63647921828BF269ECC87A2B1C8CAD6C78B6E561B007
97BE2BC7CA32B4534075F6491BE959D1F635463E71679E527F4F456F774B2AF8
FEF3D8C63B283796A9AD847424B4E6508546C36223A3B17EB82A56592F27FC27
F1D49D5FF4BBC0E16231807AF7E195AA7D0D01C7566243448B222D57B811EAE6
DE9370F84E207DC9BEC731AD6040FD9B804FA14CA264B73136F9AF34390319F6
A543D5D4D7FDDDF2F76651E557683614521110DEC1CCAC426117DDA7D6CF1B8B
7879B21FDC78BAB3C944BCDCD6A65B67F3692F0A8D5E36FB783A63D4FBC9842E
2CBC2720A7206F42A99AEC79FBBA92A27965AF40A71E05E4BA8D7FC58C828226
7A8B47241F73590CE626EDA930A1D18D758636250D9D6A09E133378CD725F586
F40320EF186DDF87AF8C2F5470EADFF39C60384EB4DD859794CDD6E4AA8E8A7A
18E246579B5FD876A7C0AFB4D935B09F36A7441292FF926171B0E25FC7EA594E
01E0E7CEE1D3F4653DF314F1B24A651DE4DDFB5A8F647CDEF44ECA5D3BA91A1C
B9421DE1DD7BC5D109B52B7093D785F43D7167934AFFDAE5D2205E9E7DAD8A3C
087831F4672769F651D9F7ED759091062EED2A868E004E417D8168E8214D8C12
C157E9272C09D25038F29F5128D4644A9E56BDDB6EC3B2317A4CE02503DE53B8
EDDB1C5596BDA5B82EF2C87DA77FD56C47CD29BEC5AA33ACB3EF59E37C217506
0C6357A22ED1A48386D9A9DA09BE0B669E863223BDCA25CC27693AED5C5A9D47
5475E99EB7334382D4D5D9BB55F023BDC249FA1E0A7F252FCB0CB4E7709C4300
CF17F9BECAF142B373C21E6CD7D029F215CEAD50E64D3B9237193F2BA020BC0B
67455D8D35C6DA838E0E02B6CF09C147A9336A868279D78D5687132472499147
B8F7FA2360165B691898291760332C41A0B8BB6958FCAAE52C970D9CBE799A76
206DA6F009E5D9465C27AE54B3E0A3883EF460156F4A0C159A6D0E314380D95F
72843EB1351CA800EF63522DCA3898757CA11241CFDDC38ABE6BB8ED48F0E020
101604B0D8985D512C8D7C22B96518B8235920A92F4F2E562589A86DE0F2FBD3
F35892DDC9667BC5A99F8536715BCD4644FAF54C91AFBF843352377DE95EA2F7
74F5881E3AF035A96CD83831472E387F8CA17C38F009AF8CCFE2AB3E14A06220
4ECC96721EBBEA35B29126A5B4051303458F742E5D683B96EE3518898EFD2452
8019DECA9314173CCC381E0E040EF1416DC9C2B9474FC4A738C02F85D705E360
4C9580FEA0682C344653992833E842EA6B13979FA9C391A1EF5046260103133D
05A38966FA45EF0CCFC2AEA3B4E47F70BA2D5AEE9FFAE55ACBACE2270E744E09
215584CB0B2F5B8230C79C10DE0D6DECB9942742FAF0C1B27E139CE47935AFD3
F1928CBBE9E5FD38574B9F4B69DA118C35877C709D65653CA240865F625827B2
26B9E905C86486F5668FB8033D6A41037194F833C82E10F98EA15CBEC68785AD
5EA4F1C38F8D741AE75CF84189942803DA2E31A7BA44B674B7C4F39E5A36D8E3
14BC8E5E2F6FFB215B6A42BC33ACB3FEA41BF0A796975F0B57124EBC8D146AC4
CF3812368A4530F7C08405849B1FA27CDA3F8C698234AB1C2FDD07B124B8E29F
DCA17904A9101F97EEB8768F426C79006399964AEA825CB0CE92CE360C8CDD84
A7F63B77E4B7C38BB03F80F1F06200E396BD7D6D8958234274F2E4ABE9EE78BE
A1BE7134CC83F7C784A2EB265B20D2C324A4B73D12E98E550F562D911D55D35B
875A0A5066F615E3A3148E68EF5DB1B1CB77370F794DD1DCA18B771563B2E1B5
F46396EEC5C9DCA8C1E7CA326BED8361DA2FCBECFA8719DA981BBDB31538ACF9
D11EA180E4D40B22628F9D794CB2BF1CFA5880FE82D2882A95A151F53243D054
B70BBB110B5E7607B6DC1452147451A23E8AD0039B15503FE05E5415EB94EF85
549C4D36366A8D7719FF0076E07ECF61B0A2D4181E7FE51A9BDD0B5148E794F3
F8AE56BD16806C0E41F91BB8CAA9DDF9AC23A319A3E680964523C298CBF11B40
DC87AA03DE6C0FFBB8A11384E7425D6D85CDFE52933829BEB00695FAC1DC10A3
E0CE750B2032CAFB70A144A246B4DBB38FF31E59E51E4F4CF76D26BDCAF7CE33
2D99133A654AFC77D8E737B0587FF4F8431009F0C7CDB0A3C48136DDFBA77115
1E4B8D6124A0DF6DBED3653E63CA8548816FE0D8B4781E673B0FB014E5EB3DC0
D8B89A96710DB857220359B58813264156A5BEDC9117E7F4D50056EAFD789903
DF52096CB426801D11F7475A7E0DC4E29725147A240A934DAADCABA8E80D3CA6
BEEAC5D38CADAE195264B201411760F8BFC2198DEBD589271E798815CDA6E6ED
8BF250CF7F61F5F681B9220523235222254627C7EBBEE496E97EDFC8E5884EE9
7988558915AD5D43E7D70BDEE38A52F57E7B7F10FD3812BBA363916FC7BD3034
25A090805BEB320616F3F581ACB9A730FA4F5F76AB9382CD741E20D2F3C6F9D9
C9FF491E15FE502AF1A0C81D428BA91A89ED68A0B53CE76A63889D603724E406
A29567972DC4C849DCFF9F6D2A2F3CA0B8A96091E2AD20E253898430983E11B7
8C014A9CD3958D941BE48C1C85027EA8EC2F7FE519392EDC9F6F31EFFCC6F17D
1A0053127B8819FEFFEFACF0898218BC423BF5F85B4837EBCA6044B37A3099A0
35A544EF8427315D386536AA3DEC931AE2A6D1D5B29511EAA5554DAF15688772
670B85675927E8BFD8BECFB41C4DD0C3C8979E0B4605874B760FC5C8564F6C47
DB4389A599B1977F6C8B4B4D81C962717B528010347F58F2EF370FF2C46ECD4B
005614D1DE212BC3CE1D43E3E6564C6691D1CA135D3C55C4B4269C706646CD52
723CC0B90D7AB04D590F40FD8F783F5E39D91A79F301A238C36D653C05972A31
C7CDF96F280E7051D5115A9C4660C9361A32A9ED2A4D6EAF575D5C0D9560825A
82E623641106C52EF52CED30AAB1CA58C8BC3FB3D7B7BB3068D741F30196C703
B90943733B9AE380F6211E8C7E1A68B4C19EC5F89FBB5B3C3DA0DAF3A428926A
51C82D67D5A60012CC20D4D39B42D7687DD8BDD0147A443883B7D58E8D1141B9
B84A7603BF7C3FFAE525BAC6CB8B0F1FFE18A2A8E64166314B22EE88809B2C99
E82E0B15CFB2468713B52D32A09F639ACB0470507E0EEAC925FB870DB769D997
B97BFC465E1FBB8C976FC093BB81F487623883A13862388261BBD82106F24009
C6BB2653868B339AEA2D4437F04792C3A36B58724AC93B760F5CAE039AA5EF49
5FAD040E6D44B0D5EAB157AB25559AB7249163EBD0CC538BB4F2C667AEBEB289
52D86CCE3710C645F1F7CD80F70C876F3075BDDCDCE1B406E802760CF0BB9ACE
B9CC2DEBB2F3C7594CECDF2A309606EAEB446A054449DFC764A7FF5A8CD8F779
CC2581B2CBA2A7B5F8338687264296BB8903F6FAD1ED99C71A7D14995ED9AD5B
8BBDE706EE37C83F7746752556735D8A2A84360F637D5C3244F000DD48D27954
4A8F59A577FEC44CFB6BA6230804999AE1E47DDE1ABC34053AAC7CA8A4E57AA4
9B23A26CF517370DF80E08B049C66798222BA741048C796A0674BA8387A66DAC
E4F4EF8D1629BE5F2C8D1E34EEEDA0AFF79E9AFC5D94FA988534142C1C49E4C3
BB2A0B767C161D22CBCF69485A2C3CF1DE15DACF07DC5090B1E7AD905276D033
D6279A0A9310FFA67A03D3027CEDD0F304B7855BF70A2C8B0FE17AE719F4C14F
CBB0522F8AF89E12AE9BFF38D30067E51C00600FA67D41F93A29751F0A02FDF6
CA889508F2BA9D8C8A1BFC25E0450F59FD193A94DD00DB4528F8F4E4F0A9E89A
434643714849E7784139FB28C5EBFB1B1746483F74DB0CDE249FAA41F186BF80
784CA0450F49D3C6E3CF0621C2464452C20E2C5C49DE82956BD1121D08357B19
B85C84C6172A3A0B7AB69F5B2F0DDAD7EB6716B01A5CA1ECCB8E1775181A235B
6B7FDD02A7F3DC8B8ED5EEE41D3CAB53343476827F2A047E1D11E0CE214C8455
943D312CF8E697C622430F1A6C31200491CA191E43154304F923D8CD601EE4F1
21633D3C9898D78A48342650C853E4936F625AE5BF889B7A2FAE6884497B20CE
B9C69913B2AA7D78347A64A18C16CB98B87C130E6DE721A4642E3B3B83036171
93938D487FD78AB52E80F8EB009499772E4BE9518F20465E2B8F77BA0549CDD4
FD59DAE9E5D1F8135C926DB62B50B0FDB70CA42A7F8C69D2E889056091FBC31B
61DCFB8290A3261B0E08764548DE7F155FFF82E025430392C0DFCC737611E23A
0F6407F8EB0738CC6C5E17804083971A7D5E408A2370F1BAF706616F070C1111
5A73FDD933E90B182AE142097DBB97B178FA338BB52EBBEBDE656A6655C48F77
9BC2829E030DCF0F8A43AC9C1FA46537A28F490CBF5A4A2315DE4047217EEE3E
44B752ABA255ACBB60FB33781AC970F8C1FF31CEE6217A891782DC61871612D2
14A527FE8BD96F29CA91131B038B3ED3DE4BF98F64E1F0205EF7DC0669BA9653
1F18DB5108C6DCC32BA094DB0280453EED3471E9283DD9E6439F1D1BD1922126
AF58B234E2EE1BB9804CFBFF850DE92920294C78A323906810E95C62D07682EA
1376A38A808577CC37AE3C3345731710479E82457417B37F4ADE469B4EF50138
8337F0ABF6DE01C119B1304CC918F95E6680F953B9EABA6E02803D904EE2D375
EE79D5677912E7E8CB060B662A861BD7D29715E78EBA37498314CD893A4CCB47
F5AFD54A402EF259E9CEEEA27BCB75ED5FEDC99579BC84DD9689682E50FD72E8
7E5D65265967BA005AF9C1046D4D7C71A077A72D537438BB17CD11B64710317B
572F517D204C5037BECAAA347063079CFFF22BF87F9F8AAADD1FCA5782D48B7C
28B6EE4166AD59163DD7706AE8353F2DB9234019221391867E994CEC5B986BCC
B9C552F90AF55D3EA41864702043C9BB0301DA9FFEAC6679FC534C4E303638D6
232A6FC43A4472F6483CFC3C6D90079C02B6C07C04A125E063B2E83CB7D889E0
714E5FA9F136C1299256CF36E14CB2455BDE479E1F387AA07BC88A83AA0B8671
3A215E214E5248E93F3EAAF36588F5043449B265AFA17B752A89FD7EBF12831C
0FCA5EBFB6263122BFD4DD73337B8ED84A8F36E52CF0FC5EBAD24487F8D8EB62
13C57FF9CC491AA981EC073BA53AEDB6AB1782C4E965116E5B1B619DF3B96819
7D7DE7EF51556F10CBF28E2D8C14462B03B85DE5F34AEF987FE8F11B2F3654F1
DD06F97763ADFEC0855CC01510C790F340FDACC9203EB639BD3747B256E1F7BB
4A6C5BAAFF4282C7325EBD039F84A370F3DA30CED7C81EB9C0A6C86B66ACBFD2
B6CABC8B5CE22009195DFFDD0FCA6BC3FD2407F44F63F3D7BF1748629B442891
01DC870E5310F66C7A6B09D6DF8624C634D1D785153F5688B1822FD970891FB8
00BFD995C0D3F774527E81CAFB61C9244E4F9DB2FC729DBB2F062785FC431B87
6652B80753847982A5E64549A358A1D77D9F1DD6CF0F8B3ACA4E4BC79164BBDC
3F9F823E5897D42C1AB091CD428722D9A9A2EFFCC04B645C41578267AEFAA676
9749CD201ECC2D9691820658F5AE4082F06D8C5C785C6B927EE01921386CBA82
D42A822F98CA101ADD335F05D4F02DA36C9DF3FEC9CA703290AD9EDF9E8B6F13
624E0CC8F4E8078EF905D9896FB2552CBFB44CDDBFDAEB6C63A24CAE869A5DC8
9E881E360C7962203EB85AA677F15D8C873A100C46C33AEB2A5F83DC1A02B0B0
47ED9781A3CDE0A6E7E22BA4E802993BDBECEB7EAAB60C5B7AA841188640E81C
42CBC9731001FD886A339AACCD8C91037931C6BB87D5D6ECCF261967F951D6E9
D46D3A799F6F0A3C4DEFEE29E33E0B2105B5DF52FF9AD2A4FC2A090D90839625
4C90D398113D8EF049964FD0D7A39DF6C9593201589E02F1937824E3C5CF45B9
3046421A37AD46AF4842281EE750FCF31DAF8FAF42024C0510F87715B4E87A10
ED3EF990177D25EB628C336FFF8D11EB3B895E67CE53BBCF1F66C73C273C1157
CD54AA9BB214DF69D603EEDD04603EA42B23C674EFA7E5126FEA8C5ED316D6AC
F8C6D069C25BC25F946F3E6E7A0796C570539B665E452D44FC8D44411A6277A0
48CD5488201969E55A3AA2F8948A5A35C10876B1CEA84C6B37FED205B82F138A
2B9BBA9DDDDF2AE65860DCBB72DED67937EC0CDD11B09AEE1BDC376FFABA7C2D
5B1CD73AD92DD48236B2070FBF343A677A8C5F7F5A0C75AE3C2F9C7A42BD0D3D
54EEF4A46C38DF4796A8814E257872715E6ED37CBF2A8B60B46700096A53945E
BDD8F50F5404E17490EDDE8C8E1F86E96F2B600589E66DCB90D109C61E67EAE6
8C99C0D1BBC525306AB8785A90FAA05C9B529E787BF01D0805580DF6DDFFFC7E
600187C0D9CCB398B0DFC16BC7927C7F5CDE531DE7CC2DAE4B87BFE8F58F25AB
674AF30E3775E9869A69F61D87EE38578ED9443B70D00BFABEBD79D282312ADF
530B3F2D479BE1FCC2569A8AF0B00471366119C3E04CC4D2A09FCCFEEB4FDA55
409D1FD1695DF20A223612E68173A4102DB4621A07ACA3DA3390F75A83862852
22D321B7F83D2AB202C1BD7CBBF0D056F25E266B2502EE7984F926E65781AE89
EAB0424F1DA5B177C02A38C6437280DC90BBD0426FF66E2819E2F7885BA08B4D
91D96765C5F2F155742D2EC98BD165CCBE14B84250C357BC47B0DBB6659087B6
E3B4AF42899A2D92801A968CDA90F61B9AFFE949D6EAECEAFF1D291796E81559
5B4D360E6C5E87951BD260447B5FF0F3CFB7ED08C8F7CA7B1A32DF31110D524B
3FF34E674057759BA4730061AE0D9975E6FDAFF4489DADBB3DDE771D136B7231
BEA8BA95B765895BF6DF12EAA7D39435E297A1C57437BF864A982E0EBD25017B
A76D476E849730BF73D949B3A7EBC9684A377C88D31D0093F135D37220366531
1F18171AC649E8E2A6FD32C1DD8666872C19C68D4BA415808547C6CA639645D4
EF1A4E13F54FA78E859AC36AAC57D01AE73548F0E1CF5BB88B644E3B6723274B
7AB06F8CCD20BAB997BDB89C7D1E1A4A4B39E09152957BB7D7879B967B3227E4
221AC1014C9B64787BAD1C59543CEF4A897180618A149E2365A0BB6261C09916
008C487D6BC9ED16A1EE8B3EE8F456FD950E96FE3E09DBC498B30E37422803D7
2E27C15C3F1212C9D42D81AACE0726362C29F91EEF5BCCE01B34333BEEB3FC11
5CF096F45EA326C9D3BA917C6C68586716B396EB2CB8FB13BE84E31B7B55360D
36A935D8AD1A089F5B2B385EC3EF9DC39C392B5163DC991C2DECEAAABE3B0CCA
FC91AF59C6C7537DD601795DA6B7294EB2845A3C9CCEF3C3E4649757095C098E
57B34FA4A33A263D56E6DE9396D9DD6FC3E83CD3BD6EA09FB272C2677DE4C334
94CC3A0E1F771B7CEAC18337A2DFD34B17BC19261DF137F8DDD9E82B73109819
EC5465C1112D3413AA14B3D56DB15A3FDB5DFE08EF01A8F326E286A4602042EB
D71913195D3AC7BDB4AD8F9968755D1FDDF66427B14675A0507CDC0799628091
20AC3CFE11418709E7AE98D8E9CFB556CDCBC5AAEF2BF4BA600004D6A0ED656F
A13731FE2460D9A9EF6F81310BFE1F3BDDC3B6E09386589203AA53DD7143F0D5
6E85972E880961792A8E81159CAA70F135C8BF9501AC3FEE415510B8AC7D21D6
6ACA080D2C059A091121384F3832668007EA0BC2DBB1A8C8442312DA26908C88
6E8B96A38470DC55DBD34DAA98145DB01F96BB531AD739C1706F57103892F637
F9E0E89CB8093F6ADAC041E10BBD03FC6AF8D198D0F5EC1404745D9E7226BC48
8D2A7ED0E1E590A22D9EEC223E8F8C56A606D98775AF4EC4E71A792D18A4691E
54B69C9F89AE595670C96436A780A3EB4751CB4620880F08BD2FF7FE601D9CB6
623076AE057772032EC5C428C427386F885F3483CFC4C3D9B3CFA04082FB9B42
2885A4F1531910D0D8AB3DEE9B5AA6C0A3ADC2F9BC461DDC74B9B1608DA3DB98
78816DC9AB25FF358EDA935F9DD2E3F2DEBE989CBFD7CFAC3B6D530C5F230B67
7A2681632A5DA6C620C5488C6C7FD1146E86EB895B236FD131D9CAF8495460B0
0405B69EFCB7FB6C3A4A7ADDC28C9FE6DE25D1747C79359FB21D7406BDEC649E
2BC3D0B075CBFCACA4A8ADBB8BEB62186A43B7A4F6D3FD6FF0FBBBF9598C4BE0
B82CDF6232ED4334E6CB15690ACCC050E3F00AB19D06B1308EB4A84A927DF296
E599BB58098FDBD94DDFDC68FDA361334E3FB2C29FF5C15CF7DAF530AE4E8871
C6AF14FF8F934D93C329E32981EF201DC9DC52477D50AA9B37D93D0ED1B9E5DF
ACA75695AA7B42283268A8D3EED707A0ECE742681DE97F7218AF78A478D33D59
C4A433B4482832809D3CBCA37E9AA41DDEDBCDC3D1BEBE6B53F1EE7C3F8FC404
30542D709D9B3D3344583D3812A612E3D339EBAB8B5B9215BEFC4E4F792A7E20
A5AA7C06A7D354E2C773B3DD6FA252CD50CEEE8C0EB0276838A49E8BD42D26FF
FD4D86EC52E82D428D41280F79B69ACDB4DE8ADFE8BB29A397FFF5A6E01BB3D4
170A624ECC7E9C002AD6A7A1DCC8F068DDB52C38A1870012404EDDA7D682A3E5
895B6D05950B225A69E5545AF6EC2BA57EE2A7E17A8FC86C295C0506B0C169CA
5210C2EE61AB9A5C5EC6124CBE1E9A67E5908B64BB5C8FF129248DA388D6D50A
6378920A23B813CA879DD2925C89479CEE3D3FAC22C35BDC62432CA7B3D695F7
64983FF000950AE5FBCBC326B0154AC32696DF68BA194A1FE0A8886C7BA2C6EE
917D206C38B35ED0C56C319530E9BBF5612C70A05F874DE380A59E5ABB706850
8DB826625ACCB37A08F1699C20DB82DA857E015DFFAF71F51F5CA92649ED5D83
6F8E057CC93224B0701CB72D20265F1A6321A1FA549A2D8F8E83E2DB564D44D8
6C1035EB19F14F49E873CEC7793481C062F70BF3B0B73CDA4ED77C5D52EC206E
D48B0116F1D06EC6091EE408DD09B52CF68CA77535796F0F6EE5B092AEBC200E
446299BBD2AE2714FA20572E0F3294D1EC858C153A03AE77A4CA05D9086895DD
7A3DD053833E15D7246827B97962F51A5E495101C53AD2196E36879E9582165D
1B777270C920396585D6005338461F5A5B17EC2508A3982F1F4DFC9A0272B77D
DA1E5EB2AD58E1B2C489A51BED1AD12B71C616B7C31671DBD2E7036FA9F6D0DB
171835098124A3FB59AD98253710380CE9827722A0FAD78CA8248B9CACF5BA6C
A22EB41B509461227C354108364E5D8105B9DCBB353DE758B33C21881DFDEF5C
F1D3039E9E7FD679C60D15AA387344A9E226662A407628B69A1D3DD86BE8B62A
176B378ADBFD6ED9D3941F5B9039B4D76844A04D0574B6C29BE4712436DBF0A0
F5B88CE45C7166686FB26F08AA5418530D4501C73BADF8FC0136D8F915EC2D33
7E8F280AA674D5A15E224C2E1FF1E10E4A349E80EB64C7FB749A5139D9D611B3
9D132706B30F5F5F9251D28AF08544965102F47AC88E505393394C7E75211E92
52CA86E276294E831B47797797BED39048E137A6B88C62E4C06A58EDB60E2466
437DDC51443B48F42D5B724BFA82C7DF0B97EB6EC4AE5F5E21D6D4C4BEF18CDB
1D26C72EB49C678CFC302E62C23A6A7892B9CE76B183CF3F4FCF5EAD3AE7E425
C5ABA24B2E469404E071681DB35C9CB8E452E0C0979F99803A8D306C9FBBF6A8
663F9D4EE43F69A32AFB20FBDA10709CD46769736E4629C8F720257F91D8390A
7F2F6B0A820DC7AF0A9F0B96DA8981928AA99B057CEFF5EBE01370DF67A4611D
2532B2927B41AA39D5A9BDB1B5A575CB988FBB137E57B939D30B667626EBAF35
EB6972244B59011D973AF2F6B8D5FD2D46354F1865648F8B561E53C741219B67
6C8FA69474ACCDF4CEC7840405E3E038363EE4A2F083CABDCAFD38D4C5608A6F
9EA5BE68CC840BA1BA29DFC101498F3BB1AB7F830751A58D062312339D7CB85C
33657EAFC7EBF9CFDF6CD8823ABFE839C4D83A0FA80E78DB359D3BA2C4012411
E190051E88E2363B3306540C83D64FE94ED79CBC2D83E788ACD8C84BB91EC945
E56EB5F95308F11F362ADA5315887FA5B06CF4FD830C2293B69CC6BD479018D7
5185AD1CDB58CDB804906CA0857046327DD9EDCB95F611075F59299CD58AC877
A0CFD1AF2EBF2CB66D099044749C1BC6740739E833BB85727598D8847BA7DA88
933F8F4E24C69A6186055E2B154FCB69B0EE1C983AD7374CA1BC3475690D0196
10D0EDD8F185DBFD8164008681367342E19EB2DEA83DFAA3EB9B45BC401D89BB
5C82EE8AA81CA2457C5E8F0740602C1CE1A8DD4C020C4E80ADE467426896EE7B
971D86ACA4313E4D7E20F0DC349A3359DE8DF584D55655AFE8398A207064598A
C14B204F5617C06D44D92C82B417537FE9803D92835A340C7BA21F02D93E3634
64B1E5FA74DAC76C0A0286B7658CE26E8DEF6C65F2865ADF2F3A7A8B72C65629
9393A7476C5FD3BF87BD7746F142CF145D7FD93E31DA6BB9E8EF8F7D54EE0425
D1229FC6F040B03D86258D4CC8B224B5FE2F9E028BD831418879941D73935297
8853BAE02E09F9316B98756485C2B11ADE9433D2AAE9F77D60FB8994976D2032
8A13D82A2DE73B5E8D184FABBACA14257F3D48B9198596E7C2DA0831A86DCE33
6F905CA2DDBEBCDA71B3DF8894CC83CDBEE0ED0C80BDDED7B656AFE5C03F7C53
02560EAC47728E9CC74C9A4472C4338A66D2DB0DCAC9F605FAEE357DABD7C4E4
C1AB9330363DC4682975344E383042964217D1796AF9DAC9DBD4FCBEC800486E
BBB12127DB83AA67A9CD856CEC99811094A90DF3E212FFC41D245D884224BD04
052936004A5C94D19DB16F2EB44B45F0482BEB4C051C63F186FA5131BFD20BAD
2C727C8FBD7700B1685C94FDDE3DB80A70839DF83453E63789F71977C40F8CCC
5CEA037138939AA565AC12ADDA23518A3FEAE49D58B5A123549E3E0E0B45DB57
FFD7EE439760EC1A7E0E4CB6C798C9FDC9D2858F75F2CAE30A8FBD022ED6CB74
9826422247D4E98049FABD2810F4DBE35AB0B4778C1DB90806C8FEE2D3D85767
E596375B42B9343953AF04819BF064802AE443E0F40CF6C23CB9C1CE4237C732
804303FAC677F4F05FBB9851FE036C11ABE3FAD45018F761121E110A15754132
D1B6C168C2C9BF26C93320200AC983EFA447AA8FB006A0F26CCF4C794C4DBA88
CD2C1F3297A9D977F3382F21FE6D8D71089FF305EE4EE5FB0E3577E2EB71ECD6
944AE7CB0F5F89793BAE5BF15164902900855780F26B97C67E08258E7BC654AB
1228E3893999F26539C0EAE3A5B7BA8CF98335A1FEFFCCF7318455284CF8DB59
F4FC641E9DC2F4EFC125744007FEDE71E626F3F21E0CBA18A94313A70A601543
6C732ED05E862AA6D63D66DA6778904E638F6177D742A6F158AC43D7943BC3A4
41128272F412DF8A1BADBCE1CA327C0AF0CE1322F86F7D2FFF446539E452B4FA
9F2ED12DAC515BC287F025953EC7E51E7C7B7D6400EA05F98EC15FB7CD3437D3
4B424CDD29704968D87B1FB64D98BD9AF2963A1F35A7918F2B4AF120CFE49080
9AE46A60E0714E3C0DFF8A139CB0E273A540F47F655231D3B956799F2C2DF77C
C7AAF7DDD784BAFB5673ED99B5A52D2DBF483AEA6C8BB23345B31634DA10B170
4B019079468C4BDC98C4C3533B8328A6840B15D76FDAC4D1744293E1647015AE
14AB02276D85A3D42355F55A597D5EDCB7A2E063C94C89618E05A47076EF9CD5
846A1A7AC9FC90BBF48C35A779960F94E127F622CA407A17DD5B625F9BE71BC7
24831326F962C28F1A9A861FC3650C951EF3BDC23C639E3C04016CAEC1C6693D
4147B9DE9FDD973E2193C5BAFAD6A0F80AEBF018C823607BEB48
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBX10
%!PS-AdobeFont-1.1: CMBX10 1.00B
%%CreationDate: 1992 Feb 19 19:54:06
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBX10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMBX10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 11 /ff put
dup 35 /numbersign put
dup 46 /period put
dup 49 /one put
dup 50 /two put
dup 51 /three put
dup 58 /colon put
dup 65 /A put
dup 67 /C put
dup 68 /D put
dup 72 /H put
dup 76 /L put
dup 80 /P put
dup 83 /S put
dup 84 /T put
dup 85 /U put
dup 87 /W put
dup 97 /a put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 102 /f put
dup 103 /g put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 120 /x put
readonly def
/FontBBox{-301 -250 1164 946}readonly def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8B731A88D7740B0DDAED1B3F82
7DB9DFB4372D3935C286E39EE7AC9FB6A9B5CE4D2FAE1BC0E55AE02BFC464378
77B9F65C23E3BAB41EFAE344DDC9AB1B3CCBC0618290D83DC756F9D5BEFECB18
2DB0E39997F264D408BD076F65A50E7E94C9C88D849AB2E92005CFA316ACCD91
FF524AAD7262B10351C50EBAD08FB4CD55D2E369F6E836C82C591606E1E5C73F
DE3FA3CAD272C67C6CBF43B66FE4B8677DAFEEA19288428D07FEB1F4001BAA68
7AAD6DDBE432714E799CFA49D8A1A128F32E8B280524BC8041F1E64ECE4053C4
9F0AEC699A75B827002E9F95826DB3F643338F858011008E338A899020962176
CF66A62E3AEF046D91C88C87DEB03CE6CCDF4FB651990F0E86D17409F121773D
6877DF0085DFB269A3C07AA6660419BD0F0EF3C53DA2318BA1860AB34E28BAC6
E82DDB1C43E5203AC9DF9277098F2E42C0F7BD03C6D90B629DE97730245B8E8E
8903B9225098079C55A37E4E59AE2A9E36B6349FA2C09BB1F5F4433E4EEFC75E
3F9830EB085E7E6FBE2666AC5A398C2DF228062ACF9FCA5656390A15837C4A99
EC3740D873CFEF2E248B44CA134693A782594DD0692B4DBF1F16C4CDECA692C4
0E44FDBEF704101118BC53575BF22731E7F7717934AD715AC33B5D3679B784C9
4046E6CD3C0AD80ED1F65626B14E33CFDA6EB2825DC444FA6209615BC08173FF
1805BDFCCA4B11F50D6BD483FD8639F9E8D0245B463D65A0F12C26C8A8EE2910
757696C3F13144D8EA5649816AAD61A949C3A723ABB585990593F20A35CD6B7E
0FA0AD8551CEE41F61924DC36A464A10A1B14C33FAFB04862E30C66C1BC55665
6D07D93B8C0D596E109EE2B1AAB479F7FAA35279ADB468A624BE26D527BFF5ED
E067598E1B8B781EB59569E3D0D54D8EFAE0F3EDE26279776ABA15341E42E636
6E02817082BE6FE0B04249A4840C11F95F8ADEFF72173E9A5F2AB2F62C427E5B
DC010E18641EAC906A5EF0F9BC2108062134A7F10956219C5847C0D82F0E8663
12D963E012DF0DD899911EC5D8096F80B49CA3444CF1294FBFAB57DFACC9D01C
46F3BA2F3D1C14EC30CBF83E5729F1C074D4F1665405C9AAFADB8BE41EEE43AA
16966E2C0CCC853C4C09F245ABFD4603C4AA55EADC0A59AA6E9F5895FAF3D3FA
83EDC6E2540417530AE0677BDACF7600C3D48CF22FFA08EE54E20F8C1BEC6795
729C8D6F0483F604EE345E522AFD19F8C75DFF6660A4443CF494BC17A9C644FC
C9C738204778CC4F7CC1656BE602CAAF7D89959658835F6DD1A7B8E69FC30618
363E875234D5138D9726E4C107DB8AFA13A035F6BDE5658657BD0E7974FD3185
D22CF2EC2939D3712A88590E36B304030ADA0D2ACD2B57ABD9E3E2CDC35CDCF5
E1051B086485C19DD2726CDF0825B1C50C95ABE06EABA218F187BF982E9EBC37
847A2850B82485F61EF31347E7BA6F5053CDC3016406B2BE245EE8886803AB75
0E41C2988385BC48CB34FFB54FD279A234FA36316AE1CB0F2199F55A7B793646
2768A9F686822C29BBC4E63717407C9BA25793EB4C152AB188B5788EA3C997E4
9397386B7304DC92539DC587C64ED6809376C833E4F520FC63A7179906C9B479
F6EAAD2163DDD6C70A05A0A8F49A519DDEC39BB0444B6342393B4E55012EF2E8
2974D0BD030646DD390AEFF89232B341FA9474361B45B6D75817F70C65F1CCF6
F6A72235B0B00CC4B10969BAC63044A9C3F849C0BE19FDF1DAD514FBD0336099
3202B5055BFDC67815269C18C2D871DA4379150937F05659BCB61EAD736B20FC
6C071F5F70D9FCE819EDECF6FF6FFE165EFD7043BB632AA3C1BE63B7EEC7A01D
A9C60ED3C0A206F292352F173AC12499249FD21BBF8D69127C2A1E49DB5D5882
DE19113BC65040648818172CC1FD94BA99DD39628557A83A95A50DCFFD4DCAD2
3FD8796EC2A8D2453D65A8C955256FD24A2E42B70767F6E43E8E5DABD16A7C36
B080BB5857657DD9347F2EFF5F3FD51C79789B7EF71C27BA6187C7631A9AE97B
0AA78B6282C3FF51F6A4AD35CC275BE63C44044FDCA13F2A40E9CEDF6E8BFE21
B9216E742682B60D1868C1C2482A6402A5A355D7F8D815FD129322AAF2F2FFBC
757AB3FC082B534671E7C4569AAC2501116CFC2AFD82B5B6062984CA5731AC40
34A3B9A917AE7B2A60AE823BA183EBC05596822C0D848C284F0A46D717424A6D
E377FAD9F125B2599B59AF47915BF925793AF91B0B70AA60B043058A6556521B
D42748C482640D1F2C507DF980D3DA98C4A9FC74982628256C5D97C2F63D76E5
0B2695F1A69D04E8E912AADC542A358E21FC16E5ADE060347C27972D4884B2FE
C362D2D4D5C00F9BF089AFDD491AE5E2A1269BFE6CA76ABB59D38432B84D8D62
63499F029D4E20DA3FA97E13838FF422865BD3F8BD66EBC72FDD9E61E3EFAA7A
FF7E925AE6E8F999CE5B5160BD263BCB148AEDA3DA017B41B3C7991E2E545089
CCF962F48AB792423BF0A5AC724D560E107AEF07A77850748BC4B07B0EB7AA30
E08C927CD7F8241A3AFB3D9B677D12161F7BA0BAF15A610C44812935585DFE43
94BB438251A215FABD7FED7EA66E85432FCD6CEE34185604A57F58AFC0A5F648
D8CBF25D0708BD3E44AB8E6F95BF02258B2B281D0C8D852808027F2D5CB88AB0
771744BB83266547A1D73949BDE964B5FBEC998805165E3C5EC564CC5A8CB0BE
4F21C5DD5B3D127FFC59E866735D9FDBB706C44C1608F9F05E1BDD1F2579417C
C42AE9F1A534EFE5304F0178E9B05AE4FD5F678184C2349C4AED83A62B7337A4
8E71F0E3AE7A2829DFE2E7EA16EEAB55870E2A62267DA60A1EE049E647D698A6
174890B098D263AB7AEFC0FF9C60968456F7CE090543838685EB724D45AAE5FA
5EF8F918EA2920243B149F8923D0F82F2527DAB089CC83FAA91BCCB7BCBD0280
EB18AC9BA015E4942F4B845D0AC5C7D0FB7F508F105540FA8D86B7C43909948E
B8A5B9BD81FAFDA49ABE469AC3A08DD5A106FE63772687C950BDD5D894832631
ADE145ACCDAC2D235A82B7749CFD8FBC806676D95465E5F547FE19D93995B140
7FE01CD451A37302AEA7EC6FA5E018DC8998AC61FE5296705C44BE20EEB2513C
1BC197C0574537094EB3A4CE5991DF5B60DCF82498F93ADC57AB709605BE477A
58509E64FDFDAB5D69EBF3A6F8B98A47D0C7E5E49CE6EFFD7EF2B05C990DE81E
D286A486B2749D1FD042FC655B0132650468CD6A7A2B4FA9AFDCFDF1ECFC084D
8F0EB7F4D6EF9067BF925C4EB90A00FA1B178262B42B4E9BB53A5255E3128C96
30EC0F804B41AE84D34A8721D677E1AC989896769C8F59F9059814C1530DB6A5
5E57293731ECD33C43BE2C03380EAB4F590FEC9D12C1309A86044338F40E4A26
EC7F5944B487614F3565705260BBF117F8F5D479CC0982FC8862272C91899225
A6C937A9FA9F038675F1455D58482CE78E78399DAA7C3C8A249AAEDE1308E3C4
A73B422EABD2A6A3A994EB3C10367507CA53DE83F2DC99B704292CE3C9B53683
102FC6210B704A72CFC81B6AA14AD9D8CFA22A1F80F02D7571D2FCF87852CB92
157177FEE8BC3F6F83A06B7F2E878F12C406BE57407C77B5EC2BD904F3D97EBF
D457BD4A4B245B7F547344F3924329AFC8CF5144258999847B66C05EEAA2278B
3A5B7579D6B4E917894DE4D5F374D0E29A1406D41A6D44A4F4A4AA9B5175C9A5
4AD1D2B162AD30817228CB4D0FDC5A1BAFE8E43459FB309E2B35E484929DFEC9
4F09E07846A13559B4CE80ED3BE716DAC6DDE5F680B928E40F576F5A13C62DD0
AAC3359D2C1B47890A336F38A8512F2EDD27332E72F4E4EB227FFEAA40923D49
960631AF05373B28E3A0E0DF516BCF36C6D0105E9E6CCB4A9818D696563BDAEA
414A54286355C4A709F50AFE23FDB47B1C057D08EE8C5EC940AF18B7A7865111
AC9A89330548455D0989E2EE15CEDFAF334970AC6C3DEFC378ECE64B85358A46
97ABD80803D4CE54111C9D6AC719198E57F30A6CF48C1A0729315787B255CB5B
F7E83DD134077B9B7DCF23723B8823B26F59B08A2AF96CA93D97183A5FA883A2
908C72CE32BE1FE071E3F4D1CFEABAA3B1C410B5A33368CC2D5B33A8DB6739CB
DB8F432F92EB5B1D44B4E07E1D7794CCFAD3591ABF74D11ABC745214CACD92AF
521D07FBC58F47A4952003F484535ECC2E3EB8A96E29F391192CDDF45E7A57B8
AEAF943FBDC3F30913CF34D1988721AEAD09972ABF5868FEAA2273A3C03497FC
801BC1157FE68CA3556012ECE36F2DB8068BFD1AA231D122F24446CC4D9CA216
F481307F3C1A13E1F51C5C933504B98DF241DA2611B0FB31684B004D1F8F2EED
32E347A508543760F5B46330F484A40BFDF912A25867736B24AF4AA958EA3473
6BB3F572C0952BA29C5144B365A142AAADF14074344C37ECFEE2A839DB634FE2
5094AFE7363902CDC4621194F507611DBE6ED4F9D20323EF95CF0E99FD6CDC92
A7746B895910AD4C5C0ADB4ED8C890D15EA18D616A9342FFF2336919295EF14D
9E8F6DABFFC18CF6C92E85920FC30099EDA0E2ED0C879FBE7252D1F4E00F4756
6B289DE95BA4C78E9D51382D65E9049BF285C448103C6FA42D29B4B68061CA40
27B17A08AB85AD3089291FB8517EBA39BC38AC8F87A70784A2D66A1BC7D5F414
2C5033380CCB0266BDB7F8A84B1AD30CBACA1825304CCED3F4C4F8A4E67FC57C
F1FD92689372B77E077B321DA2C43CF41D3E3625240305DE8AD3EF5E1821D3BF
92E6B32CE9087B49B3F82BF739C02E2785B1A0B927958543A161B5F3018267C9
D555DD8F687687B7547588F17D2C2447CC4E45818D19DF29F51BB8438A2B93AB
338392E43F7B5368B83273401E1254E2942BF3172E87D76603471DDF34534444
776C54287CCF520A0EE10A73330BD770F73B685B4CCCB20DD2A45E4E46B4DDD9
7FCF0F0BA673C8C877E015A935C2EBD8DD45DFE0E462472A4AAE2A7A09E18E70
C20CB5860F21318E3D858D36ED3412EAC8A01B26FD8D878F6B866DAA07CE9428
0C1BAFE49B667E3427BCAC578C3637C62AEF40F342F3E0C58FD537DFB3260845
9D63B99F343B1E675F08BCBBC6C1D7F994AA34A6165AC4A1B6796DD25EA581EE
E6E4A9F99D0E71A26B43F84D9417433D086458E7411A12784F34C3CAC3F09968
B0B0987A6F10A3C1BA18E9D23E2B0F6C836B874A02A4F745D56E0035BF1A4C6D
9F9AB2CFC5A5D95B8EC797AC354F848E9B3232FF7911BD66DE96CAE8B670A5F6
5B4713D0BD9DC8FBEF5E64987456DDAF379CEBAF6E295D8CA5ACB27073F3B0D2
73AAB22E46ED6AF8E1E9D28E018720AEF36A501EE6406CD92C781D3BCF7BDA8C
F1F71B3956D7CA405BBCA62CF4EEFBE664F01C79DD29902B034E844C319B418B
7FEEC3F446D21A5ED73A151C20B3F9BAA6164666B11932E2279FED12BE75582E
BC1ADDF47A29D84E04E69FFE28FFACD9A0B7D19DFF77484CD572B28A6CB4199F
A1E5006B9DCA948F124A7EB69039C62024834A900105C4456A024DA6D832F33C
7D5C0E4A79A1C698C741424925F428F5C14B7EC55A2E2E58290F288E6E7983BB
18AD18631C5654E0E506279D09C2E513FFA368F4C6D910A53E3A97FB94C90038
3970616FE8F98659678D5018946EFACB5DCF0746CB97B1FCB7A3E4F05859C301
5C1DF71081D14D9B4EBFF804ABB279D69747800A2E567529E1B1A73E74382AE4
4128E77A824A0F4D06F6902613132CAF05CE2C71BACBD8B9E6E978996DC73E85
1B36C143A8D33009E62EE3025AFC130FD569B815DBFEEAF8FE538C1D2C4F918C
0B6A1C859164E645DE9F97FC455750514E83458A717673F80785E07BF0540DC3
DFA0BCB24A52E058DEA69CB6E88C74ED921558588B2C2B5600BF2C6F5E4A4BA9
B5CD3CCF2084C8D149931BE0FECC758A6DE08BF1FAB37A95C086FC6245C2941F
2EFD9531744C8083442E7EB08BF42FF8425633C54A64A87929A7E492276C6D30
8D6AC5F9144E66E1F7F544B6A68DACC06246EA3D8144F783D06FFF7D14FC05EE
0D05B11308A0D13964450FF93D8BFCF26FA9167F992C01BC499C3BBB0C49FE52
42A81884AEB23CAD9B00DB8AB5F9D6ECD85629DA59C4AD0388334589055025A2
61D9B736C3E17FA5E8DE0F5C0DA9C899F546AB7D5C4A16F67373E6C3FAECE2BC
8C81C0D983223330AC9CB1F5508C7D285F75408689BC04F50B938C6D82A924D2
A4D502B955EDEE4854446E4E1EC618EFE59DD90F92FC9CFD4BD375CCCA5280CD
B0D1045DD0FE40DDE75EE73E28BD94A21544A122635153DF35EE0676FB88A289
3A1EC72079940060EC9FC6F157249A69BF309E0DEFAC1A04D90EA7137727F43C
8396B059190EEBC8247806EFB8D6E228143C415298801BE0B80D761E5666A944
8305A862D3979894470947AFC13E9B3584ACDCE09B6C19065A53BABD42FAF52A
393FBD2BD3C65B4DDF783005746B3B4B88DD3EE4E5F6B763CA1033BBDED565D5
600574153A291BA12AABDF1B4DA381892FAA13A83CD6728D73A026B972876D9F
9D15CC8343823AE08E948831E521CAFCB1C50170E42EC14D8BDAEF08F68B68A2
B4F999576730DD5EB505509DA1D1B16D14AEDA3A289BC637521B1FF4EED659B0
151082CE95B84FCCAE7FB3C6B5DB87926AD8FFC86B2CBAA93778D74894B81ED7
7205B5B7323DBE658A3F0310C6756E599BCCEFAD6D55087219CED726B8970342
745D73462538457F61688C2D12488988F7D9D04FD501C34FD24EC3F9CBC81D33
29037B99DE1D46EE16EB04E24B40583AF599A06782B3BC9B1358A8F3A24839EA
13751A698B545CA1341D308D42A886FA775650E72022F23B4F514948DD591741
8D7CB36983D79F15267FDC0BEF0E7A0CB8DEFA8A0EFBBB119C3BB00F555C8EF5
D041B0103FEFE35FAD75B486CF2C5F8A431260484BDFAFC3F975E991CA5C5384
848B5E64BFE4E51C1EDA039170C67D1FA5059467E8842036FBE26AAFFC3F117B
27E074CCF67B15CEEC281CAC3D516FAD3A6163987D63AE9F3864FEC55205C128
9A7198326D283B2D14EAD1D976E749C617E0C2501DB09C686187A86E596B6E65
2D5719DF459E4BEF9F7AFE85F2B5392894080BDA0716FAC7206948CC225DA375
AD18085D8774D4EADA70BF7957244AC935A6FEDE9475635C3B20C55E9139420D
29076F5F427AEFC4AAE6FB87621FA3A16197351DFAE43B2B87919B5327742645
99EAB6797D2DB2BCF2E960C4B3C921589A8F1DC88E6252800A809B424F0601CD
B8A5A2EE9662CD21EACEB38F588104EA84106A49C03AC1F3486D50E4131C4A63
8605DDC853B7D65B151B97477C5611C804E572F4291FE34B1E453367253E387D
58AB1834E8F69F505CF51050F3EAD18A3F8108BD008A8374C8B9AE3659609DEB
360A34B43F79F4BBA11BF810BF62922A10854C6E716CAF46144B5DB6018D75B5
DB488E2B381DB1B5C2554D859264C6A7BA85AB7A6C6449B2D1C02D2FAA7CF277
92BFD18D27C8FCC0469ED581AB83FD9FBDC861B8BFA4E856B9F371CA8B483664
72C55262010706759E17B77B75B5BE861F549C5DE15903CE41109152BF8A7031
250BF40D3E824948EC116E4955D0AD785AFFB4E14579451631464EEB417B0252
4A14AB7D488C59F61B46EB2CF10AF4A4AAFEF5253F5C601BF67BABDB3113B90F
0DE23CC73DD59DCA4AACDCCBA3ADE5CCCB8C124AE5CB26B80D4B49F2A55D3312
01C7A258575DF4DE7EEE66C45FC39BFE953DE444AF63B1FF4D057EDF7FAF14EB
EB88AF5BB396196DB2CA78491FB43EFBB6303018A36DCE1776F9DB35219B8510
00B1259209CC20F41672FFB92516A3F1FA8A94D8265C88A34267149741CB9A04
EBC941C6D9AE2ADB4BCBE8AAB7D2491941E89DE5AE0110CC9A0E1091E95F0EAD
B117FE0B9BF58BE38F8D276EFD94F1E858E6BCE344C2C5EA76973AF9E347E066
8BB7187D38A1D8E6D3A71125532604BED5D6388BB9744F0609612C2E671A3605
BAAA752311298B975BA7FF29BBA4C2D0C643982F931AFE0DFDAFBDD407B8AB33
B03D9D2D62FA80A35D2BC6ADC135AEB17017F2A32AF80D09D66A286CB62B0B3C
B0BE899BDA8AB2BDB5A5E3CCBB8FB92ACCC64BC099FB68B884ECFF312E270A3C
B1E7A4DEA3F930362C543882BE0727BD754EA96A3F427DE904DD906FB7EA2C51
3D7E7BED8AE48EE37CED4612A4BB0F1EAC9B38BF1314B57FF90B3BD6C7DC1CEC
7554A8539B2FA468F506469BB198B61629ABC316A55D13E78E34FE0DC474D90D
07D836A1130972D61590A52732F7A684C21C645DE2DB724DA1506ED6536A9155
53E60B1394631B314B67246A3029318A0FCDB0F8306FA8B0B4F6148B1CB9E86D
E0E9ADCDA0D7B81D90530CE38790E65228F56A15D2DF3C1B40B5C20699F0D64A
BD671F42F51D4F72A59C8B2E7CDC5883CCAB0F8E36761666FCBB328EC5856E24
8414A2A88FC2C18D6D4B2ADBD424F83FAFDBD7F245F2C295739DD4BEE3237947
DE07B462065DF012764888CDB76C39ACB80FB1734CF779B0BA1F3CD875121A1F
68A9CC72ED6AE2EBC2D219716FE129AA286B4A37C8916C7B2970A35683127524
4402523292967F9F71DAD35D10D1BD46AC29DD520AEE24039FBF5E1CD956849F
891623F33558C6CCD374EF3F73CA8B74C47C9CFD7F67F14751D9885C46479B94
2EB039D44DB8A18077B89966BE8F3E44DD95048D8C5CAC7C14A28B72C9B1CF82
63F6B99A5790B56C7514B2C0D549701B3BBA207E73D6D46C122E3BB51B310137
373A18A0404F8ED7C5531519175940006A7434CA23A68DD9331F487D30A08093
DAAB5981D02DF60D996A8C196C49DD2F80668923B3C2D1E542C8958312D9B5BA
4ED3ECFE416E1F5E02D2DB9AC2B0DEC896B6D6A085C273A5DE69815EEEC0E00D
BB4C43086AD61E6BB4450963B412425394768289281BB66E2E0FBDA61328AE70
E632D551C0C6642A4BF01ECDCF6F469B7F061692B8E382F5FEF1B1D717CE6D6B
82FD750225184FE504930513C7969FFACEB67845EF1B67301E131ADBCCBE8879
895E8B1C570D15305B11A00F61536023ED3A3574279F6E8058BC323D3463CA77
215B98F93B0C2EE48178069952119F51D337C8E0DC5226E94235A6809CCE0528
24CE8D2A2F966D5A680213CEEF5670DCF783E07351496854E4C2215C547B9DF7
F68F8E4EF3344F017680EB4BD05757119AC2FBD419A1D46410E06AA0600AC139
DA214CCE0957263FC6B1AAA779DC32DDB9BF657E3E32CC1E4C084A107B02F752
ECEB22A2002FFD585950EECFF5519DD0556C569536EABDF1C9AA734655AB1628
8E51033BECC61B569FE694190B5F2F62FC7FD33F717A610F294264C93EF35F54
814C09892B5C4B0FE1FDD0AE335A5297729E3A7A48D9E2430E4D99747D1CD089
F34572240E64A58201D9F47B7D9075550CCAF9D14E86E72ED88FB419B6F7071C
B9DA767CFC6C80CE9CC80B931EFD653AFC082C58FDC81D3981FF36AF73CA72B9
4980CB7D8E279147678366912E62F6475D18518CC88B7C89A407466E5A723700
EA5F49FFE670A066966B1E537E0BB7C8B624F3B1C4B201E8D9F858BCC828D128
498F9E96E02D4F118E8A9FBC226BB92EEFC93AF649AE4A982A3932D26E9672BB
13BB346ABC14C1D2AF7FE53E5AE1872FDBA3AB6907DBE6943296D058F566435E
EFFDBD20168118F3C34547E66A2AE38E9BB6A3AB238B545EC683AB105EE668A3
18C55C4E0EB907CD132E6D820ACE238BE7C176465256B1F3786AADE4AE33CEF9
001D47F6E989A86EE27E5F5B83B87C915815B4446C4A6FE3154F3EC90138487E
DFDC6409326BDF09F4D8D09997C199640E8E9897D1B2D5E4B622B73DF600C464
C19BEADF6E01F2E5112D39BA249B54BD321D64BC2ADC478B4E68D160AD7A693B
0C4FBF5378DF40FCB414DC2E9F92C2569D24178EDD303A10F2E4F85448F99353
C466409F68E65EEEB225E3245CA00CC1E244266C424E6F781E600F683C3D2293
CEE18A4915A9C1B0391AAA6AC6A6E7EC03601125DE6725D63225E20F8C3A32FD
99258F0800AC95767AD242FFDF5C559BC3179C61A4B2E083260CF67B516933BF
4A57381849E7BF82579CB813D14559FAC35E5DD12DE88C29E5970D2ED1592580
A223C927F3832EB3A82B3E4F28CEB07C3A3B4290599EF1F90527BF792CCDD7E4
25A2F17220066517AEBE84042555D211C09293E332631CF2ABF203E961DF5499
79992C8026034FF15E6E03CDB23357FFB3F1D00406453CF70F69F0615827507F
E2646C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 40258431 52099146 1000 600 600
(CS444_Writing1_AlexHoffer.dvi) @start /Fa 136[55 2[28
34 35 2[42 47 1[21 2[25 3[38 42 2[42 9[83 87[{}12 83.022
/CMTI10 rf /Fb 136[81 3[44 46 2[56 62 4[31 3[51 62 12[116
3[62 12[70 1[86 1[80 14[56 56 56 2[31 46[{}17 99.6264
/CMBX12 rf /Fc 138[75 52 53 55 2[67 75 1[37 2[37 75 67
41 61 75 60 1[65 11[103 94 75 100 1[92 12[97 15[67 67
67 49[{}24 119.552 /CMBX12 rf /Fd 135[44 60 44 46 32
33 33 1[46 42 46 69 23 44 1[23 46 42 25 37 46 37 1[42
3[23 1[23 3[85 3[46 61 1[57 2[76 52 2[30 2[54 57 63 60
59 62 9[42 2[42 42 42 42 42 1[23 1[23 32[48 11[{}45 83.022
/CMR10 rf /Fe 135[50 2[53 37 38 39 1[53 48 53 80 27 2[27
53 48 29 44 53 42 1[46 9[99 1[73 66 53 2[65 3[57 3[75
3[73 69 1[72 6[27 6[48 48 48 2[27 10[80 23[56 11[{}35
83.022 /CMBX10 rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: Letter
letter
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 0 a
SDict begin [ /Producer (dvips + Distiller) /Title (CS 444 Writeup 1) /Subject (CS 444 Writeup 1) /Creator (LaTeX with hyperref package) /Author (Alex Hoffer) /Keywords (CS444 ``Operating Systems'') /DOCINFO pdfmark end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray Black 0 TeXcolorgray 150 0 a
SDict begin [ /Count -2 /Dest (section.1) cvn /Title (Processes) /OUT pdfmark end
 150 0 a
150 0 a
SDict begin [ /Count -2 /Dest (subsection.1.1) cvn /Title (Windows) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.1.1.1) cvn /Title (Similarities to Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.1.1.2) cvn /Title (Differences from Linux) /OUT pdfmark end
 150 0 a 150 0
a
SDict begin [ /Count -2 /Dest (subsection.1.2) cvn /Title (FreeBSD) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.1.2.1) cvn /Title (Similarities to Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.1.2.2) cvn /Title (Differences from Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.2) cvn /Title (Threads) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -2 /Dest (subsection.2.1) cvn /Title (Windows) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.2.1.1) cvn /Title (Similarities to Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.2.1.2) cvn /Title (Differences from Linux) /OUT pdfmark end
 150 0 a 150
0 a
SDict begin [ /Count -2 /Dest (subsection.2.2) cvn /Title (FreeBSD) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.2.2.1) cvn /Title (Similarities to Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.2.2.2) cvn /Title (Differences from Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -2 /Dest (section.3) cvn /Title (CPU Scheduling) /OUT pdfmark end
 150
0 a 150 0 a
SDict begin [ /Count -2 /Dest (subsection.3.1) cvn /Title (Windows) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.3.1.1) cvn /Title (Similarities to Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.3.1.2) cvn /Title (Differences from Linux) /OUT pdfmark end
 150 0 a 150
0 a
SDict begin [ /Count -2 /Dest (subsection.3.2) cvn /Title (FreeBSD) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.3.2.1) cvn /Title (Similarities to Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Count -0 /Dest (subsubsection.3.2.2) cvn /Title (Differences from Linux) /OUT pdfmark end
 150 0 a 150 0 a
SDict begin [ /Page 1 /View [ /Fit ] /PageMode /UseNone /DOCVIEW pdfmark end
 150
0 a 150 0 a
SDict begin [ {Catalog} << >> /PUT pdfmark end
 150 0 a 150 0 a
SDict begin H.S end
 150 0 a 150 0 a
SDict begin 12 H.A end
 150 0 a 150
0 a
SDict begin [ /View [/XYZ H.V] /Dest (Doc-Start) cvn H.B /DEST pdfmark end
 150 0 a 150 0 a
SDict begin [ {Catalog} << /PageLabels << /Nums [0 << /S /D >> 1 << /S /D >> ] >> >> /PUT pdfmark end
 150 0 a 0 TeXcolorgray 0 TeXcolorgray
1346 1009 a Fe(W)-8 b(riting)31 b(T)-8 b(opic)32 b(#1:)42
b(Pro)s(cesses)1707 1227 y(Alex)32 b(Ho\013er)1821 1516
y Fd(CS)c(444)1760 1615 y(April)f(2017)1735 1715 y(Spring)h(2017)p
0 TeXcolorgray 0 TeXcolorgray eop end
%%Page: 1 2
TeXDict begin 1 1 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.1) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fc(Con)l(ten)l(ts)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.1) cvn H.B /DEST pdfmark end
 150 165
a 0 TeXcolorgray 150 266 a
SDict begin H.S end
 150 266 a Fe(1)77 b(Pro)s(cesses)674
266 y
SDict begin 12 H.L end
 674 266 a 674 266 a
SDict begin [ /Subtype /Link /Dest (section.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 674 266 a 0 TeXcolorgray 3028
w Fe(2)p 0 TeXcolorgray 275 365 a
SDict begin H.S end
 275 365 a Fd(1.1)83
b(Windo)n(ws)798 365 y
SDict begin 12 H.L end
 798 365 a 798 365 a
SDict begin [ /Subtype /Link /Dest (subsection.1.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 798 365 a
0 TeXcolorgray 83 w Fd(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 465 a
SDict begin H.S end
 465 465 a Fd(1.1.1)94 b(Similarities)27 b(to)h(Lin)n(ux)1476
465 y
SDict begin 12 H.L end
 1476 465 a 1476 465 a
SDict begin [ /Subtype /Link /Dest (subsubsection.1.1.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1476 465 a 0 TeXcolorgray
51 w Fd(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 565 a
SDict begin H.S end
 465 565 a Fd(1.1.2)94 b(Di\013erences)28 b(from)f(Lin)n(ux)
1558 565 y
SDict begin 12 H.L end
 1558 565 a 1558 565 a
SDict begin [ /Subtype /Link /Dest (subsubsection.1.1.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1558 565 a 0 TeXcolorgray
33 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
275 664 a
SDict begin H.S end
 275 664 a Fd(1.2)83 b(F)-7 b(reeBSD)787 664
y
SDict begin 12 H.L end
 787 664 a 787 664 a
SDict begin [ /Subtype /Link /Dest (subsection.1.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 787 664 a 0 TeXcolorgray 29 w Fd(.)42
b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p
0 TeXcolorgray 0 TeXcolorgray 465 764 a
SDict begin H.S end
 465 764 a Fd(1.2.1)94
b(Similarities)27 b(to)h(Lin)n(ux)1476 764 y
SDict begin 12 H.L end
 1476 764
a 1476 764 a
SDict begin [ /Subtype /Link /Dest (subsubsection.1.2.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1476 764 a 0 TeXcolorgray 51 w Fd(.)41 b(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(2)p 0 TeXcolorgray 0 TeXcolorgray 465 863 a
SDict begin H.S end
 465
863 a Fd(1.2.2)94 b(Di\013erences)28 b(from)f(Lin)n(ux)1558
863 y
SDict begin 12 H.L end
 1558 863 a 1558 863 a
SDict begin [ /Subtype /Link /Dest (subsubsection.1.2.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1558 863 a 0 TeXcolorgray
33 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
150 1046 a
SDict begin H.S end
 150 1046 a Fe(2)77 b(Threads)614 1046 y
SDict begin 12 H.L end
 614
1046 a 614 1046 a
SDict begin [ /Subtype /Link /Dest (section.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 614 1046 a 0 TeXcolorgray 3088 w Fe(2)p
0 TeXcolorgray 275 1146 a
SDict begin H.S end
 275 1146 a Fd(2.1)83 b(Windo)n(ws)798
1146 y
SDict begin 12 H.L end
 798 1146 a 798 1146 a
SDict begin [ /Subtype /Link /Dest (subsection.2.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 798 1146 a 0 TeXcolorgray
83 w Fd(.)42 b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g
(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)
h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray
157 w(2)p 0 TeXcolorgray 0 TeXcolorgray 465 1245 a
SDict begin H.S end
 465
1245 a Fd(2.1.1)94 b(Similarities)27 b(to)h(Lin)n(ux)1476
1245 y
SDict begin 12 H.L end
 1476 1245 a 1476 1245 a
SDict begin [ /Subtype /Link /Dest (subsubsection.2.1.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1476 1245 a 0 TeXcolorgray
51 w Fd(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 1345 a
SDict begin H.S end
 465 1345 a Fd(2.1.2)94 b(Di\013erences)28
b(from)f(Lin)n(ux)1558 1345 y
SDict begin 12 H.L end
 1558 1345 a 1558 1345 a
SDict begin [ /Subtype /Link /Dest (subsubsection.2.1.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end

1558 1345 a 0 TeXcolorgray 33 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray
0 TeXcolorgray 275 1445 a
SDict begin H.S end
 275 1445 a Fd(2.2)83 b(F)-7
b(reeBSD)787 1445 y
SDict begin 12 H.L end
 787 1445 a 787 1445 a
SDict begin [ /Subtype /Link /Dest (subsection.2.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 787 1445 a
0 TeXcolorgray 29 w Fd(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 1544 a
SDict begin H.S end
 465 1544 a Fd(2.2.1)94 b(Similarities)27 b(to)h(Lin)n(ux)
1476 1544 y
SDict begin 12 H.L end
 1476 1544 a 1476 1544 a
SDict begin [ /Subtype /Link /Dest (subsubsection.2.2.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1476 1544 a 0 TeXcolorgray
51 w Fd(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 1644 a
SDict begin H.S end
 465 1644 a Fd(2.2.2)94 b(Di\013erences)28
b(from)f(Lin)n(ux)1558 1644 y
SDict begin 12 H.L end
 1558 1644 a 1558 1644 a
SDict begin [ /Subtype /Link /Dest (subsubsection.2.2.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end

1558 1644 a 0 TeXcolorgray 33 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray
0 TeXcolorgray 150 1826 a
SDict begin H.S end
 150 1826 a Fe(3)77 b(CPU)32
b(Sc)m(heduling)964 1826 y
SDict begin 12 H.L end
 964 1826 a 964 1826 a
SDict begin [ /Subtype /Link /Dest (section.3) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 964
1826 a 0 TeXcolorgray 2738 w Fe(2)p 0 TeXcolorgray 275
1926 a
SDict begin H.S end
 275 1926 a Fd(3.1)83 b(Windo)n(ws)798 1926 y
SDict begin 12 H.L end
 798
1926 a 798 1926 a
SDict begin [ /Subtype /Link /Dest (subsection.3.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 798 1926 a 0 TeXcolorgray 83 w Fd(.)42
b(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)
g(.)f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0
TeXcolorgray 0 TeXcolorgray 465 2026 a
SDict begin H.S end
 465 2026 a Fd(3.1.1)94
b(Similarities)27 b(to)h(Lin)n(ux)1476 2026 y
SDict begin 12 H.L end
 1476 2026
a 1476 2026 a
SDict begin [ /Subtype /Link /Dest (subsubsection.3.1.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1476 2026 a 0 TeXcolorgray 51 w Fd(.)41
b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h
(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 2125 a
SDict begin H.S end
 465 2125 a Fd(3.1.2)94 b(Di\013erences)28
b(from)f(Lin)n(ux)1558 2125 y
SDict begin 12 H.L end
 1558 2125 a 1558 2125 a
SDict begin [ /Subtype /Link /Dest (subsubsection.3.1.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end

1558 2125 a 0 TeXcolorgray 33 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray
0 TeXcolorgray 275 2225 a
SDict begin H.S end
 275 2225 a Fd(3.2)83 b(F)-7
b(reeBSD)787 2225 y
SDict begin 12 H.L end
 787 2225 a 787 2225 a
SDict begin [ /Subtype /Link /Dest (subsection.3.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 787 2225 a
0 TeXcolorgray 29 w Fd(.)42 b(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h
(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)
h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 2325 a
SDict begin H.S end
 465 2325 a Fd(3.2.1)94 b(Similarities)27 b(to)h(Lin)n(ux)
1476 2325 y
SDict begin 12 H.L end
 1476 2325 a 1476 2325 a
SDict begin [ /Subtype /Link /Dest (subsubsection.3.2.1) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end
 1476 2325 a 0 TeXcolorgray
51 w Fd(.)41 b(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f
(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)p
0 TeXcolorgray 157 w(2)p 0 TeXcolorgray 0 TeXcolorgray
465 2424 a
SDict begin H.S end
 465 2424 a Fd(3.2.2)94 b(Di\013erences)28
b(from)f(Lin)n(ux)1558 2424 y
SDict begin 12 H.L end
 1558 2424 a 1558 2424 a
SDict begin [ /Subtype /Link /Dest (subsubsection.3.2.2) cvn /H /I /Border [0 0 0] /Color [1 0 0] H.B /ANN pdfmark end

1558 2424 a 0 TeXcolorgray 33 w Fd(.)42 b(.)f(.)h(.)g(.)f(.)h(.)f(.)h
(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)f(.)h(.)f(.)h(.)f(.)h(.)g(.)
f(.)h(.)f(.)h(.)f(.)p 0 TeXcolorgray 157 w(2)p 0 TeXcolorgray
0 TeXcolorgray 1929 5349 a(1)p 0 TeXcolorgray eop end
%%Page: 2 3
TeXDict begin 2 2 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.2) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 150 0 a
SDict begin H.S end
 150 0 a 150 0
a
SDict begin 12 H.A end
 150 0 a 150 0 a
SDict begin [ /View [/XYZ H.V] /Dest (section.1) cvn H.B /DEST pdfmark end
 150 0 a 83 x Fc(1)135 b(Pro)t(cesses)150
265 y Fd(Lik)n(e)27 b([1])g(said)150 402 y
SDict begin H.S end
 150 402 a
150 402 a
SDict begin 12 H.A end
 150 402 a 150 402 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.1.1) cvn H.B /DEST pdfmark end
 150 402 a 95 x Fb(1.1)112
b(Windo)m(ws)150 551 y
SDict begin H.S end
 150 551 a 150 551 a
SDict begin 12 H.A end
 150 551 a
150 551 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.1.1.1) cvn H.B /DEST pdfmark end
 150 551 a 100 x Fe(1.1.1)94 b(Similarities)29
b(to)j(Lin)m(ux)150 704 y
SDict begin H.S end
 150 704 a 150 704 a
SDict begin 12 H.A end
 150 704
a 150 704 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.1.1.2) cvn H.B /DEST pdfmark end
 150 704 a 100 x Fe(1.1.2)94 b(Di\013erences)31
b(from)g(Lin)m(ux)150 857 y
SDict begin H.S end
 150 857 a 150 857 a
SDict begin 12 H.A end
 150 857
a 150 857 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.1.2) cvn H.B /DEST pdfmark end
 150 857 a 117 x Fb(1.2)112 b(F)-9 b(reeBSD)150
1027 y
SDict begin H.S end
 150 1027 a 150 1027 a
SDict begin 12 H.A end
 150 1027 a 150 1027 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.1.2.1) cvn H.B /DEST pdfmark end
 150
1027 a 100 x Fe(1.2.1)94 b(Similarities)29 b(to)j(Lin)m(ux)150
1180 y
SDict begin H.S end
 150 1180 a 150 1180 a
SDict begin 12 H.A end
 150 1180 a 150 1180 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.1.2.2) cvn H.B /DEST pdfmark end
 150
1180 a 100 x Fe(1.2.2)94 b(Di\013erences)31 b(from)g(Lin)m(ux)150
1334 y
SDict begin H.S end
 150 1334 a 150 1334 a
SDict begin 12 H.A end
 150 1334 a 150 1334 a
SDict begin [ /View [/XYZ H.V] /Dest (section.2) cvn H.B /DEST pdfmark end
 150
1334 a 149 x Fc(2)135 b(Threads)150 1565 y
SDict begin H.S end
 150 1565 a
150 1565 a
SDict begin 12 H.A end
 150 1565 a 150 1565 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.1) cvn H.B /DEST pdfmark end
 150 1565 a 117 x Fb(2.1)112
b(Windo)m(ws)150 1735 y
SDict begin H.S end
 150 1735 a 150 1735 a
SDict begin 12 H.A end
 150 1735
a 150 1735 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.2.1.1) cvn H.B /DEST pdfmark end
 150 1735 a 100 x Fe(2.1.1)94 b(Similarities)29
b(to)j(Lin)m(ux)150 1888 y
SDict begin H.S end
 150 1888 a 150 1888 a
SDict begin 12 H.A end
 150
1888 a 150 1888 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.2.1.2) cvn H.B /DEST pdfmark end
 150 1888 a 100 x Fe(2.1.2)94 b(Di\013erences)31
b(from)g(Lin)m(ux)150 2042 y
SDict begin H.S end
 150 2042 a 150 2042 a
SDict begin 12 H.A end
 150
2042 a 150 2042 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.2.2) cvn H.B /DEST pdfmark end
 150 2042 a 116 x Fb(2.2)112 b(F)-9
b(reeBSD)150 2212 y
SDict begin H.S end
 150 2212 a 150 2212 a
SDict begin 12 H.A end
 150 2212 a
150 2212 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.2.2.1) cvn H.B /DEST pdfmark end
 150 2212 a 99 x Fe(2.2.1)94 b(Similarities)29
b(to)j(Lin)m(ux)150 2365 y
SDict begin H.S end
 150 2365 a 150 2365 a
SDict begin 12 H.A end
 150
2365 a 150 2365 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.2.2.2) cvn H.B /DEST pdfmark end
 150 2365 a 99 x Fe(2.2.2)94 b(Di\013erences)31
b(from)g(Lin)m(ux)150 2518 y
SDict begin H.S end
 150 2518 a 150 2518 a
SDict begin 12 H.A end
 150
2518 a 150 2518 a
SDict begin [ /View [/XYZ H.V] /Dest (section.3) cvn H.B /DEST pdfmark end
 150 2518 a 149 x Fc(3)135 b(CPU)45
b(Sc)l(heduling)150 2773 y
SDict begin H.S end
 150 2773 a 150 2773 a
SDict begin 12 H.A end
 150
2773 a 150 2773 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.1) cvn H.B /DEST pdfmark end
 150 2773 a 93 x Fb(3.1)112 b(Windo)m(ws)150
2920 y
SDict begin H.S end
 150 2920 a 150 2920 a
SDict begin 12 H.A end
 150 2920 a 150 2920 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.3.1.1) cvn H.B /DEST pdfmark end
 150
2920 a 99 x Fe(3.1.1)94 b(Similarities)29 b(to)j(Lin)m(ux)150
3073 y
SDict begin H.S end
 150 3073 a 150 3073 a
SDict begin 12 H.A end
 150 3073 a 150 3073 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.3.1.2) cvn H.B /DEST pdfmark end
 150
3073 a 99 x Fe(3.1.2)94 b(Di\013erences)31 b(from)g(Lin)m(ux)150
3226 y
SDict begin H.S end
 150 3226 a 150 3226 a
SDict begin 12 H.A end
 150 3226 a 150 3226 a
SDict begin [ /View [/XYZ H.V] /Dest (subsection.3.2) cvn H.B /DEST pdfmark end
 150
3226 a 116 x Fb(3.2)112 b(F)-9 b(reeBSD)150 3396 y
SDict begin H.S end
 150
3396 a 150 3396 a
SDict begin 12 H.A end
 150 3396 a 150 3396 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.3.2.1) cvn H.B /DEST pdfmark end
 150 3396 a 100
x Fe(3.2.1)94 b(Similarities)29 b(to)j(Lin)m(ux)150 3549
y
SDict begin H.S end
 150 3549 a 150 3549 a
SDict begin 12 H.A end
 150 3549 a 150 3549 a
SDict begin [ /View [/XYZ H.V] /Dest (subsubsection.3.2.2) cvn H.B /DEST pdfmark end
 150 3549
a 100 x Fe(3.2.2)94 b(Di\013erences)31 b(from)g(Lin)m(ux)p
0 TeXcolorgray 1929 5349 a Fd(2)p 0 TeXcolorgray eop
end
%%Page: 3 4
TeXDict begin 3 3 bop 0 TeXcolorgray 0 0 a
SDict begin /product where{pop product(Distiller)search{pop pop pop version(.)search{exch pop exch pop(3011)eq{gsave newpath 0 0 moveto closepath clip/Courier findfont 10 scalefont setfont 72 72 moveto(.)show grestore}if}{pop}ifelse}{pop}ifelse}if end
 0 0 a 0 TeXcolorgray
0 TeXcolorgray 150 -208 a
SDict begin H.S end
 150 -208 a 0 TeXcolorgray 0
TeXcolorgray 150 -208 a
SDict begin H.R end
 150 -208 a 150 -208 a
SDict begin [ /View [/XYZ H.V] /Dest (page.3) cvn H.B /DEST pdfmark end
 150 -208
a 0 TeXcolorgray 0 TeXcolorgray 291 x Fc(References)150
165 y
SDict begin H.S end
 150 165 a 150 165 a
SDict begin 12 H.A end
 150 165 a 150 165 a
SDict begin [ /View [/XYZ H.V] /Dest (section*.2) cvn H.B /DEST pdfmark end
 150 165
a 150 132 a
SDict begin H.S end
 150 132 a 150 132 a
SDict begin 12 H.A end
 150 132 a 150 132 a
SDict begin [ /View [/XYZ H.V] /Dest (Item.1) cvn H.B /DEST pdfmark end
 150
132 a 0 TeXcolorgray 133 x Fd([1])p 0 TeXcolorgray 41
w(Mark)22 b(E.)h(Russino)n(vic)n(h,)g(Da)n(vid)f(A.)i(Solomon,)f(and)g
(Alex)g(Ionescu.)28 b Fa(Windows)f(internals)p Fd(.)i(Microsoft)23
b(Press,)279 364 y(2012.)p 0 TeXcolorgray 1929 5349 a(3)p
0 TeXcolorgray eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
